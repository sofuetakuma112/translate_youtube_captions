0:00:01.599,0:00:07.359
hi there and welcome to a project video

0:00:04.480,0:00:09.599
where you'll build and deploy a full

0:00:07.359,0:00:12.559
stack chat application with

0:00:09.599,0:00:15.360
authentication and twilio sms

0:00:12.559,0:00:18.960
notifications with direct and group

0:00:15.360,0:00:21.680
chats emojis and reactions built-in gif

0:00:18.960,0:00:24.480
support the ability to edit and delete

0:00:21.680,0:00:27.760
messages specialized commands and much

0:00:24.480,0:00:29.760
more this fully responsive medical pager

0:00:27.760,0:00:32.160
is the best chat application that you

0:00:29.760,0:00:34.160
can currently find on youtube

0:00:32.160,0:00:37.120
in this video you'll work with modern

0:00:34.160,0:00:39.680
technologies such as javascript node

0:00:37.120,0:00:41.920
react and stream

0:00:39.680,0:00:44.239
you'll learn advanced react best

0:00:41.920,0:00:47.520
practices such as folder and file

0:00:44.239,0:00:50.480
structure custom hooks and even react

0:00:47.520,0:00:53.120
context api creating the user interface

0:00:50.480,0:00:56.079
for the login and register page and for

0:00:53.120,0:00:59.199
the entire chat feed you'll also learn

0:00:56.079,0:01:01.680
how to work with stream api stream is

0:00:59.199,0:01:03.920
the number one chat messaging platform

0:01:01.680,0:01:06.560
that allows you to build scalable and

0:01:03.920,0:01:08.720
completely custom chat applications

0:01:06.560,0:01:11.360
using their apis

0:01:08.720,0:01:14.159
we're also going to use twilio to send a

0:01:11.360,0:01:15.680
real sms notification to a user when

0:01:14.159,0:01:18.159
he's offline

0:01:15.680,0:01:20.880
the chat app we'll be building is not a

0:01:18.159,0:01:23.280
general purpose chat it is a medical

0:01:20.880,0:01:25.040
pager themed chat application after

0:01:23.280,0:01:27.119
watching this video you'll be able to

0:01:25.040,0:01:29.439
build any chat application you can think

0:01:27.119,0:01:32.159
of from clones of popular apps like

0:01:29.439,0:01:34.400
whatsapp discord and slack to the fully

0:01:32.159,0:01:36.799
custom messaging platforms

0:01:34.400,0:01:39.360
i initially planned on putting this as a

0:01:36.799,0:01:41.680
paid course but i later decided to

0:01:39.360,0:01:43.040
release it completely free for you guys

0:01:41.680,0:01:45.680
here on youtube

0:01:43.040,0:01:47.920
so to support this video leave a like

0:01:45.680,0:01:49.920
comment and subscribe it shouldn't take

0:01:47.920,0:01:51.439
more than a few seconds and i really

0:01:49.920,0:01:53.600
appreciate it

0:01:51.439,0:01:55.600
in the end we're also going to deploy

0:01:53.600,0:01:57.119
the application so that you can share it

0:01:55.600,0:01:59.920
with your friends put it on your

0:01:57.119,0:02:02.510
portfolio and get a job

0:01:59.920,0:02:08.650
let's get straight into it

0:02:02.510,0:02:08.650
[Music]

0:02:09.840,0:02:14.879
before we begin please allow me to give

0:02:12.160,0:02:17.040
you a quick demo of the application

0:02:14.879,0:02:20.080
as i've mentioned the chat app we'll be

0:02:17.040,0:02:22.080
building is not a general purpose chat

0:02:20.080,0:02:24.800
it's a medical pager themed chat

0:02:22.080,0:02:27.280
application it's an app where doctors

0:02:24.800,0:02:29.280
and medical personnel can communicate to

0:02:27.280,0:02:31.440
ensure that they're always up to date

0:02:29.280,0:02:32.959
with what's happening in their divisions

0:02:31.440,0:02:35.440
of the hospital

0:02:32.959,0:02:37.760
of course this is just one example of

0:02:35.440,0:02:40.080
how versatile stream is

0:02:37.760,0:02:42.400
you can build anything you'd like clones

0:02:40.080,0:02:45.040
of popular applications like discord or

0:02:42.400,0:02:47.519
slack a coding community chat custom

0:02:45.040,0:02:48.800
direct messaging app or anything you can

0:02:47.519,0:02:51.760
think of

0:02:48.800,0:02:54.560
this application consists of two parts a

0:02:51.760,0:02:57.440
login and registration form and a chat

0:02:54.560,0:02:58.480
dashboard so let's check out the login

0:02:57.440,0:03:00.959
form

0:02:58.480,0:03:02.879
when a doctor or a person is signing up

0:03:00.959,0:03:05.519
for the first time they'll have to enter

0:03:02.879,0:03:07.360
their full name username a phone number

0:03:05.519,0:03:11.840
as well so that we can send sms

0:03:07.360,0:03:13.760
notifications avatar url and a password

0:03:11.840,0:03:16.159
once they sign up for the first time

0:03:13.760,0:03:19.760
they'll be added to our database

0:03:16.159,0:03:21.680
then they can simply sign in for example

0:03:19.760,0:03:25.440
dr miller

0:03:21.680,0:03:28.159
we enter the password and click sign in

0:03:25.440,0:03:29.760
as simple as that we are right inside of

0:03:28.159,0:03:32.799
our application

0:03:29.760,0:03:34.720
as you can see it has plenty of features

0:03:32.799,0:03:36.799
there are a lot of chat tutorials on

0:03:34.720,0:03:38.879
youtube but i've never seen this many

0:03:36.799,0:03:41.280
features on a video

0:03:38.879,0:03:44.560
of course we can send messages but we

0:03:41.280,0:03:48.080
can also add reactions to those messages

0:03:44.560,0:03:51.280
there we go we can also reply in treads

0:03:48.080,0:03:52.319
to a specific message so let's say hello

0:03:51.280,0:03:55.760
there

0:03:52.319,0:03:58.319
and like that we have built-in threads

0:03:55.760,0:04:00.319
for replies as you can see right there

0:03:58.319,0:04:02.720
we can also send gifs that's something

0:04:00.319,0:04:05.280
that's pretty new so if you just type

0:04:02.720,0:04:06.560
forward slash giphy and try to do

0:04:05.280,0:04:07.519
something like

0:04:06.560,0:04:09.360
hi

0:04:07.519,0:04:12.000
it's going to give you all the random

0:04:09.360,0:04:12.840
gifs that you can send right inside of

0:04:12.000,0:04:16.880
the

0:04:12.840,0:04:19.680
chat you can also send emojis images and

0:04:16.880,0:04:21.840
you can also embed youtube videos so

0:04:19.680,0:04:23.199
that you can play them right from inside

0:04:21.840,0:04:25.440
of your chat

0:04:23.199,0:04:28.240
we also have a search so you can search

0:04:25.440,0:04:31.759
for different channels and users but

0:04:28.240,0:04:34.880
more importantly the entire chat app is

0:04:31.759,0:04:37.360
completely mobile responsive as you can

0:04:34.880,0:04:39.440
see it has that native like feeling it

0:04:37.360,0:04:42.000
feels like it is a mobile application

0:04:39.440,0:04:43.840
and if you click right here you'll see a

0:04:42.000,0:04:46.320
nice little animation that gives you

0:04:43.840,0:04:47.680
access to all the channels and direct

0:04:46.320,0:04:49.840
messages

0:04:47.680,0:04:52.000
usually it would be extremely hard to

0:04:49.840,0:04:53.759
add so many features to an application

0:04:52.000,0:04:56.720
like this in one video

0:04:53.759,0:04:58.960
but thankfully we are using stream

0:04:56.720,0:05:02.320
as i've mentioned stream is the number

0:04:58.960,0:05:05.280
one chat messaging api infrastructure it

0:05:02.320,0:05:08.400
allows you to build scalable and custom

0:05:05.280,0:05:11.120
chat applications extremely easily we

0:05:08.400,0:05:12.720
can explore their demos we have a social

0:05:11.120,0:05:14.400
messenger example

0:05:12.720,0:05:15.919
the team collaboration one which is

0:05:14.400,0:05:17.520
similar to ours

0:05:15.919,0:05:19.680
customer support

0:05:17.520,0:05:23.120
even live stream chat applications are

0:05:19.680,0:05:24.880
covered and we also have virtual events

0:05:23.120,0:05:26.479
if you want to chat while watching a

0:05:24.880,0:05:28.639
specific stream

0:05:26.479,0:05:31.520
i think you can see how powerful stream

0:05:28.639,0:05:34.080
is and stream is exactly what we'll be

0:05:31.520,0:05:35.840
using in this video with that said i

0:05:34.080,0:05:38.560
think you're pretty excited to start

0:05:35.840,0:05:41.039
coding this application so let's dive

0:05:38.560,0:05:43.759
into coding right away

0:05:41.039,0:05:45.680
let's start by creating an empty folder

0:05:43.759,0:05:48.880
on our desktop i'm going to call it

0:05:45.680,0:05:50.720
medical dash pager of course feel free

0:05:48.880,0:05:52.800
to call it a chat application or

0:05:50.720,0:05:55.199
anything else you'd like once we have

0:05:52.800,0:05:57.919
our folder i've also opened an empty

0:05:55.199,0:06:00.160
visual studio code window of course feel

0:05:57.919,0:06:01.919
free to use any code editor of choice in

0:06:00.160,0:06:03.199
this case we'll be sticking with visual

0:06:01.919,0:06:06.000
studio code

0:06:03.199,0:06:07.840
so simply drag and drop the folder into

0:06:06.000,0:06:09.360
your code editor

0:06:07.840,0:06:12.240
now that you have done that you can

0:06:09.360,0:06:13.840
simply go under view and then terminal

0:06:12.240,0:06:16.400
we're going to use this terminal to

0:06:13.840,0:06:18.240
initialize our react application

0:06:16.400,0:06:20.080
let's clear it

0:06:18.240,0:06:23.759
and now we have to create two different

0:06:20.080,0:06:25.919
directories so let's create a new folder

0:06:23.759,0:06:28.240
this one is going to be called client

0:06:25.919,0:06:30.639
for our client-side react front-end

0:06:28.240,0:06:33.199
application and the other one is going

0:06:30.639,0:06:36.160
to be called server this is going to be

0:06:33.199,0:06:38.160
for our backend node.js server

0:06:36.160,0:06:40.400
in this case we can start off with

0:06:38.160,0:06:43.840
creating the client side so let's cd

0:06:40.400,0:06:48.639
into client and then finally run mpx

0:06:43.840,0:06:50.240
create dash react dash app dot slash

0:06:48.639,0:06:52.639
that slash is going to make sure to

0:06:50.240,0:06:54.639
install our react application right

0:06:52.639,0:06:56.560
inside of the client folder

0:06:54.639,0:06:58.720
now let's click enter

0:06:56.560,0:07:00.160
we're gonna wait a few minutes and i'll

0:06:58.720,0:07:02.479
be right back

0:07:00.160,0:07:05.440
there we go our application has been

0:07:02.479,0:07:07.680
initialized we can clear our terminal to

0:07:05.440,0:07:10.720
start off let's go inside of our client

0:07:07.680,0:07:12.960
folder and delete the source folder now

0:07:10.720,0:07:14.800
every react application needs to have an

0:07:12.960,0:07:16.479
index.js

0:07:14.800,0:07:19.039
where we need to import

0:07:16.479,0:07:21.520
react from react

0:07:19.039,0:07:23.280
we also need to import react dom from

0:07:21.520,0:07:25.599
react dom

0:07:23.280,0:07:27.360
then we can import the app which we

0:07:25.599,0:07:30.560
haven't yet created that's going to be

0:07:27.360,0:07:34.880
import app from that slash app and

0:07:30.560,0:07:37.680
finally we can say react dom dot render

0:07:34.880,0:07:39.880
and we can render our application by

0:07:37.680,0:07:42.000
specifying

0:07:39.880,0:07:42.840
document.getelementbyid and that's going

0:07:42.000,0:07:45.440
to be

0:07:42.840,0:07:47.199
root even though i'm sure that most of

0:07:45.440,0:07:49.680
you understand what this does let me

0:07:47.199,0:07:51.520
quickly explain it our entire react

0:07:49.680,0:07:53.759
application is going to be inside of

0:07:51.520,0:07:56.560
this component and we're going to hook

0:07:53.759,0:07:58.800
that component onto the root div

0:07:56.560,0:08:02.080
and where that would div is is right

0:07:58.800,0:08:04.639
inside of the public and then index.html

0:08:02.080,0:08:06.080
this file might seem a bit weird but if

0:08:04.639,0:08:07.680
we properly

0:08:06.080,0:08:09.440
condense it like this

0:08:07.680,0:08:11.360
remove some comments

0:08:09.440,0:08:14.080
some more comments

0:08:11.360,0:08:17.039
and even more comments and this you'll

0:08:14.080,0:08:19.759
see that this is a simple index html

0:08:17.039,0:08:22.400
page with only one div and inside of

0:08:19.759,0:08:23.360
here our entire react application will

0:08:22.400,0:08:25.520
be

0:08:23.360,0:08:27.919
while we're here we can also change this

0:08:25.520,0:08:30.000
from react app to something like medical

0:08:27.919,0:08:32.000
pager or feel free to change it to

0:08:30.000,0:08:34.800
whatever you'd like

0:08:32.000,0:08:37.039
great now we can go back to our index or

0:08:34.800,0:08:37.719
more specifically we can start creating

0:08:37.039,0:08:40.399
our

0:08:37.719,0:08:43.599
app.jsx component

0:08:40.399,0:08:45.600
inside of here i'm going to use an rafce

0:08:43.599,0:08:48.320
which is react arrow function with

0:08:45.600,0:08:51.040
export so this is simply going to create

0:08:48.320,0:08:52.800
the entire boilerplate for the component

0:08:51.040,0:08:56.080
you can use that same command by

0:08:52.800,0:08:58.080
installing es7 react redux craftql

0:08:56.080,0:08:59.760
snippets so if you install that

0:08:58.080,0:09:01.440
extension you'll have plenty of these

0:08:59.760,0:09:03.040
snippets that you can call to make your

0:09:01.440,0:09:04.800
work easier

0:09:03.040,0:09:07.360
with that said we have nothing more than

0:09:04.800,0:09:10.080
a simple functional component inside of

0:09:07.360,0:09:11.279
there for now let's simply create an h1

0:09:10.080,0:09:12.320
and say

0:09:11.279,0:09:13.360
medical

0:09:12.320,0:09:16.480
pager

0:09:13.360,0:09:19.279
chat application great now we have our

0:09:16.480,0:09:21.760
index we have our app.js and the last

0:09:19.279,0:09:23.680
thing we need is to install all of the

0:09:21.760,0:09:25.519
necessary dependencies

0:09:23.680,0:09:27.839
there are only three most important

0:09:25.519,0:09:30.640
dependencies that we're gonna need so

0:09:27.839,0:09:35.120
you can say npm install and these are

0:09:30.640,0:09:36.399
gonna be stream dash chat also stream

0:09:35.120,0:09:40.240
dash chat

0:09:36.399,0:09:42.560
dash react and finally universal

0:09:40.240,0:09:45.120
dash cookie we're gonna use cookies to

0:09:42.560,0:09:47.440
save the user information in the browser

0:09:45.120,0:09:49.920
if you press enter this is going to

0:09:47.440,0:09:52.080
install these three dependencies not a

0:09:49.920,0:09:54.160
lot only three but these are going to

0:09:52.080,0:09:55.440
help us to create our entire chat

0:09:54.160,0:09:57.440
application

0:09:55.440,0:09:59.839
while this is installing i wanted to

0:09:57.440,0:10:02.160
quickly show you that we have the entire

0:09:59.839,0:10:04.640
code for this project under project

0:10:02.160,0:10:06.720
medical pager on github the link is

0:10:04.640,0:10:08.880
going to be down in the description if

0:10:06.720,0:10:10.880
you ever get stuck or something is not

0:10:08.880,0:10:12.800
working as it should definitely make

0:10:10.880,0:10:15.680
sure to check it out and compare the

0:10:12.800,0:10:17.600
code even clone it if you need to if you

0:10:15.680,0:10:19.760
like the project definitely make sure to

0:10:17.600,0:10:21.760
leave a star as well

0:10:19.760,0:10:23.920
with that said while our dependencies

0:10:21.760,0:10:26.800
are still installing we can go ahead to

0:10:23.920,0:10:28.640
stream and create a free account we're

0:10:26.800,0:10:30.079
definitely gonna need it the link to

0:10:28.640,0:10:31.279
stream is going to be down in the

0:10:30.079,0:10:33.440
description

0:10:31.279,0:10:34.240
now that we're here let's click try for

0:10:33.440,0:10:36.000
free

0:10:34.240,0:10:38.959
inside of here you'll of course have to

0:10:36.000,0:10:38.959
enter your email

0:10:39.279,0:10:44.160
also your organization name or your full

0:10:41.760,0:10:47.519
name i'm just gonna do javascript dash

0:10:44.160,0:10:48.720
mastery and finally your password

0:10:47.519,0:10:52.800
now that you've entered all the

0:10:48.720,0:10:52.800
information simply click get started

0:10:52.880,0:10:57.519
and with that you're already welcome to

0:10:54.959,0:10:58.959
stream on the top right you can click go

0:10:57.519,0:11:01.040
to dashboard

0:10:58.959,0:11:03.440
there we go our demo production

0:11:01.040,0:11:05.680
application has been created there is

0:11:03.440,0:11:08.079
our key and our secret which we're gonna

0:11:05.680,0:11:10.399
use soon enough to create our entire

0:11:08.079,0:11:12.880
chat application for now you can leave

0:11:10.399,0:11:15.120
this page open and let's go back to our

0:11:12.880,0:11:16.880
code editor our packages have been

0:11:15.120,0:11:19.839
installed and we are ready to start

0:11:16.880,0:11:22.720
creating this app so let's close this

0:11:19.839,0:11:23.920
and this and we only need app.jsx for

0:11:22.720,0:11:25.839
now

0:11:23.920,0:11:27.360
inside of here we'll have to import a

0:11:25.839,0:11:30.399
few things that we're going to use later

0:11:27.360,0:11:31.760
on to connect to stream chat so let's

0:11:30.399,0:11:33.600
say import

0:11:31.760,0:11:36.560
stream chat

0:11:33.600,0:11:38.560
from stream dash chat

0:11:36.560,0:11:41.040
and we're going to also need the react

0:11:38.560,0:11:44.560
component which is going to be import

0:11:41.040,0:11:46.079
chat in curly braces from stream chat

0:11:44.560,0:11:48.240
react

0:11:46.079,0:11:50.880
later on in our app we're also going to

0:11:48.240,0:11:52.079
use cookies so we can say import

0:11:50.880,0:11:54.880
cookies

0:11:52.079,0:11:57.680
from universal cookie

0:11:54.880,0:11:59.680
great now we have all the imports right

0:11:57.680,0:12:01.760
here

0:11:59.680,0:12:05.839
to set up our chat we're gonna need an

0:12:01.760,0:12:08.160
api key so we can say const api key is

0:12:05.839,0:12:10.160
going to be equal to and now we need to

0:12:08.160,0:12:11.279
find this key inside of our stream

0:12:10.160,0:12:13.760
dashboard

0:12:11.279,0:12:15.440
as you can see the key is right here you

0:12:13.760,0:12:18.079
can simply copy it

0:12:15.440,0:12:21.040
go back and paste it right here we're

0:12:18.079,0:12:22.480
going to use this to initialize our chat

0:12:21.040,0:12:24.959
now that we have that we're going to

0:12:22.480,0:12:27.120
remove this h1 and we're going to give a

0:12:24.959,0:12:30.000
class name to this div

0:12:27.120,0:12:32.880
div class name is going to be equal to a

0:12:30.000,0:12:34.480
string of app underscore underscore

0:12:32.880,0:12:36.160
wrapper

0:12:34.480,0:12:39.839
and inside of there we're going to

0:12:36.160,0:12:41.760
render dot chat application

0:12:39.839,0:12:44.000
chat is not going to be a self-closing

0:12:41.760,0:12:46.000
tag we're gonna put something in there

0:12:44.000,0:12:48.399
more specifically we have to put the

0:12:46.000,0:12:50.560
channel container and the channel list

0:12:48.399,0:12:53.279
container these are all going to be

0:12:50.560,0:12:56.000
components that we are going to create

0:12:53.279,0:12:58.480
so let's simply specify them right now

0:12:56.000,0:13:00.000
we're going to have a channel list

0:12:58.480,0:13:01.760
container

0:13:00.000,0:13:04.079
which is going to be a self-closing

0:13:01.760,0:13:05.519
component and below that we're also

0:13:04.079,0:13:07.040
going to have

0:13:05.519,0:13:08.399
channel

0:13:07.040,0:13:10.560
container

0:13:08.399,0:13:12.240
again we don't yet have those components

0:13:10.560,0:13:13.519
but we're going to create them right

0:13:12.240,0:13:15.519
away

0:13:13.519,0:13:18.800
also for this chat to work we need to

0:13:15.519,0:13:20.800
create an instance of a stream chat so

0:13:18.800,0:13:23.600
we can do that right here above our

0:13:20.800,0:13:24.639
component we can say const client is

0:13:23.600,0:13:26.240
equal to

0:13:24.639,0:13:28.560
stream chat

0:13:26.240,0:13:30.480
dot get instance

0:13:28.560,0:13:34.720
and then we can call that as a function

0:13:30.480,0:13:39.360
and pass in the api key finally we can

0:13:34.720,0:13:40.959
specify client is equal to client

0:13:39.360,0:13:43.360
we can also choose a theme of our

0:13:40.959,0:13:45.920
application in our case i'm going to say

0:13:43.360,0:13:46.800
theme is equal to team

0:13:45.920,0:13:48.160
lite

0:13:46.800,0:13:50.240
this is going to make our chat

0:13:48.160,0:13:51.279
application look a bit better right out

0:13:50.240,0:13:53.760
of the box

0:13:51.279,0:13:56.480
okay we've set some things up but we

0:13:53.760,0:13:58.639
don't have access to these components so

0:13:56.480,0:14:01.279
what might be best is to create a

0:13:58.639,0:14:04.399
components folder right away

0:14:01.279,0:14:06.560
and to create the basic structure of all

0:14:04.399,0:14:08.880
the components that we're going to have

0:14:06.560,0:14:10.880
there are going to be quite a lot but if

0:14:08.880,0:14:12.959
we nail down all the components and the

0:14:10.880,0:14:14.800
imports at the start of the video it's

0:14:12.959,0:14:16.959
going to be so much easier to simply

0:14:14.800,0:14:19.040
keep using them later on

0:14:16.959,0:14:20.800
so inside of the components folder we

0:14:19.040,0:14:22.959
can first create two components the

0:14:20.800,0:14:24.160
channel container and the channel list

0:14:22.959,0:14:25.839
container

0:14:24.160,0:14:27.199
so right here

0:14:25.839,0:14:30.079
new file

0:14:27.199,0:14:31.440
channel container.jsx

0:14:30.079,0:14:32.720
and also

0:14:31.440,0:14:34.360
channel

0:14:32.720,0:14:36.160
list

0:14:34.360,0:14:38.000
container.jsx

0:14:36.160,0:14:41.279
and you guys often ask me what is the

0:14:38.000,0:14:42.160
difference between js and jsx there is

0:14:41.279,0:14:45.120
none

0:14:42.160,0:14:47.760
i just prefer to use jsx for whenever a

0:14:45.120,0:14:50.000
file is a react component that way it's

0:14:47.760,0:14:52.079
easier to differentiate them

0:14:50.000,0:14:54.480
okay with that said we can create a

0:14:52.079,0:14:56.480
simple react arrow function component

0:14:54.480,0:14:58.399
and we can specify the name of that

0:14:56.480,0:15:00.079
component like this

0:14:58.399,0:15:02.160
now that we have it it's going to be

0:15:00.079,0:15:04.160
simple to simply copy and paste this

0:15:02.160,0:15:05.279
across all the components we are about

0:15:04.160,0:15:07.440
to create

0:15:05.279,0:15:09.199
we can paste it here as well

0:15:07.440,0:15:12.240
and you can double click the name of the

0:15:09.199,0:15:14.079
component press ctrl f and then simply

0:15:12.240,0:15:16.800
change it to something else

0:15:14.079,0:15:18.399
in this case that's going to be channel

0:15:16.800,0:15:20.000
list

0:15:18.399,0:15:21.519
container

0:15:20.000,0:15:23.600
great

0:15:21.519,0:15:26.800
the two components we need right now are

0:15:23.600,0:15:29.519
done so if we go to app.js we can simply

0:15:26.800,0:15:30.639
try to import them like import that's

0:15:29.519,0:15:34.160
going to be

0:15:30.639,0:15:36.639
channel like this let me just copy it

0:15:34.160,0:15:38.639
channel list container i misspelled it

0:15:36.639,0:15:41.839
there so let's fix it channel list

0:15:38.639,0:15:45.040
container from dot slash components

0:15:41.839,0:15:47.440
slash channel list container and the

0:15:45.040,0:15:48.959
other one is simply going to be

0:15:47.440,0:15:50.320
channel

0:15:48.959,0:15:53.360
container

0:15:50.320,0:15:56.480
great as you can see we only have two so

0:15:53.360,0:15:58.399
this is fine two imports two lines but

0:15:56.480,0:16:00.720
later on we're going to have so many

0:15:58.399,0:16:02.079
more imports and it's going to look like

0:16:00.720,0:16:04.399
something like this

0:16:02.079,0:16:06.480
this is not what we want so we're going

0:16:04.399,0:16:08.320
to create a system for imports that's

0:16:06.480,0:16:09.600
going to make her life easier in the

0:16:08.320,0:16:11.759
long run

0:16:09.600,0:16:14.720
if we go in our components folder and

0:16:11.759,0:16:16.880
create a new index.js file inside of

0:16:14.720,0:16:19.600
there we'll be able to export all the

0:16:16.880,0:16:22.560
components automatically we can do that

0:16:19.600,0:16:24.639
by saying export curly braces

0:16:22.560,0:16:27.279
default as and then the name of the

0:16:24.639,0:16:30.800
component something like channel

0:16:27.279,0:16:33.440
container from and then we point to that

0:16:30.800,0:16:36.320
file we can now duplicate this and

0:16:33.440,0:16:37.279
inside of here this is going to be

0:16:36.320,0:16:39.360
channel

0:16:37.279,0:16:41.519
list container

0:16:39.360,0:16:43.600
great now these components are being

0:16:41.519,0:16:46.240
exported straight from the components

0:16:43.600,0:16:47.600
folder and inside of our app we can say

0:16:46.240,0:16:50.399
something like this

0:16:47.600,0:16:51.279
import now in curly braces that's going

0:16:50.399,0:16:54.160
to be

0:16:51.279,0:16:55.360
channel list container and also channel

0:16:54.160,0:16:58.800
container

0:16:55.360,0:17:01.040
straight from dot slash components

0:16:58.800,0:17:02.800
we don't need to add any file names

0:17:01.040,0:17:05.360
because everything is being exported

0:17:02.800,0:17:08.160
from there and now all of the imports

0:17:05.360,0:17:10.160
are being done in one line

0:17:08.160,0:17:12.240
there we go

0:17:10.160,0:17:13.839
again i know this was a bit of work but

0:17:12.240,0:17:15.919
it's going to make our life so much

0:17:13.839,0:17:17.839
easier later on

0:17:15.919,0:17:20.240
at this point we should already see

0:17:17.839,0:17:23.120
something on the screen so let's open up

0:17:20.240,0:17:24.799
our terminal by going to view terminal

0:17:23.120,0:17:28.000
clearing the console

0:17:24.799,0:17:29.760
and simply running npm start

0:17:28.000,0:17:33.200
this is going to start our application

0:17:29.760,0:17:35.520
on localhost 3000. there we go our

0:17:33.200,0:17:37.919
application started but as you can see

0:17:35.520,0:17:41.039
we don't have anything on the screen yet

0:17:37.919,0:17:43.679
besides these two text elements so let's

0:17:41.039,0:17:45.840
go ahead and add some styles to fix that

0:17:43.679,0:17:47.200
at the end this application is going to

0:17:45.840,0:17:49.520
look great

0:17:47.200,0:17:51.440
but to keep this video focused and

0:17:49.520,0:17:53.360
extremely informational only about

0:17:51.440,0:17:55.919
building chat applications i'm going to

0:17:53.360,0:17:56.720
provide you with the entire css style

0:17:55.919,0:17:58.880
sheet

0:17:56.720,0:18:01.520
we're going to use the bem methodology

0:17:58.880,0:18:04.400
bem is a css methodology that kind of

0:18:01.520,0:18:07.120
helps everybody understand how css class

0:18:04.400,0:18:08.880
names are made we first have the block

0:18:07.120,0:18:10.880
and then we have underscores with the

0:18:08.880,0:18:13.360
element and then finally we have

0:18:10.880,0:18:15.440
modifiers so you're going to learn how

0:18:13.360,0:18:17.360
to write these class names but i'm going

0:18:15.440,0:18:19.600
to provide you with the styles

0:18:17.360,0:18:22.240
to create the styles we can go inside of

0:18:19.600,0:18:24.640
our source folder and create a file

0:18:22.240,0:18:26.320
called app.css

0:18:24.640,0:18:27.760
inside of there we're going to paste our

0:18:26.320,0:18:29.360
styles

0:18:27.760,0:18:30.400
all of the styles for our application

0:18:29.360,0:18:32.799
are here

0:18:30.400,0:18:34.640
you can find these styles and all of the

0:18:32.799,0:18:37.039
links mentioned in this video are going

0:18:34.640,0:18:38.960
to be right below in the description so

0:18:37.039,0:18:41.600
just make sure to check that gist and

0:18:38.960,0:18:43.840
simply copy and paste these styles right

0:18:41.600,0:18:46.880
into the app.css

0:18:43.840,0:18:49.039
then we can go inside of our app.jsx

0:18:46.880,0:18:50.400
and right inside of here you can simply

0:18:49.039,0:18:51.640
say import

0:18:50.400,0:18:53.200
dot slash

0:18:51.640,0:18:54.880
app.css

0:18:53.200,0:18:56.960
this is going to import all of our

0:18:54.880,0:18:59.919
styles and we'll be able to use these

0:18:56.960,0:19:02.240
class names to immediately apply them

0:18:59.919,0:19:03.919
great let's check out if this made any

0:19:02.240,0:19:05.760
changes already

0:19:03.919,0:19:07.760
no nothing special that we can see it

0:19:05.760,0:19:10.160
just removed some margins and made

0:19:07.760,0:19:12.559
everything appear in a list but of

0:19:10.160,0:19:14.559
course as we add more styles and class

0:19:12.559,0:19:16.160
names this application will start to

0:19:14.559,0:19:18.559
look phenomenal

0:19:16.160,0:19:20.880
with that said the basic layout of our

0:19:18.559,0:19:23.200
application has been created now is the

0:19:20.880,0:19:25.520
time that we keep adding more jsx more

0:19:23.200,0:19:27.520
structure but more importantly keep

0:19:25.520,0:19:29.760
getting into the logic of how we can

0:19:27.520,0:19:31.760
implement our chat application

0:19:29.760,0:19:34.000
let's start with creating our channel

0:19:31.760,0:19:35.520
list container which is basically our

0:19:34.000,0:19:38.640
sidebar

0:19:35.520,0:19:42.080
now let's first import a few things from

0:19:38.640,0:19:43.120
stream chat react we can import a

0:19:42.080,0:19:48.240
channel

0:19:43.120,0:19:50.960
list component and also use chat context

0:19:48.240,0:19:54.400
that's going to be coming from stream

0:19:50.960,0:19:56.160
dash chat dash react

0:19:54.400,0:19:57.919
then we can import

0:19:56.160,0:20:01.600
a few components that we are going to

0:19:57.919,0:20:02.799
create ourselves something like channel

0:20:01.600,0:20:05.440
search

0:20:02.799,0:20:06.640
also team channel

0:20:05.440,0:20:10.799
list

0:20:06.640,0:20:13.520
and finally team channel preview

0:20:10.799,0:20:16.240
these components will be coming from dot

0:20:13.520,0:20:18.320
slash from r components

0:20:16.240,0:20:20.240
and finally in this component as well

0:20:18.320,0:20:21.360
we're going to use cookies so we can say

0:20:20.240,0:20:24.320
import

0:20:21.360,0:20:26.559
cookies from universal

0:20:24.320,0:20:28.400
cookie great

0:20:26.559,0:20:31.440
now that we have that let's start

0:20:28.400,0:20:33.520
creating our jsx for the sidebar so

0:20:31.440,0:20:35.840
above our current channel list component

0:20:33.520,0:20:38.240
we can create a new functional component

0:20:35.840,0:20:40.320
which is going to be called sidebar

0:20:38.240,0:20:42.480
our sidebar can have an instant return

0:20:40.320,0:20:44.080
so just parentheses right there and then

0:20:42.480,0:20:45.840
inside of there we can start creating

0:20:44.080,0:20:47.760
some jsx

0:20:45.840,0:20:50.559
first we're going to have a div that's

0:20:47.760,0:20:53.600
going to have a class name equal to

0:20:50.559,0:20:54.640
channel dash list underscore underscore

0:20:53.600,0:20:56.640
sidebar

0:20:54.640,0:20:59.440
and inside of that div we're going to

0:20:56.640,0:21:01.600
have one more div which is going to have

0:20:59.440,0:21:04.400
a class name which is going to be equal

0:21:01.600,0:21:06.799
to channel dash list underscore

0:21:04.400,0:21:08.720
underscore sidebar underscore underscore

0:21:06.799,0:21:11.360
icon 1

0:21:08.720,0:21:14.240
and just one more div inside of it this

0:21:11.360,0:21:18.159
div is going to have a class name equal

0:21:14.240,0:21:21.200
to icon 1 underscore underscore inner

0:21:18.159,0:21:22.880
great finally we have that icon so

0:21:21.200,0:21:25.280
that's going to be an image which is a

0:21:22.880,0:21:28.840
self-closing tag it's going to have a

0:21:25.280,0:21:31.120
source src equal to

0:21:28.840,0:21:32.480
hospital icon

0:21:31.120,0:21:34.080
this is the icon that we're going to

0:21:32.480,0:21:35.600
import right away

0:21:34.080,0:21:38.080
and it's going to have the alternative

0:21:35.600,0:21:41.039
text equal to hospital

0:21:38.080,0:21:42.320
and finally it can have width equal to

0:21:41.039,0:21:44.640
30.

0:21:42.320,0:21:46.400
great now that we're here let's also

0:21:44.640,0:21:49.760
import that icon

0:21:46.400,0:21:51.120
just at the top we can say import

0:21:49.760,0:21:52.320
hospital

0:21:51.120,0:21:53.360
icon

0:21:52.320,0:21:58.480
from

0:21:53.360,0:22:00.400
dot slash assets slash hospital dot png

0:21:58.480,0:22:02.960
as you can see we don't yet have the

0:22:00.400,0:22:05.919
assets folder so let's create it right

0:22:02.960,0:22:07.919
now above the components right inside of

0:22:05.919,0:22:10.720
the source folder you'll be able to

0:22:07.919,0:22:12.720
simply paste the assets folder

0:22:10.720,0:22:14.720
as with all the other files mentioned

0:22:12.720,0:22:16.400
the assets folder is going to be linked

0:22:14.720,0:22:19.200
in the description

0:22:16.400,0:22:21.600
great as you can see that assets contain

0:22:19.200,0:22:24.159
a few svgs which are going to be our

0:22:21.600,0:22:28.400
icons and then it also contains a few

0:22:24.159,0:22:31.120
png icons screens and images

0:22:28.400,0:22:33.440
great now we can use that icon

0:22:31.120,0:22:35.840
now i'm going to copy this sidebar icon

0:22:33.440,0:22:38.159
1 and duplicate it below

0:22:35.840,0:22:39.200
this time it's going to be sidebar icon

0:22:38.159,0:22:40.880
2

0:22:39.200,0:22:43.600
icon one enter is going to remain the

0:22:40.880,0:22:45.679
same but this time we're gonna have a

0:22:43.600,0:22:49.039
logout icon

0:22:45.679,0:22:51.280
also the alt is going to be equal to log

0:22:49.039,0:22:52.559
out and the width is going to be 30

0:22:51.280,0:22:54.480
pixels

0:22:52.559,0:22:57.200
for now we can simply duplicate this

0:22:54.480,0:23:00.799
line and say import

0:22:57.200,0:23:02.880
logout icon from and that's going to be

0:23:00.799,0:23:06.000
logout.png

0:23:02.880,0:23:07.760
great this is it for our sidebar now we

0:23:06.000,0:23:10.400
can go inside of our channel list

0:23:07.760,0:23:13.200
container i'm gonna make this div a

0:23:10.400,0:23:16.000
simple react fragment and then inside of

0:23:13.200,0:23:18.159
there we're gonna render that sidebar

0:23:16.000,0:23:20.240
as a self-closing tag

0:23:18.159,0:23:21.520
make sure it's spelled correctly and

0:23:20.240,0:23:23.280
there we go

0:23:21.520,0:23:25.679
of course we could have put the entire

0:23:23.280,0:23:27.600
code right there but as our code is

0:23:25.679,0:23:29.919
going to get more complicated we want to

0:23:27.600,0:23:32.799
differentiate different parts of jsx to

0:23:29.919,0:23:34.640
make it easier for people to read

0:23:32.799,0:23:36.960
now that they've done that let's go into

0:23:34.640,0:23:39.200
our browser and let's check it out

0:23:36.960,0:23:41.520
as you can see this already looks just a

0:23:39.200,0:23:43.679
bit better now we no longer have the

0:23:41.520,0:23:45.919
channel list container which is actually

0:23:43.679,0:23:47.200
just the navigation bar and now we're

0:23:45.919,0:23:49.600
displaying it

0:23:47.200,0:23:51.039
now let's keep adding more things to our

0:23:49.600,0:23:52.880
navigation bar

0:23:51.039,0:23:55.360
the second thing we're going to add is

0:23:52.880,0:23:57.440
going to be another functional component

0:23:55.360,0:23:59.120
called company

0:23:57.440,0:24:01.679
header

0:23:59.120,0:24:04.240
again just a functional component with

0:24:01.679,0:24:06.240
an instant return just parentheses and

0:24:04.240,0:24:07.679
then inside of there we're gonna have a

0:24:06.240,0:24:10.080
div

0:24:07.679,0:24:13.600
that div is going to have a class name

0:24:10.080,0:24:15.200
equal to channel dash list underscore

0:24:13.600,0:24:17.120
underscore header

0:24:15.200,0:24:19.679
and inside of there we're gonna have

0:24:17.120,0:24:22.559
just one paragraph tag which is going to

0:24:19.679,0:24:24.960
have a class name equal to

0:24:22.559,0:24:27.120
channel dash list underscore underscore

0:24:24.960,0:24:28.400
header and then underscore underscore

0:24:27.120,0:24:31.039
text

0:24:28.400,0:24:34.000
again this is going to be a medical

0:24:31.039,0:24:36.559
pager so we can specify that there

0:24:34.000,0:24:39.679
finally we're gonna render that company

0:24:36.559,0:24:42.720
header right inside of div below the

0:24:39.679,0:24:44.880
sidebar so we can create that div give

0:24:42.720,0:24:47.919
it a class name which is going to be

0:24:44.880,0:24:49.919
equal to channel dash list underscore

0:24:47.919,0:24:50.960
underscore list underscore underscore

0:24:49.919,0:24:53.200
wrapper

0:24:50.960,0:24:55.440
and right inside of that list we can

0:24:53.200,0:24:57.760
render our company header

0:24:55.440,0:25:00.480
let's save it and take a look as you can

0:24:57.760,0:25:02.559
see we added this entire portion and

0:25:00.480,0:25:05.120
just below we'll be able to display our

0:25:02.559,0:25:07.760
search and all of the channels

0:25:05.120,0:25:09.919
so as you can see stream is not simply

0:25:07.760,0:25:12.480
building everything out for you

0:25:09.919,0:25:14.159
it's giving you access to the apis which

0:25:12.480,0:25:16.400
are going to allow you to search

0:25:14.159,0:25:18.880
channels create channels send messages

0:25:16.400,0:25:21.200
and everything else but you actually

0:25:18.880,0:25:24.559
create the jsx the layout and the

0:25:21.200,0:25:27.360
styling for your application

0:25:24.559,0:25:29.760
now let's implement these three most

0:25:27.360,0:25:31.919
important components the channel search

0:25:29.760,0:25:32.960
theme channel list and team channel

0:25:31.919,0:25:35.440
preview

0:25:32.960,0:25:37.679
we can start with channel search i'm

0:25:35.440,0:25:41.679
going to go to our components folder

0:25:37.679,0:25:43.200
create a new file called channel

0:25:41.679,0:25:45.279
jsx

0:25:43.200,0:25:47.279
of course as soon as i created i'm gonna

0:25:45.279,0:25:50.480
duplicate one more line inside of our

0:25:47.279,0:25:51.679
index and i'm gonna add our channel

0:25:50.480,0:25:53.279
search

0:25:51.679,0:25:55.440
right there

0:25:53.279,0:25:58.000
don't forget to do that because this

0:25:55.440,0:25:58.880
import right here is not going to work

0:25:58.000,0:26:01.360
then

0:25:58.880,0:26:03.120
with that said how do we implement a

0:26:01.360,0:26:05.360
channel search

0:26:03.120,0:26:07.200
well our channel search is going to be a

0:26:05.360,0:26:09.200
functional component so we can simply

0:26:07.200,0:26:11.760
import react create that functional

0:26:09.200,0:26:14.159
component and export it

0:26:11.760,0:26:17.840
alongside react we're going to also need

0:26:14.159,0:26:20.559
use state and use effect hooks

0:26:17.840,0:26:24.720
and we're going to need the context from

0:26:20.559,0:26:26.799
stream chat react so we can say use chat

0:26:24.720,0:26:29.200
context and that's going to be coming

0:26:26.799,0:26:30.080
from stream

0:26:29.200,0:26:32.559
chat

0:26:30.080,0:26:34.640
react

0:26:32.559,0:26:37.360
inside of here we're also going to have

0:26:34.640,0:26:39.520
one icon so we can say import in curly

0:26:37.360,0:26:42.320
braces search

0:26:39.520,0:26:43.679
icon and that's going to be coming from

0:26:42.320,0:26:45.279
dot slash

0:26:43.679,0:26:47.600
assets

0:26:45.279,0:26:49.039
great now let's start creating the jsx

0:26:47.600,0:26:51.840
for our search

0:26:49.039,0:26:53.120
this div is going to have a class name

0:26:51.840,0:26:54.640
equal to

0:26:53.120,0:26:55.919
channel

0:26:54.640,0:26:58.480
dash search

0:26:55.919,0:27:00.320
underscore underscore container

0:26:58.480,0:27:03.039
inside of that div we're going to have

0:27:00.320,0:27:06.240
yet another div and this div is going to

0:27:03.039,0:27:07.600
have a class name equal to channel dash

0:27:06.240,0:27:09.520
search

0:27:07.600,0:27:12.080
underscore underscore input

0:27:09.520,0:27:14.400
underscore underscore wrapper

0:27:12.080,0:27:16.960
now inside of that we're gonna have one

0:27:14.400,0:27:19.600
more div and this div is finally going

0:27:16.960,0:27:22.240
to have a class name of channel

0:27:19.600,0:27:24.399
dash search underscore underscore input

0:27:22.240,0:27:27.440
underscore underscore icon

0:27:24.399,0:27:28.799
in there we can place our svg icon by

0:27:27.440,0:27:31.279
saying search

0:27:28.799,0:27:32.640
icon and calling it like a self closing

0:27:31.279,0:27:34.880
tag

0:27:32.640,0:27:37.440
now of course below this div we can

0:27:34.880,0:27:40.399
actually place our input so i'm going to

0:27:37.440,0:27:43.279
say input and it's going to have its own

0:27:40.399,0:27:46.080
class name which is going to be equal to

0:27:43.279,0:27:48.159
channel dash search underscore

0:27:46.080,0:27:49.760
underscore input underscore underscore

0:27:48.159,0:27:51.200
text

0:27:49.760,0:27:53.520
of course we'll have to provide it with

0:27:51.200,0:27:56.240
a few more properties things like a

0:27:53.520,0:27:59.440
placeholder equal to search

0:27:56.240,0:28:00.960
a type equal to text and finally we have

0:27:59.440,0:28:03.440
to give it a value

0:28:00.960,0:28:04.960
and also the on change

0:28:03.440,0:28:07.120
now that we can see we have a lot of

0:28:04.960,0:28:10.720
props on this component i'm gonna simply

0:28:07.120,0:28:13.760
space them out each in its own row

0:28:10.720,0:28:16.399
okay so as we said input has two most

0:28:13.760,0:28:18.880
important things and those are value

0:28:16.399,0:28:21.600
and on change

0:28:18.880,0:28:24.080
so what value is this input going to

0:28:21.600,0:28:26.159
have well it's going to be query the

0:28:24.080,0:28:28.399
search query we're looking for

0:28:26.159,0:28:30.880
and what are we going to do on change

0:28:28.399,0:28:32.159
well we're going to call the on search

0:28:30.880,0:28:35.120
function

0:28:32.159,0:28:37.679
so just above let's create that query

0:28:35.120,0:28:40.080
state field i'm going to say const

0:28:37.679,0:28:44.640
open pair of square brackets and that's

0:28:40.080,0:28:47.039
going to be query and set query is equal

0:28:44.640,0:28:49.200
to use state

0:28:47.039,0:28:51.919
and at the start we can set it up to be

0:28:49.200,0:28:54.399
empty string

0:28:51.919,0:28:56.799
below that let's create that method for

0:28:54.399,0:28:59.840
getting our search so we can say const

0:28:56.799,0:29:01.760
on search is equal to we're going to get

0:28:59.840,0:29:05.679
an event there

0:29:01.760,0:29:07.240
and what we can do is simply

0:29:05.679,0:29:09.520
first call the

0:29:07.240,0:29:11.200
event.preventdefault we have to do this

0:29:09.520,0:29:13.440
every time that you have an input or

0:29:11.200,0:29:15.600
buttons or things like that

0:29:13.440,0:29:17.440
because the usual browser behavior is

0:29:15.600,0:29:20.000
whenever you click submit or something

0:29:17.440,0:29:21.919
similar to reload the page we're working

0:29:20.000,0:29:24.240
with react we want everything to be

0:29:21.919,0:29:26.480
reactive instantaneous and we want to

0:29:24.240,0:29:27.760
prevent that so that is what this line

0:29:26.480,0:29:29.919
is doing

0:29:27.760,0:29:32.080
now that we have that what we can do is

0:29:29.919,0:29:33.360
we can also set the loading to be equal

0:29:32.080,0:29:35.039
to true

0:29:33.360,0:29:37.120
of course the loading is going to be

0:29:35.039,0:29:40.159
another state so i'm going to duplicate

0:29:37.120,0:29:44.559
this one and simply create a state field

0:29:40.159,0:29:46.720
of loading and set loading at the start

0:29:44.559,0:29:49.200
our loading is going to be set to false

0:29:46.720,0:29:50.799
so we can do that right here

0:29:49.200,0:29:53.679
now that we've set the loading to true

0:29:50.799,0:29:56.480
we can finally set the query so what

0:29:53.679,0:29:58.679
exactly are we searching for well we're

0:29:56.480,0:30:01.279
searching for

0:29:58.679,0:30:02.640
event.target.value remember in react

0:30:01.279,0:30:04.960
whenever you type something into the

0:30:02.640,0:30:08.240
input you get the value of that text

0:30:04.960,0:30:09.919
under the event target value and finally

0:30:08.240,0:30:12.640
the last thing we want to do is we want

0:30:09.919,0:30:17.440
to get the chat channels for that we can

0:30:12.640,0:30:19.600
call a new function called get channels

0:30:17.440,0:30:22.000
to that function we of course also have

0:30:19.600,0:30:25.520
to provide the searched query so we can

0:30:22.000,0:30:26.720
simply say event target value one more

0:30:25.520,0:30:28.799
time

0:30:26.720,0:30:31.520
of course you can see this function is

0:30:28.799,0:30:33.760
not yet existent so let's create it

0:30:31.520,0:30:35.679
const get channels

0:30:33.760,0:30:36.399
this function is going to be an async

0:30:35.679,0:30:38.399
function

0:30:36.399,0:30:40.159
because we have to wait for the channels

0:30:38.399,0:30:41.760
to be fetched

0:30:40.159,0:30:44.399
now that we have that it's going to

0:30:41.760,0:30:46.960
accept the text we're searching for and

0:30:44.399,0:30:49.760
inside of here we can open a try and

0:30:46.960,0:30:51.919
catch block we'll try to get the actual

0:30:49.760,0:30:52.960
channels if we cannot we'll go to the

0:30:51.919,0:30:55.440
error

0:30:52.960,0:30:58.000
so if we have an error we can simply set

0:30:55.440,0:30:59.519
the query to be equal to nothing just

0:30:58.000,0:31:01.840
reset the search

0:30:59.519,0:31:02.799
but how exactly are we gonna get the

0:31:01.840,0:31:05.600
channels

0:31:02.799,0:31:07.600
well we have to do that later on because

0:31:05.600,0:31:08.960
we haven't yet set up our entire chat

0:31:07.600,0:31:11.200
application

0:31:08.960,0:31:15.120
so i'm simply going to add a to do right

0:31:11.200,0:31:16.960
here and i'm going to say fetch channels

0:31:15.120,0:31:19.120
by the way if you're wondering why is

0:31:16.960,0:31:20.640
this comment orange that's because i'm

0:31:19.120,0:31:23.200
using an extension called better

0:31:20.640,0:31:24.960
comments i find it to be pretty useful

0:31:23.200,0:31:26.240
if you want to have a to-do you can just

0:31:24.960,0:31:28.399
type to do

0:31:26.240,0:31:29.200
or you can make something green like

0:31:28.399,0:31:31.679
this

0:31:29.200,0:31:32.720
or even add an exclamation mark to make

0:31:31.679,0:31:34.799
it red

0:31:32.720,0:31:35.840
so it's just coloring the comments

0:31:34.799,0:31:37.760
basically

0:31:35.840,0:31:39.840
we have our to-do here that's something

0:31:37.760,0:31:41.840
we have to do later of course we have to

0:31:39.840,0:31:44.240
do it once we actually have the logged

0:31:41.840,0:31:46.399
in user to the chat and once we have a

0:31:44.240,0:31:48.799
few chat messages direct messages

0:31:46.399,0:31:51.440
channels and so on so for now the

0:31:48.799,0:31:54.240
important part is that our jsx is done

0:31:51.440,0:31:56.159
later on we're gonna implement the logic

0:31:54.240,0:31:57.919
before taking a look in the browser i

0:31:56.159,0:32:01.039
just noticed that i have a typo here

0:31:57.919,0:32:03.840
that's gonna be assets now that we fixed

0:32:01.039,0:32:05.840
that part let's actually use our channel

0:32:03.840,0:32:08.559
search inside of our channel list

0:32:05.840,0:32:10.240
container we are importing it but if you

0:32:08.559,0:32:11.679
scroll down you'll notice that we're

0:32:10.240,0:32:13.760
never using it

0:32:11.679,0:32:16.320
so to use it we can call it as a

0:32:13.760,0:32:18.880
self-closing component right here

0:32:16.320,0:32:21.039
so to use it we can call it just below

0:32:18.880,0:32:24.000
our company header as a self-closing

0:32:21.039,0:32:26.080
component let's save it and take a look

0:32:24.000,0:32:28.480
there we go our search bar with the

0:32:26.080,0:32:30.320
search icon is right in here

0:32:28.480,0:32:32.320
of course if you start typing something

0:32:30.320,0:32:34.799
it's not gonna work because we don't

0:32:32.320,0:32:36.799
have users yet so now let's create the

0:32:34.799,0:32:38.960
layout for the channels and for direct

0:32:36.799,0:32:40.559
messages and then we'll move on to the

0:32:38.960,0:32:42.640
channel container

0:32:40.559,0:32:45.360
next component on our list is the team

0:32:42.640,0:32:46.960
channel list so inside of the components

0:32:45.360,0:32:50.720
let's just create it

0:32:46.960,0:32:53.360
theme channel list dot jsx

0:32:50.720,0:32:56.320
and we're again going to use the rafce

0:32:53.360,0:32:58.559
to simply create a functional component

0:32:56.320,0:33:01.039
inside of here we won't have to import a

0:32:58.559,0:33:04.159
lot of things this is just a list so

0:33:01.039,0:33:05.120
what we can do is simply import

0:33:04.159,0:33:08.559
add

0:33:05.120,0:33:10.799
channel this is going to be an svg icon

0:33:08.559,0:33:13.519
from dot slash

0:33:10.799,0:33:15.840
assets and that's going to be it

0:33:13.519,0:33:17.200
so now let's create the jsx off our

0:33:15.840,0:33:19.360
channel list

0:33:17.200,0:33:21.679
so right inside of here we'll have a lot

0:33:19.360,0:33:24.080
of variables that we can work with

0:33:21.679,0:33:26.080
and how are we gonna pass them well

0:33:24.080,0:33:28.720
they're going to be passed for us by

0:33:26.080,0:33:30.399
using stream so let's go back to our

0:33:28.720,0:33:33.519
channel container

0:33:30.399,0:33:35.840
we named our component team channel list

0:33:33.519,0:33:38.480
but notice that we also have the channel

0:33:35.840,0:33:41.279
list coming from stream chat react

0:33:38.480,0:33:42.880
so if we scroll down let me show you how

0:33:41.279,0:33:45.200
we're going to call it

0:33:42.880,0:33:47.440
first just below the company search

0:33:45.200,0:33:48.559
we're going to call the channel

0:33:47.440,0:33:51.360
list

0:33:48.559,0:33:53.919
channel list is a self-closing component

0:33:51.360,0:33:56.799
but it accepts a few props

0:33:53.919,0:33:58.159
first it accepts filters filters is an

0:33:56.799,0:34:00.240
object that's going to allow us to

0:33:58.159,0:34:02.000
filter some messages

0:34:00.240,0:34:03.120
then we're also going to have the

0:34:02.000,0:34:04.399
channel

0:34:03.120,0:34:05.440
render

0:34:04.399,0:34:07.360
filter

0:34:05.440,0:34:10.000
function this is a function that we can

0:34:07.360,0:34:12.639
call and based on that we can also pass

0:34:10.000,0:34:14.399
on filters so again right now i'm going

0:34:12.639,0:34:16.960
to leave this empty

0:34:14.399,0:34:19.599
and finally the most important thing is

0:34:16.960,0:34:22.159
the list so we can say list with a

0:34:19.599,0:34:24.240
capital l that's an important part

0:34:22.159,0:34:26.000
that means that we want to render a

0:34:24.240,0:34:28.560
custom list

0:34:26.000,0:34:29.679
we can do that by providing a callback

0:34:28.560,0:34:32.560
function

0:34:29.679,0:34:35.280
we get access to all the list props

0:34:32.560,0:34:37.760
right inside of here and finally we can

0:34:35.280,0:34:41.119
render the component we've created which

0:34:37.760,0:34:43.359
is called the team channel list

0:34:41.119,0:34:45.440
so basically what's happening is stream

0:34:43.359,0:34:47.839
allows you to get a channel list

0:34:45.440,0:34:50.000
component right out of the box it's

0:34:47.839,0:34:53.119
going to look good but we still want to

0:34:50.000,0:34:55.599
create our own custom team channel list

0:34:53.119,0:34:58.320
and that's exactly what we're doing

0:34:55.599,0:35:00.240
so we're getting all of these list props

0:34:58.320,0:35:03.520
and we can simply spread them right here

0:35:00.240,0:35:05.599
so that's going to be dot dot list props

0:35:03.520,0:35:07.520
inside of the curly braces

0:35:05.599,0:35:09.680
that means that our custom component

0:35:07.520,0:35:12.720
will get all the props that the channel

0:35:09.680,0:35:14.800
list would usually get using stream

0:35:12.720,0:35:16.480
now when it comes to filters i'm simply

0:35:14.800,0:35:17.520
going to put that as an empty object

0:35:16.480,0:35:19.520
right now

0:35:17.520,0:35:21.760
and for the channel filter function

0:35:19.520,0:35:24.720
we're gonna just leave that as an empty

0:35:21.760,0:35:27.119
callback function just like this

0:35:24.720,0:35:28.960
let's save it and now let's make use of

0:35:27.119,0:35:30.720
all of these props we're passing to our

0:35:28.960,0:35:32.880
team channel list

0:35:30.720,0:35:34.560
going right in here now we can get

0:35:32.880,0:35:36.560
access to them

0:35:34.560,0:35:39.680
the first prop that every single react

0:35:36.560,0:35:41.520
component has is the children property

0:35:39.680,0:35:43.839
then we're going to have the error which

0:35:41.520,0:35:46.079
we're going to set to false at the start

0:35:43.839,0:35:48.400
we also have the loading

0:35:46.079,0:35:50.560
and we also have the type

0:35:48.400,0:35:52.880
that type is going to be dependent on

0:35:50.560,0:35:54.720
are we in group chats or just direct

0:35:52.880,0:35:57.280
messages

0:35:54.720,0:35:59.520
so let's first handle the errors at the

0:35:57.280,0:36:01.839
top we can say if error we're going to

0:35:59.520,0:36:03.280
return something but before we have to

0:36:01.839,0:36:06.480
check out the type

0:36:03.280,0:36:08.560
if the type is equal to team then we

0:36:06.480,0:36:09.520
want to return an error message like

0:36:08.560,0:36:12.400
this

0:36:09.520,0:36:14.560
right here we'll specify the jsx and if

0:36:12.400,0:36:16.560
it's not team we simply want to return

0:36:14.560,0:36:18.640
null it doesn't exist

0:36:16.560,0:36:19.520
so how is the jsx for this going to look

0:36:18.640,0:36:22.720
like

0:36:19.520,0:36:25.040
well right here let's create a div

0:36:22.720,0:36:27.520
and that div is going to have a class

0:36:25.040,0:36:30.800
name which is going to be equal to team

0:36:27.520,0:36:32.720
dash channel dash list

0:36:30.800,0:36:35.599
below that we're gonna have one

0:36:32.720,0:36:38.880
paragraph tag so p tag that's gonna have

0:36:35.599,0:36:41.359
a class name equal to team

0:36:38.880,0:36:42.480
channel list underscore underscore

0:36:41.359,0:36:45.280
message

0:36:42.480,0:36:49.119
and inside of there we can simply say

0:36:45.280,0:36:52.000
connection error please wait a moment

0:36:49.119,0:36:55.119
and try again

0:36:52.000,0:36:57.200
great that's about it for the error now

0:36:55.119,0:36:59.359
we can actually create the loading part

0:36:57.200,0:37:01.920
so just below this if we're going to

0:36:59.359,0:37:04.320
create if loading inside of there we're

0:37:01.920,0:37:06.640
also going to have a return statement

0:37:04.320,0:37:08.640
and let's return the same div that we

0:37:06.640,0:37:10.960
already have so we're going to copy the

0:37:08.640,0:37:12.320
div with the paragraph and paste it

0:37:10.960,0:37:14.160
right here

0:37:12.320,0:37:17.200
this one is going to be team channel

0:37:14.160,0:37:19.440
list team channel list message but we're

0:37:17.200,0:37:21.760
going to add loading to this so it's

0:37:19.440,0:37:23.760
going to be space loading and then

0:37:21.760,0:37:26.160
finally instead of the error message

0:37:23.760,0:37:28.720
we're going to open a dynamic block

0:37:26.160,0:37:31.440
and we're going to say if type is triple

0:37:28.720,0:37:32.640
equal to team in that case we want to

0:37:31.440,0:37:33.760
say

0:37:32.640,0:37:35.599
channels

0:37:33.760,0:37:36.960
else we want to say

0:37:35.599,0:37:38.800
messages

0:37:36.960,0:37:42.000
and then finally we're going to add

0:37:38.800,0:37:44.079
loading dot dot

0:37:42.000,0:37:45.920
this is our loading

0:37:44.079,0:37:47.920
now that we've handled the error state

0:37:45.920,0:37:51.200
and the loading state we can actually

0:37:47.920,0:37:54.880
show our lists so this div is going to

0:37:51.200,0:37:57.200
have a class name equal to team dash

0:37:54.880,0:37:59.440
channel dash list

0:37:57.200,0:38:01.839
below that we're going to have one more

0:37:59.440,0:38:06.000
div and this div is going to have a

0:38:01.839,0:38:09.359
class name equal to team dash channel

0:38:06.000,0:38:12.160
dash list underscore underscore header

0:38:09.359,0:38:14.640
and as we had so far we're going to have

0:38:12.160,0:38:16.400
one more paragraph so let's create a

0:38:14.640,0:38:19.359
paragraph tag

0:38:16.400,0:38:21.280
and this p tag is going to have a class

0:38:19.359,0:38:22.560
name

0:38:21.280,0:38:25.680
equal to

0:38:22.560,0:38:28.800
team dash channel dash list underscore

0:38:25.680,0:38:31.359
underscore header underscore underscore

0:38:28.800,0:38:34.320
title a lot of underscores there

0:38:31.359,0:38:36.079
so what we can say is we can simply copy

0:38:34.320,0:38:37.520
this dynamic block

0:38:36.079,0:38:40.160
paste it here

0:38:37.520,0:38:43.359
and if it is a team chat in that case we

0:38:40.160,0:38:44.880
can simply say channels else we can say

0:38:43.359,0:38:46.480
direct

0:38:44.880,0:38:49.520
messages

0:38:46.480,0:38:51.839
that's about it and below this later on

0:38:49.520,0:38:52.640
we're going to have a button

0:38:51.839,0:38:54.480
to

0:38:52.640,0:38:55.599
add the channel

0:38:54.480,0:38:58.160
right now we're going to leave that

0:38:55.599,0:38:59.280
blank but later on you know it has to be

0:38:58.160,0:39:02.400
here

0:38:59.280,0:39:04.720
and finally outside of this first div we

0:39:02.400,0:39:06.720
want to render the children

0:39:04.720,0:39:08.800
everything that has been passed to our

0:39:06.720,0:39:10.400
team channel list we want to render it

0:39:08.800,0:39:12.880
right here

0:39:10.400,0:39:14.960
great with that we are almost done with

0:39:12.880,0:39:17.359
our team channel list component

0:39:14.960,0:39:19.359
let's go into our index.js and let's

0:39:17.359,0:39:21.599
export it from there so that we can use

0:39:19.359,0:39:22.960
it in our channel list container

0:39:21.599,0:39:24.640
that's gonna be

0:39:22.960,0:39:26.079
team

0:39:24.640,0:39:27.760
channel

0:39:26.079,0:39:29.760
list

0:39:27.760,0:39:31.760
now that we are exporting it let's see

0:39:29.760,0:39:34.480
where we are using it that's going to be

0:39:31.760,0:39:35.200
in the channel list container as you can

0:39:34.480,0:39:37.280
see

0:39:35.200,0:39:39.359
at the top right here we're importing it

0:39:37.280,0:39:41.440
and we're using it right here and

0:39:39.359,0:39:42.480
passing all the list props

0:39:41.440,0:39:44.880
but remember

0:39:42.480,0:39:47.520
we also have to pass the type

0:39:44.880,0:39:49.520
the type is going to be equal to team we

0:39:47.520,0:39:51.599
have to do that specifically because

0:39:49.520,0:39:53.839
below we're going to have this exact

0:39:51.599,0:39:56.880
same channel list but the type is going

0:39:53.839,0:39:59.680
to be messaging for direct messages so

0:39:56.880,0:40:01.920
we need to be able to differentiate them

0:39:59.680,0:40:04.319
let's save it and take a look

0:40:01.920,0:40:06.720
there we go right now we have connection

0:40:04.319,0:40:08.640
error please wait a moment that makes

0:40:06.720,0:40:11.200
sense because we haven't yet connected

0:40:08.640,0:40:12.160
anything but we have it here for later

0:40:11.200,0:40:14.640
on

0:40:12.160,0:40:16.800
now we also have to implement the last

0:40:14.640,0:40:18.640
component in this file which is the

0:40:16.800,0:40:21.280
theme channel preview

0:40:18.640,0:40:22.480
so let's create that component called

0:40:21.280,0:40:24.400
team

0:40:22.480,0:40:26.560
channel preview

0:40:24.400,0:40:28.880
dot jsx

0:40:26.560,0:40:31.040
not to forget let's go to the index and

0:40:28.880,0:40:33.280
let's quickly export it from there

0:40:31.040,0:40:34.880
that's going to be team

0:40:33.280,0:40:36.960
channel

0:40:34.880,0:40:40.160
preview

0:40:36.960,0:40:42.720
back in here we can run rafce to get our

0:40:40.160,0:40:44.480
simple code running the situation with

0:40:42.720,0:40:47.200
our team channel preview is going to be

0:40:44.480,0:40:48.880
the same as with our team channel list

0:40:47.200,0:40:51.040
we're going to get a lot of props

0:40:48.880,0:40:54.079
they're going to get passed into it

0:40:51.040,0:40:55.680
so by going here we can simply specified

0:40:54.079,0:40:57.920
one more prop which is going to be

0:40:55.680,0:41:00.560
called preview and that is going to be

0:40:57.920,0:41:02.400
equal to a callback function with an

0:41:00.560,0:41:04.880
instant return

0:41:02.400,0:41:07.680
right there we get preview

0:41:04.880,0:41:09.839
props and now we can render our own

0:41:07.680,0:41:13.280
component which we called

0:41:09.839,0:41:15.680
team channel preview

0:41:13.280,0:41:18.800
now we can spread those props so

0:41:15.680,0:41:20.640
dot preview props and finally we also

0:41:18.800,0:41:24.079
have to pass the type which is going to

0:41:20.640,0:41:25.680
be the same type is equal to team

0:41:24.079,0:41:27.839
now that we have all the necessary

0:41:25.680,0:41:30.560
components in our team channel preview

0:41:27.839,0:41:32.240
we can go back and we can use them right

0:41:30.560,0:41:34.400
inside of our props

0:41:32.240,0:41:35.440
the props we need for now are gonna be

0:41:34.400,0:41:37.599
channel

0:41:35.440,0:41:39.200
and also type

0:41:37.599,0:41:41.680
great

0:41:39.200,0:41:44.640
inside of this component we'll also use

0:41:41.680,0:41:46.800
a few more things from stream chat react

0:41:44.640,0:41:49.599
so we can say import

0:41:46.800,0:41:53.200
and that's going to be avatar for images

0:41:49.599,0:41:54.800
and also use chat context and this is

0:41:53.200,0:41:57.440
coming from

0:41:54.800,0:41:58.720
stream dash chat

0:41:57.440,0:42:00.480
react

0:41:58.720,0:42:03.040
now that we have these things let's

0:42:00.480,0:42:05.520
actually use that context so right

0:42:03.040,0:42:07.359
inside of here we can say const

0:42:05.520,0:42:11.119
the things we need to get are going to

0:42:07.359,0:42:14.800
be the channel and also the client

0:42:11.119,0:42:16.880
that is coming from use chat context and

0:42:14.800,0:42:18.960
we call it as a hook

0:42:16.880,0:42:20.400
i'm going to rename the channel right

0:42:18.960,0:42:23.040
here to say

0:42:20.400,0:42:25.760
active channel because we're already

0:42:23.040,0:42:27.839
getting a channel at the top

0:42:25.760,0:42:30.480
with that said let's create a block of

0:42:27.839,0:42:34.640
jsx which is going to be called channel

0:42:30.480,0:42:36.960
preview so right here channel preview

0:42:34.640,0:42:39.040
as we've done before it's going to be a

0:42:36.960,0:42:41.200
functional component just to simplify

0:42:39.040,0:42:43.599
the life for us later on

0:42:41.200,0:42:46.960
and inside of here it's only going to be

0:42:43.599,0:42:48.800
a simple paragraph tag with a class name

0:42:46.960,0:42:51.680
which is going to be equal to

0:42:48.800,0:42:53.520
channel dash preview underscore

0:42:51.680,0:42:55.680
underscore item

0:42:53.520,0:42:58.960
and there we can say

0:42:55.680,0:43:01.119
hash or pound sign and we can specify

0:42:58.960,0:43:03.359
the name of the channel we can get to

0:43:01.119,0:43:06.000
the channel name by saying

0:43:03.359,0:43:08.480
channel.data.name

0:43:06.000,0:43:10.720
i'm going to add a question mark before

0:43:08.480,0:43:12.560
the dot for the data and the name to

0:43:10.720,0:43:15.359
make sure that we have the channel

0:43:12.560,0:43:17.520
before we want to access something else

0:43:15.359,0:43:20.160
or maybe the channel doesn't have a name

0:43:17.520,0:43:21.160
in that case we can use or and then say

0:43:20.160,0:43:24.800
channel

0:43:21.160,0:43:26.480
questionmark.data questionmark.id

0:43:24.800,0:43:28.880
this is a preview for the channel with

0:43:26.480,0:43:31.520
multiple users but now let's create a

0:43:28.880,0:43:35.280
preview for direct messages we can do

0:43:31.520,0:43:37.760
that by saying const direct preview

0:43:35.280,0:43:39.920
is going to be equal to and then we

0:43:37.760,0:43:43.599
instantly return it and there we're

0:43:39.920,0:43:44.720
going to have const members is equal to

0:43:43.599,0:43:47.359
channel

0:43:44.720,0:43:49.520
dot state dot members

0:43:47.359,0:43:52.000
but unfortunately the data that we get

0:43:49.520,0:43:53.839
back is not going to be an array

0:43:52.000,0:43:56.640
while you might think we're gonna get an

0:43:53.839,0:43:59.520
array with different objects like this

0:43:56.640,0:44:01.119
what actually happens is we get back an

0:43:59.520,0:44:04.240
object like this

0:44:01.119,0:44:05.119
and then that object has the ids one two

0:44:04.240,0:44:06.560
three

0:44:05.119,0:44:08.400
and then

0:44:06.560,0:44:10.640
there's the user object

0:44:08.400,0:44:13.680
so it's going to look like this because

0:44:10.640,0:44:15.359
each user has a specific id and then

0:44:13.680,0:44:16.400
based on that we're going to show their

0:44:15.359,0:44:18.880
data

0:44:16.400,0:44:20.240
so what we need to do is we need to turn

0:44:18.880,0:44:23.200
an object

0:44:20.240,0:44:25.599
with again objects as keys and values to

0:44:23.200,0:44:26.960
simply an array of objects that we can

0:44:25.599,0:44:29.359
map through

0:44:26.960,0:44:32.400
so let's remove this and this

0:44:29.359,0:44:35.520
and let's use the built in javascript

0:44:32.400,0:44:38.160
object dot values that's going to give

0:44:35.520,0:44:40.400
us the values of all the items in that

0:44:38.160,0:44:42.720
specific members object

0:44:40.400,0:44:44.480
once we get that we also want to filter

0:44:42.720,0:44:45.359
through that so we can call the filter

0:44:44.480,0:44:48.240
method

0:44:45.359,0:44:50.240
filter accepts a callback function

0:44:48.240,0:44:52.960
and in this case we want to filter

0:44:50.240,0:44:55.760
through the members so in here we get

0:44:52.960,0:44:58.160
each member but to get the data about

0:44:55.760,0:45:00.960
that member we have to destructure it

0:44:58.160,0:45:03.280
and then specify the user so this is how

0:45:00.960,0:45:05.760
we're accessing each specific user in

0:45:03.280,0:45:09.280
that object

0:45:05.760,0:45:11.359
then we want to check if the user dot id

0:45:09.280,0:45:14.079
is not equal to

0:45:11.359,0:45:16.720
client dot user

0:45:14.079,0:45:19.599
uppercase id make sure that you have the

0:45:16.720,0:45:21.520
id all uppercased and close the

0:45:19.599,0:45:23.359
parentheses properly

0:45:21.520,0:45:25.520
so what we're doing here is we're

0:45:23.359,0:45:28.880
mapping over all the users and we're

0:45:25.520,0:45:31.839
keeping all the ones where the id is not

0:45:28.880,0:45:33.760
equal to the client id which is our

0:45:31.839,0:45:35.599
so we're basically throwing ourselves

0:45:33.760,0:45:37.839
outside of that chat so we can get the

0:45:35.599,0:45:39.599
actual users we're talking to

0:45:37.839,0:45:41.520
i've noticed this is not going to be an

0:45:39.599,0:45:43.200
instant return so i can just switch this

0:45:41.520,0:45:46.079
to curly braces

0:45:43.200,0:45:47.599
and in that case we have to remove one

0:45:46.079,0:45:49.440
parentheses

0:45:47.599,0:45:52.000
great now we have the members but

0:45:49.440,0:45:54.560
they're not including ourself

0:45:52.000,0:45:58.319
so right inside of here let's return a

0:45:54.560,0:46:00.960
block of jsx we can say div

0:45:58.319,0:46:02.720
there we're to have a class name which

0:46:00.960,0:46:05.599
is going to be equal to

0:46:02.720,0:46:09.200
channel dash preview underscore

0:46:05.599,0:46:11.119
underscore item and then space single

0:46:09.200,0:46:12.640
inside of there we're going to specify

0:46:11.119,0:46:15.359
our avatar

0:46:12.640,0:46:17.359
avatar is just the user's image so

0:46:15.359,0:46:20.079
inside of there we can pass the image

0:46:17.359,0:46:21.119
property which is going to be equal to

0:46:20.079,0:46:23.200
members

0:46:21.119,0:46:26.000
0

0:46:23.200,0:46:28.960
and then question mark dot user dot

0:46:26.000,0:46:31.200
image like this finally we can also pass

0:46:28.960,0:46:35.119
the user's name which is going to be

0:46:31.200,0:46:36.079
members zero dot user and then dot full

0:46:35.119,0:46:38.160
name

0:46:36.079,0:46:40.079
make sure to add question marks before

0:46:38.160,0:46:43.119
all of these because we always need to

0:46:40.079,0:46:45.440
know that the user actually exists

0:46:43.119,0:46:49.440
finally we can specify the size which

0:46:45.440,0:46:52.000
can be equal to a number of 24.

0:46:49.440,0:46:54.640
finally below this avatar we can also

0:46:52.000,0:46:56.960
have a p tag and then in here we can

0:46:54.640,0:46:59.440
list our member's name we already have

0:46:56.960,0:47:00.960
that so i'm going to copy the name and

0:46:59.440,0:47:03.200
just put it here

0:47:00.960,0:47:05.359
now we have the channel preview and the

0:47:03.200,0:47:07.520
direct preview let's actually use these

0:47:05.359,0:47:09.119
components inside of our team channel

0:47:07.520,0:47:11.520
preview

0:47:09.119,0:47:13.760
so this div is going to have a different

0:47:11.520,0:47:16.720
class name depending on if the current

0:47:13.760,0:47:18.640
chat is selected or not so we can say

0:47:16.720,0:47:20.800
class name

0:47:18.640,0:47:24.000
is equal to we're going to put it as a

0:47:20.800,0:47:26.079
dynamic block in here we can say channel

0:47:24.000,0:47:28.960
question mark dot id

0:47:26.079,0:47:30.720
and if it's triple equal to active

0:47:28.960,0:47:33.680
channel

0:47:30.720,0:47:35.760
question mark dot id so if they are the

0:47:33.680,0:47:37.760
same our class name is going to be

0:47:35.760,0:47:40.079
channel dash preview

0:47:37.760,0:47:41.920
underscore underscore wrapper underscore

0:47:40.079,0:47:45.040
underscore selected

0:47:41.920,0:47:46.000
else it's simply going to be channel

0:47:45.040,0:47:48.400
dash

0:47:46.000,0:47:49.359
preview and then underscore underscore

0:47:48.400,0:47:51.599
wrapper

0:47:49.359,0:47:53.920
it's not selected of course this also

0:47:51.599,0:47:55.839
has to be a string and with that we've

0:47:53.920,0:47:58.400
entered our class name

0:47:55.839,0:48:01.280
so still inside of our div we're gonna

0:47:58.400,0:48:04.400
add an onclick property on our click

0:48:01.280,0:48:07.119
we're gonna of course select the actual

0:48:04.400,0:48:09.680
channel but for now we can simply

0:48:07.119,0:48:11.119
console log the channel name so we can

0:48:09.680,0:48:13.920
say channel

0:48:11.119,0:48:16.960
right here great and then of course

0:48:13.920,0:48:19.680
inside of this div dependent on the type

0:48:16.960,0:48:22.160
so we have to say if type is equal to

0:48:19.680,0:48:24.000
team in that case we're going to render

0:48:22.160,0:48:25.359
the channel

0:48:24.000,0:48:26.880
preview

0:48:25.359,0:48:29.359
and then if it's not we're going to

0:48:26.880,0:48:32.160
render the direct preview

0:48:29.359,0:48:34.960
great this is it for our component for

0:48:32.160,0:48:37.280
now of course i don't think any chats

0:48:34.960,0:48:39.760
will be showing because we don't yet

0:48:37.280,0:48:42.000
have the users so soon enough it might

0:48:39.760,0:48:44.160
be a good time to actually start

0:48:42.000,0:48:46.400
implementing the logic for creating the

0:48:44.160,0:48:49.760
authentication getting our users in

0:48:46.400,0:48:51.119
there and displaying the data so for now

0:48:49.760,0:48:53.040
let's go back to our channel list

0:48:51.119,0:48:55.440
container considering that we don't

0:48:53.040,0:48:58.800
currently have any chats unfortunately

0:48:55.440,0:49:00.960
the preview is going to be empty

0:48:58.800,0:49:03.839
below this channel list we need to

0:49:00.960,0:49:04.800
create one more exactly the same channel

0:49:03.839,0:49:06.800
list

0:49:04.800,0:49:09.359
below the channel list for group

0:49:06.800,0:49:12.240
messages we also need to have a channel

0:49:09.359,0:49:15.040
list for direct messages so simply

0:49:12.240,0:49:16.559
select it and then duplicate it below

0:49:15.040,0:49:19.280
we're going to have just a few small

0:49:16.559,0:49:20.960
differences for example in the list

0:49:19.280,0:49:22.960
we're going to render the team channel

0:49:20.960,0:49:24.880
list but the thing we're going to pass

0:49:22.960,0:49:27.119
over is going to be

0:49:24.880,0:49:29.520
messaging so that's the type of the

0:49:27.119,0:49:32.319
actual team channel list and you can

0:49:29.520,0:49:34.480
simply paste that here as well

0:49:32.319,0:49:36.559
so now once we actually get everything

0:49:34.480,0:49:38.480
to work you should be able to see two

0:49:36.559,0:49:40.800
different channel lists one for the

0:49:38.480,0:49:42.400
group messages and one for the private

0:49:40.800,0:49:45.200
ones

0:49:42.400,0:49:47.040
right now we still have an error and

0:49:45.200,0:49:49.200
that makes sense because we are not

0:49:47.040,0:49:51.839
currently logged in we don't exist in

0:49:49.200,0:49:53.920
database and there aren't any channels

0:49:51.839,0:49:56.839
or direct messages

0:49:53.920,0:49:59.200
so now might be a good time to implement

0:49:56.839,0:50:01.359
authentication and the entire logic that

0:49:59.200,0:50:03.839
comes with it we have to create a

0:50:01.359,0:50:06.160
node.js server create endpoints for the

0:50:03.839,0:50:08.240
sign up in the login and then finally

0:50:06.160,0:50:11.280
send the data from the frontend to the

0:50:08.240,0:50:13.680
backend to create a user in the database

0:50:11.280,0:50:17.200
so let's go ahead and first create the

0:50:13.680,0:50:19.440
frontend layout for our authentication

0:50:17.200,0:50:20.640
to do that we can close all the current

0:50:19.440,0:50:22.240
files

0:50:20.640,0:50:25.040
collapse everything

0:50:22.240,0:50:27.920
go inside of the client source and then

0:50:25.040,0:50:29.920
finally app.jsx

0:50:27.920,0:50:32.400
instead of here we're going to import

0:50:29.920,0:50:34.640
auth auth is going to be a new component

0:50:32.400,0:50:36.240
where our login and registration form

0:50:34.640,0:50:39.440
are going to be in

0:50:36.240,0:50:41.280
so when do we want to render that auth

0:50:39.440,0:50:43.760
well we're going to have a variable

0:50:41.280,0:50:46.480
which is going to be something like auth

0:50:43.760,0:50:49.359
token and this odd token is going to be

0:50:46.480,0:50:52.319
available only if we've actually logged

0:50:49.359,0:50:53.680
in so for now we don't have it it's

0:50:52.319,0:50:56.400
going to be false

0:50:53.680,0:50:59.359
and based on that variable we'll show or

0:50:56.400,0:51:01.200
hide the form so we can say if there is

0:50:59.359,0:51:02.880
no auth

0:51:01.200,0:51:06.319
token

0:51:02.880,0:51:08.400
in that case we want to render or return

0:51:06.319,0:51:10.319
the auth component

0:51:08.400,0:51:11.599
so we're gonna hide everything we've

0:51:10.319,0:51:14.240
done so far

0:51:11.599,0:51:16.559
if we're still not logged in

0:51:14.240,0:51:18.160
now that we have this let's actually go

0:51:16.559,0:51:20.839
to our components

0:51:18.160,0:51:22.559
create a new file called

0:51:20.839,0:51:25.119
auth.jsx

0:51:22.559,0:51:27.440
and let's not forget to export it from

0:51:25.119,0:51:28.720
here that's going to be

0:51:27.440,0:51:29.920
off

0:51:28.720,0:51:31.839
great

0:51:29.920,0:51:33.680
inside of that off it's going to be

0:51:31.839,0:51:36.880
similar situation as with most

0:51:33.680,0:51:39.520
components we're going to use the rafce

0:51:36.880,0:51:41.599
alongside react we're also going to need

0:51:39.520,0:51:44.000
use state

0:51:41.599,0:51:44.960
and we also need to import a few other

0:51:44.000,0:51:46.400
things

0:51:44.960,0:51:49.440
in this component we're going to use

0:51:46.400,0:51:51.760
cookies so we can say import cookies

0:51:49.440,0:51:53.599
from and that's going to be

0:51:51.760,0:51:56.160
universal

0:51:53.599,0:51:58.319
dash cookie

0:51:56.160,0:52:02.160
then we're also going to use axios so we

0:51:58.319,0:52:04.000
can say import axios from axios

0:52:02.160,0:52:06.880
and i've just remembered that we haven't

0:52:04.000,0:52:08.640
installed axios so we can go under view

0:52:06.880,0:52:10.400
that's going to be terminal

0:52:08.640,0:52:12.800
and we can stop the current server from

0:52:10.400,0:52:16.079
running by pressing ctrl c

0:52:12.800,0:52:17.680
yes and then type npm install

0:52:16.079,0:52:19.920
axios

0:52:17.680,0:52:21.680
great while that is installing let's

0:52:19.920,0:52:22.640
import sign

0:52:21.680,0:52:23.839
in

0:52:22.640,0:52:24.880
image

0:52:23.839,0:52:26.240
from

0:52:24.880,0:52:30.000
dot slash

0:52:26.240,0:52:31.520
assets forward slash signup dot

0:52:30.000,0:52:33.520
jpeg

0:52:31.520,0:52:35.599
great this is installed and we can

0:52:33.520,0:52:38.079
simply run npm start and close the

0:52:35.599,0:52:40.640
terminal again now let's start creating

0:52:38.079,0:52:43.200
the layout for our authentication

0:52:40.640,0:52:46.480
our first div is going to have a class

0:52:43.200,0:52:48.880
name equal to auth underscore underscore

0:52:46.480,0:52:50.880
form dash container

0:52:48.880,0:52:53.760
then below that we're going to have one

0:52:50.880,0:52:56.720
more div and that div is going to have a

0:52:53.760,0:52:59.040
class name equal to auth underscore

0:52:56.720,0:53:01.200
underscore form dash container

0:52:59.040,0:53:03.040
underscore fields

0:53:01.200,0:53:05.599
we're going to have one more container

0:53:03.040,0:53:08.640
inside of that and this div is going to

0:53:05.599,0:53:11.200
have a class name equal to

0:53:08.640,0:53:15.680
auth underscore underscore form dash

0:53:11.200,0:53:17.359
container underscore fields dash content

0:53:15.680,0:53:19.599
i know these class names are getting

0:53:17.359,0:53:21.839
long but this is how you use the bim

0:53:19.599,0:53:25.200
methodology now inside of there we're

0:53:21.839,0:53:28.559
gonna have a p tag and this p tag is

0:53:25.200,0:53:30.880
simply going to say sign up or sign in

0:53:28.559,0:53:33.040
so we need to have a variable to know

0:53:30.880,0:53:35.280
are we on the sign in form or on the

0:53:33.040,0:53:36.400
sign up form so let's create that

0:53:35.280,0:53:38.559
variable

0:53:36.400,0:53:41.680
that's going to be a state so we can say

0:53:38.559,0:53:42.400
use state and select it right there

0:53:41.680,0:53:46.000
so

0:53:42.400,0:53:49.680
we are going to name it is sign up

0:53:46.000,0:53:52.079
are we on the signup form or are we not

0:53:49.680,0:53:54.000
the initial state of the sign up is

0:53:52.079,0:53:56.880
going to be set to false because we want

0:53:54.000,0:53:59.280
to get to the sign in first and then in

0:53:56.880,0:54:03.680
here we can say if

0:53:59.280,0:54:04.880
is sign up in that case show

0:54:03.680,0:54:05.839
sign

0:54:04.880,0:54:08.960
up

0:54:05.839,0:54:10.640
otherwise show sign in

0:54:08.960,0:54:13.520
let's save it and take a look in the

0:54:10.640,0:54:16.720
browser as you can see we have this nice

0:54:13.520,0:54:18.240
blue screen where it says sign in

0:54:16.720,0:54:20.640
now let's keep in mind that we'll have

0:54:18.240,0:54:22.720
to add a lot of inputs buttons and

0:54:20.640,0:54:25.200
headings to this form and we want to see

0:54:22.720,0:54:27.280
the changes live as we code them for

0:54:25.200,0:54:29.760
that reason i'm going to put my browser

0:54:27.280,0:54:32.640
side by side with the editor

0:54:29.760,0:54:34.640
so right now while we code something we

0:54:32.640,0:54:35.680
can see the changes live

0:54:34.640,0:54:37.440
great

0:54:35.680,0:54:39.200
just below the paragraph we're going to

0:54:37.440,0:54:41.440
have a form

0:54:39.200,0:54:43.839
that form is going to have the unsubmit

0:54:41.440,0:54:44.640
property which is going to be empty for

0:54:43.839,0:54:46.880
now

0:54:44.640,0:54:50.079
and then inside of that form we're going

0:54:46.880,0:54:52.000
to have a lot of inputs and labels

0:54:50.079,0:54:54.480
some inputs will be available only on

0:54:52.000,0:54:55.680
the sign up so we can make that check

0:54:54.480,0:54:57.920
like this

0:54:55.680,0:54:59.920
if is sign up

0:54:57.920,0:55:01.359
then show this

0:54:59.920,0:55:03.920
this is the shorthand method for the

0:55:01.359,0:55:05.119
ternary operator you use the ternary if

0:55:03.920,0:55:07.680
you have two things that you want to

0:55:05.119,0:55:10.000
show but you simply say is sign up and

0:55:07.680,0:55:12.640
then end end if you only need to show

0:55:10.000,0:55:15.440
one thing based on this condition

0:55:12.640,0:55:18.720
so what do we want to show if it is on

0:55:15.440,0:55:20.880
sign up well we want to show a div

0:55:18.720,0:55:24.240
and that div is going to have a class

0:55:20.880,0:55:27.599
name equal to auth underscore underscore

0:55:24.240,0:55:30.720
form dash container underscore fields

0:55:27.599,0:55:33.440
dash content underscore input

0:55:30.720,0:55:36.079
this is the longest class name so far

0:55:33.440,0:55:38.160
but it's fine we got it done

0:55:36.079,0:55:40.000
so inside of that input we're going to

0:55:38.160,0:55:42.640
have a label

0:55:40.000,0:55:45.040
that label is going to have the html4

0:55:42.640,0:55:45.920
property and is going to be equal to

0:55:45.040,0:55:46.720
full

0:55:45.920,0:55:49.760
name

0:55:46.720,0:55:50.960
inside of there we can simply say full

0:55:49.760,0:55:52.880
name

0:55:50.960,0:55:56.160
of course below the label we have to

0:55:52.880,0:55:58.640
have the input so i'm going to say input

0:55:56.160,0:56:01.760
and let's add a few properties

0:55:58.640,0:56:02.640
first the name is going to be set to

0:56:01.760,0:56:03.839
full

0:56:02.640,0:56:06.720
name

0:56:03.839,0:56:07.680
then the type is going to be equal to

0:56:06.720,0:56:10.000
text

0:56:07.680,0:56:13.680
then the placeholder can simply say full

0:56:10.000,0:56:14.880
name and finally we need the on change

0:56:13.680,0:56:17.280
property

0:56:14.880,0:56:20.559
on change we're going to call a specific

0:56:17.280,0:56:22.160
function called handle change and this

0:56:20.559,0:56:24.160
handle change is going to handle the

0:56:22.160,0:56:25.119
change for all of the inputs that we

0:56:24.160,0:56:28.319
have

0:56:25.119,0:56:31.200
also let's make it required

0:56:28.319,0:56:32.880
great so this is it let's save it

0:56:31.200,0:56:35.359
of course we have an error we cannot

0:56:32.880,0:56:37.359
have an empty on submit so for now i'm

0:56:35.359,0:56:38.480
going to put a callback function inside

0:56:37.359,0:56:40.720
of there

0:56:38.480,0:56:43.119
and of course we also have to declare

0:56:40.720,0:56:45.040
the handle change so we can see const

0:56:43.119,0:56:47.280
handle change

0:56:45.040,0:56:50.720
is equal to and for now we're going to

0:56:47.280,0:56:52.799
leave it as a blank callback function

0:56:50.720,0:56:55.440
okay we cannot yet see this because we

0:56:52.799,0:56:58.720
are on the sign in form and not sign up

0:56:55.440,0:57:00.960
so let's manually switch this to true

0:56:58.720,0:57:02.160
and there we go full name with the full

0:57:00.960,0:57:03.920
name input

0:57:02.160,0:57:06.000
of course we don't want to create all of

0:57:03.920,0:57:09.359
the fields by hand so let's simply copy

0:57:06.000,0:57:12.480
this div and paste it below

0:57:09.359,0:57:13.359
the label is going to say username this

0:57:12.480,0:57:15.680
time

0:57:13.359,0:57:17.119
and we can say html4

0:57:15.680,0:57:18.960
username

0:57:17.119,0:57:21.119
now of course the name of the input is

0:57:18.960,0:57:23.440
going to be username the type is going

0:57:21.119,0:57:24.839
to be text and then in here we can just

0:57:23.440,0:57:27.440
say

0:57:24.839,0:57:30.000
username and that's about it we have the

0:57:27.440,0:57:31.280
input for the username as you can see

0:57:30.000,0:57:33.520
right here

0:57:31.280,0:57:36.480
now you might be wondering why is this

0:57:33.520,0:57:38.319
not inside of the is signup block

0:57:36.480,0:57:40.240
and that is because well we need the

0:57:38.319,0:57:42.240
username both when we're signing up for

0:57:40.240,0:57:44.319
the first time and every time that we

0:57:42.240,0:57:46.000
sign in the user needs to enter the

0:57:44.319,0:57:48.079
username

0:57:46.000,0:57:50.000
now below the username we're going to

0:57:48.079,0:57:52.160
have one more field

0:57:50.000,0:57:54.160
and this one is going to be inside of

0:57:52.160,0:57:56.480
the is signup block so i'm going to copy

0:57:54.160,0:57:58.400
this entire block and simply paste it

0:57:56.480,0:58:01.440
below

0:57:58.400,0:58:04.240
there we go this one is going to be a

0:58:01.440,0:58:07.119
phone number so we can say phone number

0:58:04.240,0:58:09.440
here html4

0:58:07.119,0:58:11.200
phone number

0:58:09.440,0:58:14.319
name phone number

0:58:11.200,0:58:17.520
type text placeholder is going to be

0:58:14.319,0:58:19.680
phone number as well and we're done with

0:58:17.520,0:58:21.839
one more input field

0:58:19.680,0:58:23.040
below that one we're going to copy

0:58:21.839,0:58:26.640
everything

0:58:23.040,0:58:28.000
and this one is going to be avatar

0:58:26.640,0:58:29.920
url

0:58:28.000,0:58:31.839
this also needs to be shown only on the

0:58:29.920,0:58:33.520
sign up because we need to choose our

0:58:31.839,0:58:37.200
image only once

0:58:33.520,0:58:39.920
so that's avatar url like this

0:58:37.200,0:58:41.040
make sure the name contains the url all

0:58:39.920,0:58:43.920
uppercased

0:58:41.040,0:58:45.200
and then in here as a placeholder we can

0:58:43.920,0:58:47.599
also say

0:58:45.200,0:58:49.920
avatar url

0:58:47.599,0:58:52.480
great below that we're going to have our

0:58:49.920,0:58:54.319
password this time we won't show it only

0:58:52.480,0:58:55.119
on the sign up so i'm going to copy this

0:58:54.319,0:58:57.280
div

0:58:55.119,0:59:02.480
and paste it right here

0:58:57.280,0:59:05.280
we can rename this and this to password

0:59:02.480,0:59:08.240
html4 password

0:59:05.280,0:59:11.359
name is also going to be password

0:59:08.240,0:59:13.920
and the type is going to be of course

0:59:11.359,0:59:13.920
password

0:59:14.079,0:59:19.280
that's it our password field showed up

0:59:17.119,0:59:20.880
now we want to have just one more field

0:59:19.280,0:59:23.920
but this is going to be when we want to

0:59:20.880,0:59:26.160
repeat the password so i'm gonna

0:59:23.920,0:59:28.880
paste this entire part right there we

0:59:26.160,0:59:30.480
need to copy the is signup block because

0:59:28.880,0:59:33.359
we only want to show the confirm

0:59:30.480,0:59:35.040
password on the account creation

0:59:33.359,0:59:37.280
like this

0:59:35.040,0:59:39.359
i know the indentation is not perfect

0:59:37.280,0:59:42.799
but let's try to get it done

0:59:39.359,0:59:44.000
and this here is going to be confirm

0:59:42.799,0:59:48.160
password

0:59:44.000,0:59:49.359
i can put that here as well confirm

0:59:48.160,0:59:52.079
password

0:59:49.359,0:59:54.319
and the name in the html4 for that are

0:59:52.079,0:59:55.599
going to be confirm

0:59:54.319,0:59:58.000
password

0:59:55.599,1:00:00.319
and again make sure that the name in all

0:59:58.000,1:00:02.559
of these inputs is correct because the

1:00:00.319,1:00:05.119
way we'll be managing data requires us

1:00:02.559,1:00:07.200
to have a specific name right here

1:00:05.119,1:00:09.440
that's great we have one more field

1:00:07.200,1:00:11.760
which is confirm password

1:00:09.440,1:00:13.280
finally below that we're going to have

1:00:11.760,1:00:15.839
one more div

1:00:13.280,1:00:18.559
and that's going to be outside of the

1:00:15.839,1:00:20.880
form so i'm going to put it outside and

1:00:18.559,1:00:22.480
finally indent it properly

1:00:20.880,1:00:24.000
now i can even make the text a bit

1:00:22.480,1:00:26.720
bigger

1:00:24.000,1:00:28.400
and this div is going to have a class

1:00:26.720,1:00:31.200
name equal to

1:00:28.400,1:00:36.000
auth underscore underscore form dash

1:00:31.200,1:00:39.040
container underscore fields dash account

1:00:36.000,1:00:41.760
so in here we can simply add a paragraph

1:00:39.040,1:00:44.000
tag in this paragraph we want to show a

1:00:41.760,1:00:47.839
different message depending on if user

1:00:44.000,1:00:48.880
is sign up or if not so we can say if is

1:00:47.839,1:00:51.680
sign up

1:00:48.880,1:00:54.319
in that case we can display a message

1:00:51.680,1:00:58.079
something like this

1:00:54.319,1:00:59.200
is sign up and that's going to be

1:00:58.079,1:01:00.880
already

1:00:59.200,1:01:02.160
have an account

1:01:00.880,1:01:05.280
question mark

1:01:02.160,1:01:08.880
but if it's not then we can say

1:01:05.280,1:01:11.280
don't have an account

1:01:08.880,1:01:13.520
question mark we need to be able to

1:01:11.280,1:01:15.520
switch between the modes and then we're

1:01:13.520,1:01:17.520
going to have a span element

1:01:15.520,1:01:19.280
inside of that p element

1:01:17.520,1:01:21.680
and it's going to have the on click

1:01:19.280,1:01:23.040
property which is going to say

1:01:21.680,1:01:25.760
switch

1:01:23.040,1:01:27.760
mode in there we can again look at the

1:01:25.760,1:01:30.799
is signup variable

1:01:27.760,1:01:31.599
and if we are on the sign up then we can

1:01:30.799,1:01:32.640
show

1:01:31.599,1:01:34.000
sign

1:01:32.640,1:01:36.000
in

1:01:34.000,1:01:37.760
otherwise we can show

1:01:36.000,1:01:40.079
sign up

1:01:37.760,1:01:42.640
let's save it and take a look

1:01:40.079,1:01:45.200
of course our switch mode is not defined

1:01:42.640,1:01:47.520
so let's define the switch mode

1:01:45.200,1:01:48.880
that's going to be fairly simple

1:01:47.520,1:01:51.119
at the top

1:01:48.880,1:01:52.480
let's define the switch mode function by

1:01:51.119,1:01:55.760
saying const

1:01:52.480,1:01:58.319
switch mode is equal to a function

1:01:55.760,1:02:00.960
and then in there we can set is sign up

1:01:58.319,1:02:03.599
to be not is sign up but the better way

1:02:00.960,1:02:04.559
to do that is to provide a callback

1:02:03.599,1:02:06.960
function

1:02:04.559,1:02:10.000
where we get the previous value of a

1:02:06.960,1:02:11.039
state field so previous is

1:02:10.000,1:02:13.359
sign up

1:02:11.039,1:02:15.200
and we simply want to return a negation

1:02:13.359,1:02:17.119
of that so that's going to be not

1:02:15.200,1:02:18.640
previous is sign up

1:02:17.119,1:02:20.880
this is the correct way to do it in

1:02:18.640,1:02:23.760
react when you want to change the state

1:02:20.880,1:02:25.920
depending on the previous state

1:02:23.760,1:02:28.720
there we go we have the sign up form and

1:02:25.920,1:02:30.880
the entire thing now if i click sign in

1:02:28.720,1:02:32.799
it switches to the sign in which is a

1:02:30.880,1:02:35.280
lot simpler

1:02:32.799,1:02:36.799
finally we also want to display an image

1:02:35.280,1:02:40.000
next to our form

1:02:36.799,1:02:43.039
so we are going to go above the div

1:02:40.000,1:02:45.200
that's the last one so above here and we

1:02:43.039,1:02:46.400
want to create one more div inside of

1:02:45.200,1:02:49.200
here

1:02:46.400,1:02:52.400
that div is going to have a class name

1:02:49.200,1:02:55.440
equal to auth underscore underscore form

1:02:52.400,1:02:57.760
dash container underscore image

1:02:55.440,1:03:00.319
and then in there we can simply display

1:02:57.760,1:03:01.760
that image that's going to be

1:03:00.319,1:03:04.960
img

1:03:01.760,1:03:06.480
and then source is going to be equal to

1:03:04.960,1:03:08.880
sign in

1:03:06.480,1:03:10.720
image which we declared above we can

1:03:08.880,1:03:13.200
also have the alternative tag which is

1:03:10.720,1:03:14.240
going to say sign in

1:03:13.200,1:03:16.160
great

1:03:14.240,1:03:18.640
as you can see it doesn't look that good

1:03:16.160,1:03:20.240
on smaller devices but if we actually

1:03:18.640,1:03:22.079
switch to mobile

1:03:20.240,1:03:25.039
you can see that it gets pushed to the

1:03:22.079,1:03:27.839
top and it seems like a banner but then

1:03:25.039,1:03:30.720
if we go to the full screen

1:03:27.839,1:03:31.839
you can see it looks great right here as

1:03:30.720,1:03:32.640
well

1:03:31.839,1:03:35.680
so

1:03:32.640,1:03:38.079
the actual layout for our login is now

1:03:35.680,1:03:40.400
done now we have to handle the states of

1:03:38.079,1:03:42.319
these fields and then send them over to

1:03:40.400,1:03:45.039
the backend which is going to create an

1:03:42.319,1:03:47.039
account or log in the user

1:03:45.039,1:03:48.640
then our user is going to be logged in

1:03:47.039,1:03:51.119
onto the dashboard we've created

1:03:48.640,1:03:53.760
previously and we'll be able to show all

1:03:51.119,1:03:55.680
of his channel previews direct messages

1:03:53.760,1:03:58.559
and everything else

1:03:55.680,1:04:00.799
first let's handle the data from all the

1:03:58.559,1:04:02.319
inputs that's what the handle change

1:04:00.799,1:04:04.480
function is for

1:04:02.319,1:04:05.920
but of course we first have to create a

1:04:04.480,1:04:08.000
state field

1:04:05.920,1:04:08.880
let's create a new state field called

1:04:08.000,1:04:12.079
form

1:04:08.880,1:04:15.200
so we're going to have form and set form

1:04:12.079,1:04:17.119
which is going to be equal to use state

1:04:15.200,1:04:19.119
and there we want to show something at

1:04:17.119,1:04:20.319
the start we want to have an initial

1:04:19.119,1:04:22.960
state

1:04:20.319,1:04:24.160
so at the top we can define that initial

1:04:22.960,1:04:26.079
state

1:04:24.160,1:04:28.400
as an object

1:04:26.079,1:04:30.720
and that object is going to have a few

1:04:28.400,1:04:32.400
properties it's going to have a full

1:04:30.720,1:04:34.799
name which is going to be equal to an

1:04:32.400,1:04:37.280
empty string we can also add the

1:04:34.799,1:04:39.599
username equal to an empty string

1:04:37.280,1:04:42.000
there's a password which is equal to an

1:04:39.599,1:04:44.240
empty string and all of the fields we've

1:04:42.000,1:04:45.920
had we have to reset them to an empty

1:04:44.240,1:04:50.079
string so it's going to be a phone

1:04:45.920,1:04:52.960
number and then finally the avatar url

1:04:50.079,1:04:55.680
these six fields form our initial state

1:04:52.960,1:04:58.640
and we can put them right here

1:04:55.680,1:05:02.079
so now we have our form and set form and

1:04:58.640,1:05:05.359
finally let's add our handle change

1:05:02.079,1:05:07.440
so what do we want to do on the change

1:05:05.359,1:05:09.760
well we get an event with the text of

1:05:07.440,1:05:13.520
the input we're changing and then we

1:05:09.760,1:05:17.039
want to call the set form

1:05:13.520,1:05:20.400
so remember a form is not just a single

1:05:17.039,1:05:22.720
text field it is actually an object so

1:05:20.400,1:05:24.400
we have to put an object there

1:05:22.720,1:05:27.440
and we have to spread

1:05:24.400,1:05:29.680
all of the other items from the form so

1:05:27.440,1:05:32.240
we spread all the other inputs because

1:05:29.680,1:05:34.000
we're only changing one and we want to

1:05:32.240,1:05:36.799
keep all the other ones

1:05:34.000,1:05:39.520
but then how do we change a specific one

1:05:36.799,1:05:41.760
well we're gonna get e dot target dot

1:05:39.520,1:05:43.920
name that's the name of the input we're

1:05:41.760,1:05:45.520
changing and then the value for that

1:05:43.920,1:05:48.240
same input is under the

1:05:45.520,1:05:50.079
event.target.value

1:05:48.240,1:05:52.400
and why are we using square brackets

1:05:50.079,1:05:53.839
right there because this here is a

1:05:52.400,1:05:56.079
syntax error

1:05:53.839,1:05:58.559
so you have to wrap the name of this

1:05:56.079,1:06:00.880
specific object key in the square

1:05:58.559,1:06:02.799
brackets and then set that equal to

1:06:00.880,1:06:05.200
e.target.value

1:06:02.799,1:06:07.200
that's going to update our state field

1:06:05.200,1:06:09.839
and we can even take a look at that by

1:06:07.200,1:06:13.039
simply doing a console log which is

1:06:09.839,1:06:15.520
going to say form so let's check it out

1:06:13.039,1:06:17.760
there's my form and i'll try typing

1:06:15.520,1:06:18.880
something

1:06:17.760,1:06:21.200
smith

1:06:18.880,1:06:23.599
there we go as you can see it's keeping

1:06:21.200,1:06:25.680
track of everything that we write

1:06:23.599,1:06:28.240
the username can look like this

1:06:25.680,1:06:31.119
and as you can see now it kept the full

1:06:28.240,1:06:32.960
name but it keeps adding to the username

1:06:31.119,1:06:34.880
and it's always going to be one letter

1:06:32.960,1:06:37.760
late but don't worry about that because

1:06:34.880,1:06:39.119
our user still has to click the actual

1:06:37.760,1:06:40.559
sign in button

1:06:39.119,1:06:42.799
now that i've mentioned that i'm

1:06:40.559,1:06:45.039
noticing that we are actually missing

1:06:42.799,1:06:45.920
our sign in button so let's add it right

1:06:45.039,1:06:48.640
away

1:06:45.920,1:06:51.440
that button is going to be right here as

1:06:48.640,1:06:53.599
the last thing in our form so still

1:06:51.440,1:06:54.559
inside of our form we're going to have a

1:06:53.599,1:06:57.520
button

1:06:54.559,1:06:59.520
more specifically it's going to be a div

1:06:57.520,1:07:02.160
with a class name

1:06:59.520,1:07:04.400
which is going to be equal to auth

1:07:02.160,1:07:08.480
underscore underscore form dash

1:07:04.400,1:07:11.839
container underscore fields dash content

1:07:08.480,1:07:14.079
underscore button a long one and then

1:07:11.839,1:07:15.280
inside of that div we're gonna have a

1:07:14.079,1:07:18.000
button

1:07:15.280,1:07:21.039
that button is going to check if we're

1:07:18.000,1:07:22.640
on the sign up or on the sign in

1:07:21.039,1:07:25.119
if we're on the sign up we're simply

1:07:22.640,1:07:28.480
going to say sign up

1:07:25.119,1:07:29.839
else we're going to say sign in let's

1:07:28.480,1:07:32.000
save it

1:07:29.839,1:07:34.799
okay now we have the button and that

1:07:32.000,1:07:37.599
button is going to trigger the actual

1:07:34.799,1:07:40.480
submit so if you scroll up you'll notice

1:07:37.599,1:07:42.240
that right here we have our on submit

1:07:40.480,1:07:45.359
and we have to create a function for

1:07:42.240,1:07:47.200
that so let's create a handle

1:07:45.359,1:07:49.440
submit function

1:07:47.200,1:07:52.079
we can add it right here

1:07:49.440,1:07:54.480
const handle submit

1:07:52.079,1:07:56.400
it's going to accept the event and in

1:07:54.480,1:07:59.280
here we have to handle the logic of

1:07:56.400,1:08:01.359
logging in or registering

1:07:59.280,1:08:04.960
usually when you submit a form you need

1:08:01.359,1:08:06.880
to add e dot prevent default

1:08:04.960,1:08:09.839
because it's going to reload the page

1:08:06.880,1:08:12.400
and in react we don't want that

1:08:09.839,1:08:13.760
okay now we have it let's also console

1:08:12.400,1:08:16.400
lock the form

1:08:13.760,1:08:18.560
to see if we're getting the right thing

1:08:16.400,1:08:20.799
passed to the back end we can remove the

1:08:18.560,1:08:23.440
console from the handle change

1:08:20.799,1:08:26.319
let's save it and take a look

1:08:23.440,1:08:28.159
okay let's enter our name let's do dr

1:08:26.319,1:08:31.040
smith again

1:08:28.159,1:08:32.719
dr smith as the username one two three

1:08:31.040,1:08:35.759
one two three one two three

1:08:32.719,1:08:38.960
in here we can enter his avatar image

1:08:35.759,1:08:41.679
i just went on google and i copied the

1:08:38.960,1:08:44.000
image address so we have a doctor image

1:08:41.679,1:08:46.799
address here and then finally let's

1:08:44.000,1:08:48.719
enter and confirm the password i'm going

1:08:46.799,1:08:50.400
to click sign up

1:08:48.719,1:08:53.120
and look at that

1:08:50.400,1:08:55.759
here is our data object

1:08:53.120,1:08:57.839
this is exactly what we want to pass

1:08:55.759,1:09:00.799
over to the back end so that we can

1:08:57.839,1:09:02.880
create a new stream account let's do

1:09:00.799,1:09:05.120
that right away

1:09:02.880,1:09:06.960
of course to be able to make requests

1:09:05.120,1:09:09.120
from the front to the back end we have

1:09:06.960,1:09:12.000
to create the backend part so let's

1:09:09.120,1:09:14.719
close all the files collapse it and go

1:09:12.000,1:09:17.640
inside of our server directory

1:09:14.719,1:09:19.679
inside of there we can create a new

1:09:17.640,1:09:21.759
index.js file

1:09:19.679,1:09:23.759
this is going to be the starting point

1:09:21.759,1:09:25.920
for our entire server

1:09:23.759,1:09:28.560
we can also open the terminal by going

1:09:25.920,1:09:31.679
to view terminal and we can split the

1:09:28.560,1:09:34.000
terminal in half by clicking this button

1:09:31.679,1:09:36.640
now this one is running the front end

1:09:34.000,1:09:38.799
and with this one we can cd into the

1:09:36.640,1:09:41.120
server part

1:09:38.799,1:09:45.040
let's clear the console and we're going

1:09:41.120,1:09:47.279
to run mpm init dash y

1:09:45.040,1:09:49.359
this is going to initialize amt

1:09:47.279,1:09:52.480
package.json

1:09:49.359,1:09:54.800
there we go with that we can now install

1:09:52.480,1:09:56.719
all the necessary dependencies and add

1:09:54.800,1:09:59.199
corresponding scripts

1:09:56.719,1:10:01.199
so let's first start by installing all

1:09:59.199,1:10:04.560
the necessary dependencies

1:10:01.199,1:10:06.400
to do that we can run npm install

1:10:04.560,1:10:08.800
make sure that you're in the server part

1:10:06.400,1:10:10.400
of our project and we're going to need

1:10:08.800,1:10:11.760
bcrypt

1:10:10.400,1:10:15.040
we're going to use that for hashing

1:10:11.760,1:10:16.880
passwords also crypto to create a random

1:10:15.040,1:10:19.280
cryptographic string

1:10:16.880,1:10:21.280
then we're going to need dot env for

1:10:19.280,1:10:23.280
environmental variables

1:10:21.280,1:10:25.440
also express

1:10:23.280,1:10:29.040
also get stream

1:10:25.440,1:10:32.080
and stream dash chat we are also going

1:10:29.040,1:10:34.880
to use nodemon and finally twilio for

1:10:32.080,1:10:37.360
sending live sms messages

1:10:34.880,1:10:40.080
so let's press enter and we're going to

1:10:37.360,1:10:42.239
wait for this to be installed

1:10:40.080,1:10:45.120
now that our packages have installed we

1:10:42.239,1:10:47.280
can add some new scripts so i'm going to

1:10:45.120,1:10:49.679
delete this test script and i'm going to

1:10:47.280,1:10:51.520
add a start script make sure that

1:10:49.679,1:10:53.840
everything is in double quoted strings

1:10:51.520,1:10:56.239
because we are working with json and

1:10:53.840,1:10:58.320
then right here we can say node

1:10:56.239,1:11:00.880
index.js

1:10:58.320,1:11:02.880
this is a command to start our server

1:11:00.880,1:11:06.000
below that i'm going to add a dev

1:11:02.880,1:11:07.520
command which is going to run nodemon

1:11:06.000,1:11:09.840
index.js

1:11:07.520,1:11:12.320
nodemon is a package that reloads your

1:11:09.840,1:11:14.560
application whenever you change the code

1:11:12.320,1:11:16.560
so we need that for development

1:11:14.560,1:11:18.400
so as you can see now we have the

1:11:16.560,1:11:21.520
scripts we also have all the

1:11:18.400,1:11:23.920
dependencies and let's create the basic

1:11:21.520,1:11:27.679
express node.js server

1:11:23.920,1:11:31.120
so inside of index.js we can say const

1:11:27.679,1:11:33.679
express is equal to require and then

1:11:31.120,1:11:36.800
express we also need course so we can

1:11:33.679,1:11:39.360
say const course is equal to require and

1:11:36.800,1:11:41.840
then that's going to be course

1:11:39.360,1:11:43.360
that's used for cross origin requests

1:11:41.840,1:11:45.920
and i just remembered that we didn't

1:11:43.360,1:11:48.560
install that so we can say mpm install

1:11:45.920,1:11:50.800
and then simply paste course

1:11:48.560,1:11:52.800
okay now that we have express here let's

1:11:50.800,1:11:55.679
create the instance of that express

1:11:52.800,1:11:58.719
application by saying const app is equal

1:11:55.679,1:12:00.800
to express and then we call it

1:11:58.719,1:12:03.679
we also need to specify the port for our

1:12:00.800,1:12:06.320
backend so we can say port is equal to

1:12:03.679,1:12:09.600
process.env.port

1:12:06.320,1:12:12.000
or 5000. also we're going to use a lot

1:12:09.600,1:12:13.199
of environment variables so we can say

1:12:12.000,1:12:15.920
require

1:12:13.199,1:12:18.320
and then dot env

1:12:15.920,1:12:20.080
and then dot config this is going to

1:12:18.320,1:12:22.480
allow us to call the environment

1:12:20.080,1:12:23.600
variables right inside of our node

1:12:22.480,1:12:25.760
application

1:12:23.600,1:12:27.679
now let's set up our middleware by

1:12:25.760,1:12:30.560
saying app.use

1:12:27.679,1:12:32.400
inside of here we can use that course if

1:12:30.560,1:12:35.199
we call it as a function that's going to

1:12:32.400,1:12:37.360
allow us to make cross-origin requests

1:12:35.199,1:12:38.600
we need to set one more middleware which

1:12:37.360,1:12:40.480
is going to be

1:12:38.600,1:12:41.920
express.json and you call it as a

1:12:40.480,1:12:44.400
function

1:12:41.920,1:12:46.800
this will allow us to pass json payloads

1:12:44.400,1:12:48.960
from the front end to the backend and

1:12:46.800,1:12:50.719
finally app.use

1:12:48.960,1:12:52.080
and inside of here we're going to say

1:12:50.719,1:12:55.440
express

1:12:52.080,1:12:57.520
dot url encoded this is a built in

1:12:55.440,1:12:58.960
middleware function in express so it's

1:12:57.520,1:13:01.120
going to be url

1:12:58.960,1:13:02.159
encoded like so

1:13:01.120,1:13:04.640
great

1:13:02.159,1:13:08.080
finally we are ready to create our first

1:13:04.640,1:13:11.120
route and that's going to be app.get and

1:13:08.080,1:13:14.159
it's just going to be a root route so we

1:13:11.120,1:13:17.040
can say just forward slash

1:13:14.159,1:13:18.640
create a callback function

1:13:17.040,1:13:21.040
that callback function is going to

1:13:18.640,1:13:22.480
receive request and response as

1:13:21.040,1:13:25.840
parameters

1:13:22.480,1:13:28.320
we can use the res.send method to simply

1:13:25.840,1:13:30.560
respond with something like hello

1:13:28.320,1:13:32.640
world just so we know that our backend

1:13:30.560,1:13:34.320
server is running

1:13:32.640,1:13:36.880
of course for our server to be running

1:13:34.320,1:13:39.360
we need to run it on a specific port and

1:13:36.880,1:13:40.880
we need to listen for it so let's say

1:13:39.360,1:13:44.239
app.listen

1:13:40.880,1:13:46.560
and that's going to be on port port

1:13:44.239,1:13:49.120
we get a callback function and there we

1:13:46.560,1:13:51.199
can simply say console.log

1:13:49.120,1:13:53.280
and say something like server

1:13:51.199,1:13:56.080
running on port

1:13:53.280,1:13:57.920
and then we can say port right there of

1:13:56.080,1:13:59.760
course for this to work we have to use

1:13:57.920,1:14:01.280
backticks so i'm going to put them right

1:13:59.760,1:14:02.880
here and here

1:14:01.280,1:14:04.159
and we have to close the last

1:14:02.880,1:14:07.120
parentheses

1:14:04.159,1:14:09.920
there we go this is a minimal instance

1:14:07.120,1:14:11.120
of an express application so let's run

1:14:09.920,1:14:14.960
it i'm going to run it in the

1:14:11.120,1:14:16.960
development mode by saying npm run dev

1:14:14.960,1:14:18.960
nodemon started their application on

1:14:16.960,1:14:21.440
localhost 5000.

1:14:18.960,1:14:23.920
so if you open up localhost 5000 in the

1:14:21.440,1:14:24.880
browser you should be able to see hello

1:14:23.920,1:14:27.360
world

1:14:24.880,1:14:29.280
that means that we successfully created

1:14:27.360,1:14:33.040
and ran our server

1:14:29.280,1:14:34.159
now let's add routes for our sign in and

1:14:33.040,1:14:36.320
register

1:14:34.159,1:14:39.840
we can do that by requiring routes at

1:14:36.320,1:14:42.239
the top const aud routes is equal to

1:14:39.840,1:14:44.640
require and then that's going to be dot

1:14:42.239,1:14:47.199
slash routes and then forward slash

1:14:44.640,1:14:49.440
auth.js

1:14:47.199,1:14:52.400
of course we haven't yet created that so

1:14:49.440,1:14:55.440
let's go to our server and let's create

1:14:52.400,1:14:57.920
a folder called routes

1:14:55.440,1:14:58.920
inside of there we can create a new file

1:14:57.920,1:15:00.800
called

1:14:58.920,1:15:03.040
auth.js

1:15:00.800,1:15:06.480
there we need to require express so we

1:15:03.040,1:15:09.040
can say const express is equal to

1:15:06.480,1:15:11.360
require express

1:15:09.040,1:15:14.239
and we need to get a router from that

1:15:11.360,1:15:17.679
express by saying const router is equal

1:15:14.239,1:15:19.520
to express.router and we call it

1:15:17.679,1:15:21.560
finally we're going to create two

1:15:19.520,1:15:23.120
different routes

1:15:21.560,1:15:24.560
router.post

1:15:23.120,1:15:26.560
both of these routes are going to be

1:15:24.560,1:15:28.719
post routes because we have to send the

1:15:26.560,1:15:30.640
data from the front end to the back end

1:15:28.719,1:15:32.560
and only with the post routes can you

1:15:30.640,1:15:34.480
send a payload

1:15:32.560,1:15:36.560
the first one is going to be to forward

1:15:34.480,1:15:38.800
slash sign up

1:15:36.560,1:15:41.280
and the second one is going to be to the

1:15:38.800,1:15:43.120
forward slash login

1:15:41.280,1:15:45.040
of course we want to have a function

1:15:43.120,1:15:47.360
that's going to happen on each one of

1:15:45.040,1:15:48.560
these routes so we're going to create

1:15:47.360,1:15:50.320
controllers

1:15:48.560,1:15:54.239
inside of the server i'm going to create

1:15:50.320,1:15:56.239
a new folder called controllers

1:15:54.239,1:16:00.400
and inside of there i'm going to create

1:15:56.239,1:16:02.560
the auth controllers so auth.js

1:16:00.400,1:16:04.960
now inside of there we can create the

1:16:02.560,1:16:07.840
actual login function by saying cons

1:16:04.960,1:16:10.480
login is equal to a function like this

1:16:07.840,1:16:12.159
and also we can create the sign up

1:16:10.480,1:16:13.360
function

1:16:12.159,1:16:14.960
like this

1:16:13.360,1:16:16.719
of course these functions don't do

1:16:14.960,1:16:18.640
anything yet but we're just creating

1:16:16.719,1:16:19.520
them so that we can export them right

1:16:18.640,1:16:22.159
here

1:16:19.520,1:16:25.120
and with modules we do module dot

1:16:22.159,1:16:28.640
exports is equal to an object and there

1:16:25.120,1:16:29.840
we have the sign up and also the login

1:16:28.640,1:16:31.600
so now we're exporting the

1:16:29.840,1:16:34.560
functionalities which are going to

1:16:31.600,1:16:37.280
happen once we go to a specific route

1:16:34.560,1:16:40.320
so inside of here we actually have to

1:16:37.280,1:16:41.679
import them and we can do that by saying

1:16:40.320,1:16:43.920
const

1:16:41.679,1:16:46.159
sign up and login

1:16:43.920,1:16:49.280
we're getting that from which means

1:16:46.159,1:16:54.000
equal to require dot dot slash

1:16:49.280,1:16:57.360
controllers slash odd dot js

1:16:54.000,1:17:00.000
and what do we do on the sign up post we

1:16:57.360,1:17:03.760
call the sign up on the login post we

1:17:00.000,1:17:06.040
call the login and we need to export our

1:17:03.760,1:17:10.400
router which we can do by saying

1:17:06.040,1:17:13.120
module.exports is equal to router

1:17:10.400,1:17:15.280
now we can use this router inside of our

1:17:13.120,1:17:17.199
index.js which means that these routes

1:17:15.280,1:17:21.199
are going to be added to our whole

1:17:17.199,1:17:22.960
server we can do that by saying app.use

1:17:21.199,1:17:25.280
and then we can specify the start of the

1:17:22.960,1:17:26.239
url which is going to be forward slash

1:17:25.280,1:17:28.560
auth

1:17:26.239,1:17:31.760
and what do we show on the forward slash

1:17:28.560,1:17:34.480
auth well we show the auth routes which

1:17:31.760,1:17:36.800
we imported from the routes folder that

1:17:34.480,1:17:39.040
part is now done and now the only thing

1:17:36.800,1:17:40.960
we have to do is actually implement the

1:17:39.040,1:17:42.239
logic of receiving the data from the

1:17:40.960,1:17:44.880
front end

1:17:42.239,1:17:46.719
and finally creating or logging in the

1:17:44.880,1:17:49.040
user

1:17:46.719,1:17:51.600
a reasonable first step would be to

1:17:49.040,1:17:54.000
create the sign up first because we have

1:17:51.600,1:17:54.719
to have the users to be able to log them

1:17:54.000,1:17:57.040
in

1:17:54.719,1:17:59.840
so let's try with the signup we're going

1:17:57.040,1:18:00.719
to have a try and catch block right

1:17:59.840,1:18:02.239
there

1:18:00.719,1:18:04.159
if something goes right we're going to

1:18:02.239,1:18:07.120
be inside of here if something goes

1:18:04.159,1:18:08.880
wrong well we're inside of the catch

1:18:07.120,1:18:10.560
if we're there we can simply run

1:18:08.880,1:18:13.840
console.log

1:18:10.560,1:18:15.199
error and also res dot status

1:18:13.840,1:18:17.520
500

1:18:15.199,1:18:19.520
dot json and then we're simply going to

1:18:17.520,1:18:22.320
send back the message which is going to

1:18:19.520,1:18:24.080
be the error

1:18:22.320,1:18:26.239
you might be wondering where is this

1:18:24.080,1:18:28.719
rest coming from well every single

1:18:26.239,1:18:30.640
controller is going to have the rec and

1:18:28.719,1:18:32.159
the rest functions

1:18:30.640,1:18:34.159
our rack is going to contain the

1:18:32.159,1:18:35.360
information what we're sending from the

1:18:34.159,1:18:37.280
front end

1:18:35.360,1:18:39.440
now i'm going to copy this part to the

1:18:37.280,1:18:41.600
login as well because that part is the

1:18:39.440,1:18:42.800
same and let's start implementing the

1:18:41.600,1:18:44.960
sign up

1:18:42.800,1:18:47.199
for the sign up what things do we need

1:18:44.960,1:18:49.440
to get from our request that body or

1:18:47.199,1:18:51.679
more specifically from the front end

1:18:49.440,1:18:54.320
well we can destructure it because we

1:18:51.679,1:18:57.040
are getting everything from direct.body

1:18:54.320,1:18:59.920
so what do we need well we need a full

1:18:57.040,1:19:01.120
name to save it to the database also the

1:18:59.920,1:19:03.920
username

1:19:01.120,1:19:05.199
the password and finally the phone

1:19:03.920,1:19:07.360
number

1:19:05.199,1:19:10.480
now that we have that information let's

1:19:07.360,1:19:14.159
create a random user id for each new

1:19:10.480,1:19:18.000
user we can do that by saying const user

1:19:14.159,1:19:19.840
id is equal to crypto that's going to be

1:19:18.000,1:19:23.760
a package that we need to import at the

1:19:19.840,1:19:26.320
top so just at the top above the sign up

1:19:23.760,1:19:28.719
let's require the crypto package

1:19:26.320,1:19:31.040
or let's also require all the packages

1:19:28.719,1:19:34.640
that we're going to use in this file

1:19:31.040,1:19:36.960
so that's going to be const connect

1:19:34.640,1:19:38.480
that's coming from or more specifically

1:19:36.960,1:19:41.040
require

1:19:38.480,1:19:43.840
get stream

1:19:41.040,1:19:46.800
then also const bcrypt

1:19:43.840,1:19:48.640
is equal to require and that's going to

1:19:46.800,1:19:50.800
be bcrypt

1:19:48.640,1:19:53.760
we also need an instance of a stream

1:19:50.800,1:19:58.239
chat so we can say const stream

1:19:53.760,1:19:59.600
chat is equal to require stream dash

1:19:58.239,1:20:02.320
chat

1:19:59.600,1:20:04.800
and finally cons crypto

1:20:02.320,1:20:06.320
is equal to require

1:20:04.800,1:20:08.480
crypto

1:20:06.320,1:20:09.280
that's it now we have everything that we

1:20:08.480,1:20:11.280
need

1:20:09.280,1:20:12.880
let's scroll down and let's implement

1:20:11.280,1:20:15.920
the user id

1:20:12.880,1:20:20.080
so to create a random crypto string we

1:20:15.920,1:20:21.920
can say crypto dot random bytes and

1:20:20.080,1:20:25.679
let's do something like

1:20:21.920,1:20:27.840
16 and create a hexadecimal string out

1:20:25.679,1:20:31.120
of it this is going to create a random

1:20:27.840,1:20:33.520
sequence of 16 hexadecimal digits now

1:20:31.120,1:20:34.880
let's make a connection to stream we can

1:20:33.520,1:20:38.960
say const

1:20:34.880,1:20:41.440
server client is equal to connect

1:20:38.960,1:20:44.080
and now we have to use that connect from

1:20:41.440,1:20:46.480
the get stream to connect to the server

1:20:44.080,1:20:48.800
but we need to pass a few things

1:20:46.480,1:20:51.840
we need to pass the api key so let's

1:20:48.800,1:20:55.760
specify it here api underscore key

1:20:51.840,1:20:58.000
also api underscore secret and finally

1:20:55.760,1:21:00.560
app underscore id

1:20:58.000,1:21:02.480
all of these things should be secret and

1:21:00.560,1:21:04.960
you shouldn't share them with anyone

1:21:02.480,1:21:06.239
that's why we're gonna use environment

1:21:04.960,1:21:09.840
variables

1:21:06.239,1:21:13.120
so just at the top let's say const api

1:21:09.840,1:21:16.639
underscore key is equal to process dot

1:21:13.120,1:21:18.239
env that stream underscore api

1:21:16.639,1:21:20.560
underscore key

1:21:18.239,1:21:22.800
i'm gonna duplicate this two times the

1:21:20.560,1:21:24.639
second thing is going to be api

1:21:22.800,1:21:29.280
underscore secret

1:21:24.639,1:21:31.040
and in here we can say stream api secret

1:21:29.280,1:21:34.000
then we're going to have the

1:21:31.040,1:21:35.280
app underscore id and that's going to be

1:21:34.000,1:21:38.000
stream

1:21:35.280,1:21:38.800
app underscore id so stream underscore

1:21:38.000,1:21:40.560
app

1:21:38.800,1:21:41.440
underscore id

1:21:40.560,1:21:44.159
great

1:21:41.440,1:21:45.600
now where do we find these values well

1:21:44.159,1:21:48.320
you can find them in your stream

1:21:45.600,1:21:51.040
dashboard let me show you

1:21:48.320,1:21:53.600
right here on your stream dashboard you

1:21:51.040,1:21:56.719
have your profile you go to chats and

1:21:53.600,1:21:58.719
then finally you go to overview there at

1:21:56.719,1:22:00.880
the top you'll be able to find your app

1:21:58.719,1:22:02.080
id so that's the first thing that you

1:22:00.880,1:22:04.560
can copy

1:22:02.080,1:22:07.600
now we can create a new file inside of

1:22:04.560,1:22:10.800
our server called dot env

1:22:07.600,1:22:14.080
and there we can add our app id so i'm

1:22:10.800,1:22:17.280
going to copy the name stream app id and

1:22:14.080,1:22:20.960
paste it here and add the equal sign in

1:22:17.280,1:22:23.199
between so stream app id like this

1:22:20.960,1:22:25.199
also we can copy those

1:22:23.199,1:22:27.199
paste them and let's go back to the

1:22:25.199,1:22:29.760
dashboard to find the values for the

1:22:27.199,1:22:32.159
secret and for the key

1:22:29.760,1:22:33.520
now if you scroll a bit down you should

1:22:32.159,1:22:37.120
be able to see

1:22:33.520,1:22:39.760
app access keys here is a key let's copy

1:22:37.120,1:22:42.639
it paste it right here

1:22:39.760,1:22:45.280
and finally a secret i'm going to copy

1:22:42.639,1:22:47.280
it and paste it right here

1:22:45.280,1:22:49.120
now we have all of the necessary

1:22:47.280,1:22:52.080
environment variables

1:22:49.120,1:22:55.280
let's go back to our controllers and now

1:22:52.080,1:22:58.080
these values api key secret and id are

1:22:55.280,1:23:00.639
going to be populated straight from our

1:22:58.080,1:23:03.120
environment variables therefore we can

1:23:00.639,1:23:05.120
use them right here to connect to our

1:23:03.120,1:23:07.040
server client

1:23:05.120,1:23:10.239
we are going to use that server client

1:23:07.040,1:23:12.480
to create a new user token so let's

1:23:10.239,1:23:14.880
create a password first

1:23:12.480,1:23:16.960
const and that's going to be hashed

1:23:14.880,1:23:18.800
password

1:23:16.960,1:23:21.360
is going to be equal to

1:23:18.800,1:23:24.080
a weight bcrypt

1:23:21.360,1:23:27.120
and then we call the dot hash method on

1:23:24.080,1:23:30.000
the bcrypt and we pass in the password

1:23:27.120,1:23:31.920
and finally we can pass 10 as salt

1:23:30.000,1:23:34.239
basically how much is it going to

1:23:31.920,1:23:36.000
encrypt it this number specifies the

1:23:34.239,1:23:38.480
level of encryption

1:23:36.000,1:23:41.520
great i've noticed that i didn't specify

1:23:38.480,1:23:43.280
my function as async so let's add it as

1:23:41.520,1:23:44.080
async because we're using a weight in

1:23:43.280,1:23:46.639
here

1:23:44.080,1:23:49.520
and this line is turning our plain text

1:23:46.639,1:23:51.760
password to the hashed password

1:23:49.520,1:23:55.520
finally let's create a token for our

1:23:51.760,1:23:57.840
user by saying cons token is equal to

1:23:55.520,1:24:02.239
server client

1:23:57.840,1:24:05.440
dot create user token and then in there

1:24:02.239,1:24:07.679
we can pass the user id

1:24:05.440,1:24:10.800
now we have everything we need we have a

1:24:07.679,1:24:13.520
phone number username full name token

1:24:10.800,1:24:16.080
everything ready to create a user so

1:24:13.520,1:24:19.120
let's return that data to the front end

1:24:16.080,1:24:20.639
rest that status is equal to 200

1:24:19.120,1:24:23.120
dot json

1:24:20.639,1:24:24.560
and then an object we want to pass the

1:24:23.120,1:24:26.320
token

1:24:24.560,1:24:27.679
full name

1:24:26.320,1:24:29.520
username

1:24:27.679,1:24:32.880
user id

1:24:29.520,1:24:35.840
hashed password and finally we also want

1:24:32.880,1:24:37.440
to pass the phone number

1:24:35.840,1:24:39.360
we could get these values straight from

1:24:37.440,1:24:41.600
the front end but let's get them from

1:24:39.360,1:24:43.920
the back end as it's more secure that

1:24:41.600,1:24:45.679
way to be sure that this is the actual

1:24:43.920,1:24:48.239
user we're creating

1:24:45.679,1:24:50.000
and while we're here let's also create

1:24:48.239,1:24:52.960
our login function

1:24:50.000,1:24:54.719
it's also going to be an async function

1:24:52.960,1:24:56.159
we also want to get some data from the

1:24:54.719,1:24:58.719
front end

1:24:56.159,1:25:00.800
const and in this case we just want to

1:24:58.719,1:25:02.800
get the username

1:25:00.800,1:25:06.719
and the password

1:25:02.800,1:25:09.040
that part is coming from wreck that body

1:25:06.719,1:25:11.199
and rig that body is getting populated

1:25:09.040,1:25:13.760
as we pass data from the front end from

1:25:11.199,1:25:16.320
our form which we created previously to

1:25:13.760,1:25:19.040
the back end we also want to connect to

1:25:16.320,1:25:21.440
the client so we can use this server

1:25:19.040,1:25:23.920
client connect it's going to be the same

1:25:21.440,1:25:26.000
thing i'm going to paste it here

1:25:23.920,1:25:28.560
and we also want to create a new

1:25:26.000,1:25:31.520
instance of a stream chat we can say

1:25:28.560,1:25:32.560
const client is equal to

1:25:31.520,1:25:34.960
stream

1:25:32.560,1:25:36.159
chat dot get

1:25:34.960,1:25:38.320
instance

1:25:36.159,1:25:42.080
and then in there we pass the api

1:25:38.320,1:25:43.920
underscore key and api underscore secret

1:25:42.080,1:25:46.960
we need to use that because we want to

1:25:43.920,1:25:49.840
query all the users from the database

1:25:46.960,1:25:53.040
that match this specific username

1:25:49.840,1:25:54.719
so we can say const they structure it to

1:25:53.040,1:25:57.679
get the users

1:25:54.719,1:26:00.400
and then say equal to await

1:25:57.679,1:26:01.520
client dot query

1:26:00.400,1:26:03.920
users

1:26:01.520,1:26:07.520
and then only the users that match the

1:26:03.920,1:26:09.920
name which is equal to username

1:26:07.520,1:26:12.080
so one more time this time we're not

1:26:09.920,1:26:14.239
creating the user we are taking the

1:26:12.080,1:26:16.880
username and we want to query all the

1:26:14.239,1:26:18.080
users from the database to see if anyone

1:26:16.880,1:26:20.560
matches

1:26:18.080,1:26:23.360
if there are no users so if

1:26:20.560,1:26:25.840
no users.length

1:26:23.360,1:26:29.040
then in that case we can return

1:26:25.840,1:26:31.840
rest.status let's do 400

1:26:29.040,1:26:34.719
dot json and the message is going to be

1:26:31.840,1:26:36.960
something like user not found

1:26:34.719,1:26:39.040
if we go over this point that means that

1:26:36.960,1:26:40.960
our user does exist and we have to

1:26:39.040,1:26:42.639
decrypt the password and see if it

1:26:40.960,1:26:44.719
matches the one that the user created

1:26:42.639,1:26:45.920
the account with so we can say cons

1:26:44.719,1:26:48.000
success

1:26:45.920,1:26:50.159
is equal to await

1:26:48.000,1:26:52.800
bcrypt.compair

1:26:50.159,1:26:55.920
we pass in the password and we take the

1:26:52.800,1:26:56.880
old user's password by saying users

1:26:55.920,1:26:58.719
0

1:26:56.880,1:27:00.080
dot hashed

1:26:58.719,1:27:02.480
password

1:27:00.080,1:27:05.040
again every user is going to have that

1:27:02.480,1:27:07.199
hash password variable because remember

1:27:05.040,1:27:09.199
when creating the user we actually

1:27:07.199,1:27:10.239
create the hashed version of his

1:27:09.199,1:27:12.400
password

1:27:10.239,1:27:14.480
we are not keeping it in plain text and

1:27:12.400,1:27:16.560
that's why we gotta do it

1:27:14.480,1:27:19.199
now that we have that we also want to

1:27:16.560,1:27:23.280
create a new user token by saying cons

1:27:19.199,1:27:27.120
token is equal to server client

1:27:23.280,1:27:30.320
dot create user token and this time the

1:27:27.120,1:27:34.719
token has to be created using the same

1:27:30.320,1:27:37.520
existing id so we can say user 0 dot id

1:27:34.719,1:27:40.080
we are no longer passing just a regular

1:27:37.520,1:27:43.920
user id which we just created we want to

1:27:40.080,1:27:45.920
pass that specific user's id

1:27:43.920,1:27:49.440
and now that we have everything we have

1:27:45.920,1:27:51.679
the token if our action is successful so

1:27:49.440,1:27:54.480
if this is success

1:27:51.679,1:27:56.719
in that case we want to finally send all

1:27:54.480,1:27:59.360
the data back so we can say rest that

1:27:56.719,1:28:03.040
status is equal to 200

1:27:59.360,1:28:04.320
and then dot json and here pass the data

1:28:03.040,1:28:06.560
we want to send

1:28:04.320,1:28:09.360
we want to pass the token

1:28:06.560,1:28:13.520
we also want to pass the full name which

1:28:09.360,1:28:14.480
is going to be equal to users 0 dot full

1:28:13.520,1:28:17.360
name

1:28:14.480,1:28:20.560
then we want to pass the user name

1:28:17.360,1:28:25.040
finally we want to pass the user id by

1:28:20.560,1:28:27.920
saying users 0 and then dot id

1:28:25.040,1:28:31.120
now we have everything we need finally

1:28:27.920,1:28:32.719
if we had a failure here we can say

1:28:31.120,1:28:36.000
rest.status

1:28:32.719,1:28:39.440
that's going to be 500 dot json and we

1:28:36.000,1:28:42.400
can simply return a message in an object

1:28:39.440,1:28:44.080
which is going to say incorrect password

1:28:42.400,1:28:46.480
like this

1:28:44.080,1:28:49.520
that's it i know that this hasn't been

1:28:46.480,1:28:52.880
easy we are creating users creating

1:28:49.520,1:28:54.880
different user ids hashing passwords

1:28:52.880,1:28:57.280
sending the data back to the front end

1:28:54.880,1:28:59.520
and then for the logged in users we are

1:28:57.280,1:29:02.320
querying that user from the database

1:28:59.520,1:29:04.719
again decrypting that password comparing

1:29:02.320,1:29:06.880
it and then finally creating the new

1:29:04.719,1:29:10.080
token and sending it back it's

1:29:06.880,1:29:11.440
definitely not easy but now we have our

1:29:10.080,1:29:14.000
back end done

1:29:11.440,1:29:16.639
now we can close all of these files

1:29:14.000,1:29:20.560
and then go back to the client side more

1:29:16.639,1:29:23.120
specifically in components auth and then

1:29:20.560,1:29:25.679
from here into handle submit remember

1:29:23.120,1:29:28.560
this form data we want to pass that form

1:29:25.679,1:29:31.199
data back to our back end let's do that

1:29:28.560,1:29:33.280
right away okay instead of console

1:29:31.199,1:29:36.000
logging the form let's actually get the

1:29:33.280,1:29:38.960
data out of it we can say const and then

1:29:36.000,1:29:41.840
destructure some data from the form

1:29:38.960,1:29:43.760
in this case we are going to need the

1:29:41.840,1:29:45.120
full name

1:29:43.760,1:29:46.480
username

1:29:45.120,1:29:49.840
password

1:29:46.480,1:29:52.800
phone number and then finally the avatar

1:29:49.840,1:29:55.360
url and all of this is coming from not e

1:29:52.800,1:29:58.080
target it's coming from form

1:29:55.360,1:30:00.880
then we need to specify the url we'll be

1:29:58.080,1:30:03.920
making a request to so we can say

1:30:00.880,1:30:06.800
conturl is equal to and that's going to

1:30:03.920,1:30:07.840
be http colon forward slash forward

1:30:06.800,1:30:09.280
slash

1:30:07.840,1:30:11.520
localhost

1:30:09.280,1:30:14.239
collin 5000

1:30:11.520,1:30:16.960
that's it this is our url but don't

1:30:14.239,1:30:17.920
forget it's going to be to forward slash

1:30:16.960,1:30:19.920
auth

1:30:17.920,1:30:22.960
now that we have the data and we know

1:30:19.920,1:30:24.719
our url let's make an axios call

1:30:22.960,1:30:27.120
i'm going to turn this function into an

1:30:24.719,1:30:29.840
async function so that we can use async

1:30:27.120,1:30:32.800
away and let's use axios to make that

1:30:29.840,1:30:34.400
request we can say const that's going to

1:30:32.800,1:30:38.199
be data

1:30:34.400,1:30:39.920
and that is coming from await

1:30:38.199,1:30:43.120
axios.post

1:30:39.920,1:30:44.400
we post to a specific url so i'm going

1:30:43.120,1:30:45.760
to say

1:30:44.400,1:30:48.159
url

1:30:45.760,1:30:51.040
but it's not it we have the forward

1:30:48.159,1:30:53.920
slash odd but then it has to be either

1:30:51.040,1:30:55.920
sign up or log in and how are we going

1:30:53.920,1:30:58.639
to know which one is which

1:30:55.920,1:31:01.600
well we can say forward slash and then

1:30:58.639,1:31:03.440
inside of here we can see are we on the

1:31:01.600,1:31:06.719
sign up so

1:31:03.440,1:31:08.560
if it is sign up in that case we are

1:31:06.719,1:31:09.920
going to simply show

1:31:08.560,1:31:12.159
sign up

1:31:09.920,1:31:15.280
but if it's not sign up we are going to

1:31:12.159,1:31:17.840
go to sign in so we can have this

1:31:15.280,1:31:19.280
logical block right inside of our string

1:31:17.840,1:31:21.199
right here

1:31:19.280,1:31:23.120
and finally the second thing that we

1:31:21.199,1:31:25.679
have to pass into this function is going

1:31:23.120,1:31:28.320
to be the object with all the data we

1:31:25.679,1:31:30.960
can pass the username

1:31:28.320,1:31:32.719
also the password

1:31:30.960,1:31:36.080
full name

1:31:32.719,1:31:38.400
and finally phone number

1:31:36.080,1:31:40.000
and the avatar url

1:31:38.400,1:31:42.560
great there are a lot of things we're

1:31:40.000,1:31:45.040
passing but we should be fine

1:31:42.560,1:31:46.719
from that we are getting the data that's

1:31:45.040,1:31:48.239
the data we're passing back from the

1:31:46.719,1:31:50.480
front end

1:31:48.239,1:31:52.639
now that we're passing the right url and

1:31:50.480,1:31:54.560
we're passing all the necessary data

1:31:52.639,1:31:57.120
we'll also be getting something back

1:31:54.560,1:31:59.280
from that data so let's immediately

1:31:57.120,1:32:02.320
destructure some things out of it

1:31:59.280,1:32:06.960
we are going to the structure the token

1:32:02.320,1:32:08.639
also the user id and finally the hashed

1:32:06.960,1:32:09.679
password

1:32:08.639,1:32:12.800
great

1:32:09.679,1:32:14.880
now let's use those values to add them

1:32:12.800,1:32:17.120
to the browser cookies

1:32:14.880,1:32:19.520
so let's create an instance of our

1:32:17.120,1:32:20.639
cookies at the top i'm going to say

1:32:19.520,1:32:22.800
const

1:32:20.639,1:32:25.440
cookies is equal to

1:32:22.800,1:32:26.480
new and then we call cookies

1:32:25.440,1:32:28.960
great

1:32:26.480,1:32:31.679
right here we can use those cookies by

1:32:28.960,1:32:34.480
saying cookies dot set

1:32:31.679,1:32:35.520
and then for example let's first set the

1:32:34.480,1:32:38.159
token

1:32:35.520,1:32:41.199
right here i'm gonna say token and then

1:32:38.159,1:32:43.440
pass the actual token value

1:32:41.199,1:32:44.639
now i'm going to repeat this three more

1:32:43.440,1:32:46.880
times

1:32:44.639,1:32:49.840
and the second time instead of the token

1:32:46.880,1:32:52.239
it's going to be user name

1:32:49.840,1:32:54.400
for the third time it's going to be the

1:32:52.239,1:32:57.280
full name we want to store all of this

1:32:54.400,1:33:00.880
data inside of our cookies and then

1:32:57.280,1:33:04.080
finally it's going to be user id

1:33:00.880,1:33:06.719
but if we're creating the account so if

1:33:04.080,1:33:09.280
is sign up we have some more things we

1:33:06.719,1:33:10.480
might want to set so i'm going to copy

1:33:09.280,1:33:13.199
these

1:33:10.480,1:33:16.320
and if it is sign up we also want to set

1:33:13.199,1:33:17.520
the phone number so right here phone

1:33:16.320,1:33:20.400
number

1:33:17.520,1:33:21.520
also the avatar

1:33:20.400,1:33:23.360
url

1:33:21.520,1:33:27.199
make sure that all letters are

1:33:23.360,1:33:28.560
uppercased and finally hashed

1:33:27.199,1:33:30.960
password

1:33:28.560,1:33:33.600
in this case we are storing everything

1:33:30.960,1:33:35.840
inside of the cookies we might not need

1:33:33.600,1:33:37.360
everything on our front end but it's

1:33:35.840,1:33:39.280
just good to know that all the data

1:33:37.360,1:33:41.679
we're getting from the back end we now

1:33:39.280,1:33:44.320
have it we have the avatar url the phone

1:33:41.679,1:33:46.080
number and we'll be able to use it all

1:33:44.320,1:33:48.239
across our application

1:33:46.080,1:33:50.960
finally once we set the cookies we want

1:33:48.239,1:33:52.320
to reload our browser we can do that by

1:33:50.960,1:33:55.920
saying window

1:33:52.320,1:33:57.520
dot location dot reload and we call that

1:33:55.920,1:33:59.840
as a function

1:33:57.520,1:34:01.360
with that we are completely done with

1:33:59.840,1:34:04.239
our odd file

1:34:01.360,1:34:06.639
so one more time to repeat we are going

1:34:04.239,1:34:08.560
to fill in all the inputs

1:34:06.639,1:34:10.080
then we are going to go into the handle

1:34:08.560,1:34:12.480
submit function

1:34:10.080,1:34:13.600
get all the data from the form get the

1:34:12.480,1:34:16.239
url

1:34:13.600,1:34:18.080
make the request to our backend

1:34:16.239,1:34:20.960
more specifically we're going to make a

1:34:18.080,1:34:23.199
request to a different url each time

1:34:20.960,1:34:24.560
depending on if we're logging in or

1:34:23.199,1:34:26.480
signing up

1:34:24.560,1:34:28.800
and we're going to pass all the form

1:34:26.480,1:34:30.960
data then we're going to get some data

1:34:28.800,1:34:33.199
back from the backend and we're going to

1:34:30.960,1:34:35.360
store everything into cookies

1:34:33.199,1:34:36.960
then finally we're going to reload our

1:34:35.360,1:34:39.520
application

1:34:36.960,1:34:42.159
why are we doing the reload well if we

1:34:39.520,1:34:44.960
do the location.reload we're going to

1:34:42.159,1:34:47.600
reload the application and this time our

1:34:44.960,1:34:50.400
auth token should be filled that means

1:34:47.600,1:34:52.239
that we are not going to hit auth again

1:34:50.400,1:34:54.480
we are going to go to our chat as a

1:34:52.239,1:34:57.679
logged in user because now we're going

1:34:54.480,1:35:00.639
to have our odd token

1:34:57.679,1:35:02.880
okay but right now we have this odd

1:35:00.639,1:35:04.880
token set to be false how can we

1:35:02.880,1:35:07.520
actually get the data

1:35:04.880,1:35:10.480
well we can do that using the cookies we

1:35:07.520,1:35:13.360
can say const cookies is equal to new

1:35:10.480,1:35:15.600
cookies same thing we did before and now

1:35:13.360,1:35:17.679
instead of setting the values we are

1:35:15.600,1:35:20.719
going to get them

1:35:17.679,1:35:24.239
let's first get the odd token i'm going

1:35:20.719,1:35:27.679
to pull this up below the api key and we

1:35:24.239,1:35:30.639
can simply do cookies dot get and then

1:35:27.679,1:35:33.199
in here it's going to be token

1:35:30.639,1:35:36.480
now we can see if we have that auth

1:35:33.199,1:35:38.960
token by doing if odd token

1:35:36.480,1:35:41.760
if we do have the auth token we want to

1:35:38.960,1:35:42.960
create a user so we can say

1:35:41.760,1:35:44.000
dot

1:35:42.960,1:35:45.280
connect

1:35:44.000,1:35:47.600
user

1:35:45.280,1:35:50.639
if the user hasn't been created yet

1:35:47.600,1:35:52.239
it's going to create it so client dot

1:35:50.639,1:35:55.280
connect user

1:35:52.239,1:35:56.400
this thing accepts an object so let's

1:35:55.280,1:35:59.119
expand it

1:35:56.400,1:36:01.920
and we have to pass everything that we

1:35:59.119,1:36:02.719
have right here in the cookies

1:36:01.920,1:36:05.920
so

1:36:02.719,1:36:08.719
i'm going to simply copy these values

1:36:05.920,1:36:11.199
and also these values

1:36:08.719,1:36:13.920
now i'm going to go back and simply

1:36:11.199,1:36:16.480
paste them as you can see we have all of

1:36:13.920,1:36:18.800
these cookies of course this is not in

1:36:16.480,1:36:20.000
the right format so what you can do is

1:36:18.800,1:36:23.280
click here

1:36:20.000,1:36:26.560
then you can move across by holding ctrl

1:36:23.280,1:36:29.280
and using arrow right and arrow left by

1:36:26.560,1:36:32.159
doing that we can now delete or reset

1:36:29.280,1:36:34.800
this set to simply get

1:36:32.159,1:36:37.360
also we are not setting anything so we

1:36:34.800,1:36:39.600
can delete these values by simply moving

1:36:37.360,1:36:42.159
to the end of each line and then holding

1:36:39.600,1:36:44.320
control and pressing backspace

1:36:42.159,1:36:45.760
as you can see now we're simply getting

1:36:44.320,1:36:48.239
all of the values

1:36:45.760,1:36:50.960
but we're not done yet of course we're

1:36:48.239,1:36:53.119
in an object so we have to have the key

1:36:50.960,1:36:57.360
go at the end of the string

1:36:53.119,1:36:59.280
hold ctrl and shift and press arrow left

1:36:57.360,1:37:00.159
that's going to allow you to copy each

1:36:59.280,1:37:02.880
word

1:37:00.159,1:37:05.199
now press ctrl c and then a few more

1:37:02.880,1:37:07.360
times ctrl left arrow

1:37:05.199,1:37:09.280
go to the start of the line and press

1:37:07.360,1:37:11.840
ctrl v

1:37:09.280,1:37:14.080
and finally a colon

1:37:11.840,1:37:17.440
once you do it one more time go to the

1:37:14.080,1:37:19.520
end of the line and turn all semicolons

1:37:17.440,1:37:21.360
to simply columns

1:37:19.520,1:37:24.159
and just like that we've used some

1:37:21.360,1:37:26.000
shortcut magic to format all of our data

1:37:24.159,1:37:28.480
from setting the cookies to getting the

1:37:26.000,1:37:31.280
cookies and using them for the connect

1:37:28.480,1:37:33.760
user call now if this was a bit too much

1:37:31.280,1:37:36.000
for you or if you followed along but you

1:37:33.760,1:37:37.679
would like to learn more cool shortcuts

1:37:36.000,1:37:40.480
let me know in the comments down below

1:37:37.679,1:37:42.159
to create a whole shortcuts video

1:37:40.480,1:37:44.400
if this was too hard for you to follow

1:37:42.159,1:37:46.639
along definitely make sure that you have

1:37:44.400,1:37:49.040
everything the same as we have right now

1:37:46.639,1:37:51.679
you need to have the token username full

1:37:49.040,1:37:53.360
name and all these details being fetched

1:37:51.679,1:37:55.600
from the cookies

1:37:53.360,1:37:58.639
we have to make just a few changes

1:37:55.600,1:38:01.480
the user id cannot be user id it simply

1:37:58.639,1:38:03.920
has to be id that's how it is in the

1:38:01.480,1:38:06.239
client.connect user

1:38:03.920,1:38:09.360
then instead of the username this thing

1:38:06.239,1:38:12.159
here is just going to be name

1:38:09.360,1:38:14.639
after that we have full name

1:38:12.159,1:38:17.840
after that instead of the avatar url

1:38:14.639,1:38:19.679
we're going to call this simply image

1:38:17.840,1:38:23.040
then we're going to have the hashed

1:38:19.679,1:38:24.960
password and finally the phone number

1:38:23.040,1:38:27.119
we won't need the token here because

1:38:24.960,1:38:28.960
we're already getting it at the top so

1:38:27.119,1:38:30.719
you can remove that line

1:38:28.960,1:38:32.719
now that we're done with this make sure

1:38:30.719,1:38:34.880
that you have everything the same just

1:38:32.719,1:38:36.480
in case so that we don't have any errors

1:38:34.880,1:38:38.719
moving forward

1:38:36.480,1:38:42.560
finally this connect user function

1:38:38.719,1:38:43.440
accepts a second parameter which is

1:38:42.560,1:38:46.960
odd

1:38:43.440,1:38:49.280
token that same token we had right here

1:38:46.960,1:38:51.840
that's it this is going to connect our

1:38:49.280,1:38:53.119
user and we'll be able to get all of his

1:38:51.840,1:38:55.199
messages

1:38:53.119,1:38:57.840
now let's see if our if statement here

1:38:55.199,1:39:00.480
makes sense so if there is no odd token

1:38:57.840,1:39:03.760
then return auth but if there is odd

1:39:00.480,1:39:06.560
token then simply show this and that's

1:39:03.760,1:39:08.960
exactly what we want to see so let's try

1:39:06.560,1:39:10.719
creating a user and then logging in as

1:39:08.960,1:39:13.520
that user

1:39:10.719,1:39:17.199
before we go ahead and sign up let's

1:39:13.520,1:39:19.840
quickly open up the stream chat overview

1:39:17.199,1:39:21.440
right here you can go to chat and then

1:39:19.840,1:39:23.520
explorer

1:39:21.440,1:39:26.080
under users you should be able to see

1:39:23.520,1:39:28.880
just yourself your own user and then

1:39:26.080,1:39:31.679
under channels no results at the moment

1:39:28.880,1:39:34.800
so if we successfully did everything

1:39:31.679,1:39:37.280
once we sign up we should see a new user

1:39:34.800,1:39:40.400
created right here so let's go to our

1:39:37.280,1:39:42.719
medical pager before i click sign up i'm

1:39:40.400,1:39:45.360
going to open the console and let's

1:39:42.719,1:39:47.840
click sign up there we go we have an

1:39:45.360,1:39:49.760
error which is completely normal we did

1:39:47.840,1:39:52.159
a lot of coding but we haven't tested it

1:39:49.760,1:39:56.080
so now is the time to finally do

1:39:52.159,1:40:00.159
so we have a 500 let's look at it

1:39:56.080,1:40:02.080
500 on the sign up and we have a message

1:40:00.159,1:40:05.199
this method can only be used on server

1:40:02.080,1:40:07.679
side using your api secret use client

1:40:05.199,1:40:09.119
and then stream connect so looks like we

1:40:07.679,1:40:11.440
are using something that shouldn't be

1:40:09.119,1:40:14.080
used on the backend let's check it out

1:40:11.440,1:40:16.159
in more detail looking at the code and

1:40:14.080,1:40:18.880
looking at the stream documentation i've

1:40:16.159,1:40:21.600
noticed that right here alongside stream

1:40:18.880,1:40:23.600
chat and just requiring stream chat we

1:40:21.600,1:40:26.960
also have to create an instance out of

1:40:23.600,1:40:28.080
it so right there we have to say stream

1:40:26.960,1:40:30.080
chat

1:40:28.080,1:40:33.520
i'm assuming that the values of these

1:40:30.080,1:40:36.000
environment variables are undefined so

1:40:33.520,1:40:39.199
let's go to our index and then let's

1:40:36.000,1:40:41.840
take this require.env.config

1:40:39.199,1:40:44.080
and let's just put it right here above

1:40:41.840,1:40:46.800
where we need those values

1:40:44.080,1:40:50.239
i'm going to save it go back and one

1:40:46.800,1:40:52.560
more time i'm going to click sign up

1:40:50.239,1:40:54.320
there we go

1:40:52.560,1:40:56.639
we didn't have the values for the

1:40:54.320,1:40:58.800
environment variables so let me quickly

1:40:56.639,1:41:01.280
explain what happened we were trying to

1:40:58.800,1:41:03.520
connect to this specific thing and it

1:41:01.280,1:41:05.360
was saying you cannot connect these

1:41:03.520,1:41:07.600
values are not filled in

1:41:05.360,1:41:10.960
so i assumed that the environment

1:41:07.600,1:41:11.760
variables from the env weren't filling

1:41:10.960,1:41:14.239
in

1:41:11.760,1:41:17.360
and that means that we need to require

1:41:14.239,1:41:20.000
the envconfig just prior to using the

1:41:17.360,1:41:22.639
environment variables so just by adding

1:41:20.000,1:41:24.639
this line we fixed the issue

1:41:22.639,1:41:26.719
but also it's good that we came across

1:41:24.639,1:41:29.280
this issue because i've noticed that we

1:41:26.719,1:41:31.360
were missing this dot stream chat here

1:41:29.280,1:41:34.639
so definitely make sure to include that

1:41:31.360,1:41:36.960
part with that said we are actually

1:41:34.639,1:41:39.360
logged in as you can see right there

1:41:36.960,1:41:42.159
channel container we have our channels

1:41:39.360,1:41:43.920
and direct messages and you have no

1:41:42.159,1:41:45.840
channels currently

1:41:43.920,1:41:48.320
of course right now we don't even have

1:41:45.840,1:41:51.600
the button to create those channels but

1:41:48.320,1:41:54.159
if there were any they would show here

1:41:51.600,1:41:57.440
what we could do is now go to stream

1:41:54.159,1:42:00.880
chat overview and see if that user has

1:41:57.440,1:42:02.080
been created so let's go to explorer

1:42:00.880,1:42:03.920
users

1:42:02.080,1:42:07.119
and look at that

1:42:03.920,1:42:09.280
this is our user id and if you click it

1:42:07.119,1:42:12.239
you can see right here you can see the

1:42:09.280,1:42:14.480
phone number the hashed password this is

1:42:12.239,1:42:17.199
what the hash looks like so we don't

1:42:14.480,1:42:19.360
want to share a plain text password and

1:42:17.199,1:42:21.280
then finally here is the name and the

1:42:19.360,1:42:24.080
full name and the image

1:42:21.280,1:42:25.360
everything is here the user has been

1:42:24.080,1:42:28.560
created

1:42:25.360,1:42:30.639
which means that our sign up works now

1:42:28.560,1:42:33.040
let's try to log out and let's try to

1:42:30.639,1:42:35.760
see if the sign in works

1:42:33.040,1:42:37.440
but you might have a question how do we

1:42:35.760,1:42:40.000
actually log out

1:42:37.440,1:42:42.560
well we have a button here but right now

1:42:40.000,1:42:45.040
it's not doing anything so let's make it

1:42:42.560,1:42:47.840
do something to do that i'm first going

1:42:45.040,1:42:49.280
to close all the files and collapse the

1:42:47.840,1:42:50.800
files and folders

1:42:49.280,1:42:51.760
go to client

1:42:50.800,1:42:54.239
source

1:42:51.760,1:42:56.560
components and then that's going to be

1:42:54.239,1:42:58.800
channel list container

1:42:56.560,1:43:01.600
more specifically we should be looking

1:42:58.800,1:43:05.119
at the sidebar so i'm going to go to the

1:43:01.600,1:43:07.920
top and there is our logout button

1:43:05.119,1:43:09.440
what we have to do is just below create

1:43:07.920,1:43:12.800
a new function

1:43:09.440,1:43:13.920
const logout is equal to an arrow

1:43:12.800,1:43:16.239
function

1:43:13.920,1:43:19.119
and basically we want to clear the

1:43:16.239,1:43:20.080
cookies and also we want to reload the

1:43:19.119,1:43:22.719
window

1:43:20.080,1:43:25.280
so how do we clear the cookies well

1:43:22.719,1:43:27.679
let's go to the app.jsx

1:43:25.280,1:43:29.840
i'm again going to copy all of these

1:43:27.679,1:43:31.360
including the auth token

1:43:29.840,1:43:34.719
i'll go back to the channel list

1:43:31.360,1:43:37.040
container and paste them all here

1:43:34.719,1:43:39.119
now we just have to do some formatting

1:43:37.040,1:43:42.239
remove these

1:43:39.119,1:43:45.280
previously object keys we just have the

1:43:42.239,1:43:48.719
cookies dot get but now we have to

1:43:45.280,1:43:51.119
switch all of these from cookies.get to

1:43:48.719,1:43:53.679
cookies.remove

1:43:51.119,1:43:55.280
these have to be semi-colons so let's do

1:43:53.679,1:43:57.679
it like this

1:43:55.280,1:44:00.320
and as you can see our cookies are not

1:43:57.679,1:44:04.960
defined so at the top let's just say

1:44:00.320,1:44:06.800
const cookies is equal to new cookies

1:44:04.960,1:44:09.199
now below

1:44:06.800,1:44:12.880
we are removing all the cookies and

1:44:09.199,1:44:16.480
finally we have to call the window

1:44:12.880,1:44:18.320
location dot reload to reload the page

1:44:16.480,1:44:19.520
to get us back to the authentication

1:44:18.320,1:44:20.480
page

1:44:19.520,1:44:23.040
finally

1:44:20.480,1:44:25.199
this logout is not being used right now

1:44:23.040,1:44:26.639
so let's pass it as a prop to our

1:44:25.199,1:44:29.520
sidebar

1:44:26.639,1:44:31.520
and now on sidebar let's retrieve it

1:44:29.520,1:44:34.320
from props right here

1:44:31.520,1:44:36.880
and let's actually use it once somebody

1:44:34.320,1:44:40.000
clicks on this button so i'm going to

1:44:36.880,1:44:42.639
give this div an on click listener and

1:44:40.000,1:44:44.719
simply call the logout function once

1:44:42.639,1:44:46.800
somebody clicks on it

1:44:44.719,1:44:48.400
before actually testing it out i've

1:44:46.800,1:44:51.760
actually made a typo

1:44:48.400,1:44:53.920
this here is remove and not removes

1:44:51.760,1:44:56.639
now if we save it let's finally check it

1:44:53.920,1:44:58.960
out we are back on our medical pager and

1:44:56.639,1:45:01.679
let's click the log out button

1:44:58.960,1:45:03.679
there we go we were logged out and we're

1:45:01.679,1:45:06.159
back on the sign up screen

1:45:03.679,1:45:09.040
let's go to the sign in and let's try to

1:45:06.159,1:45:10.400
sign in as dr smith

1:45:09.040,1:45:14.239
one more time

1:45:10.400,1:45:15.040
and the sign in worked perfectly we are

1:45:14.239,1:45:17.440
in

1:45:15.040,1:45:19.440
great notice how we no longer have the

1:45:17.440,1:45:21.280
error here it's just you have no

1:45:19.440,1:45:23.920
channels because that's it we don't

1:45:21.280,1:45:27.119
really have them so now let's create the

1:45:23.920,1:45:29.199
rest of the screen the entire right part

1:45:27.119,1:45:31.280
which is the channel container where the

1:45:29.199,1:45:33.760
messages are going to be the input for

1:45:31.280,1:45:35.840
sending messages gifs and everything

1:45:33.760,1:45:37.280
else let's start with the channel

1:45:35.840,1:45:39.679
container

1:45:37.280,1:45:41.760
if you remember correctly inside of the

1:45:39.679,1:45:44.080
app.jsx we have the channel list

1:45:41.760,1:45:46.400
container and finally the channel

1:45:44.080,1:45:48.080
container now is the time that we start

1:45:46.400,1:45:50.480
working on that second piece of the

1:45:48.080,1:45:52.639
puzzle so let's go inside of the channel

1:45:50.480,1:45:55.520
container and let's start implementing

1:45:52.639,1:45:57.840
the logic and the jsx

1:45:55.520,1:46:00.000
first of all we're going to import a few

1:45:57.840,1:46:01.760
things from stream

1:46:00.000,1:46:02.880
these things are going to be

1:46:01.760,1:46:06.880
channel

1:46:02.880,1:46:12.000
and also use chat context and this is

1:46:06.880,1:46:14.480
coming from stream dash chat dash react

1:46:12.000,1:46:16.800
great these are all the external imports

1:46:14.480,1:46:19.280
but we're also going to have quite a few

1:46:16.800,1:46:21.119
internal imports meaning components that

1:46:19.280,1:46:23.840
we are yet to create

1:46:21.119,1:46:26.960
these components are channel

1:46:23.840,1:46:29.600
inner also create

1:46:26.960,1:46:32.480
channel we're gonna have the edit

1:46:29.600,1:46:33.679
channel and finally the theme

1:46:32.480,1:46:35.679
message

1:46:33.679,1:46:38.320
these things are coming from

1:46:35.679,1:46:39.600
dot slash again that's our components

1:46:38.320,1:46:41.760
folder

1:46:39.600,1:46:43.600
so let's quickly create the layout for

1:46:41.760,1:46:46.400
these four components

1:46:43.600,1:46:48.480
first starting with the channel inner

1:46:46.400,1:46:51.360
i'm going to create a new component

1:46:48.480,1:46:54.960
channel inner dot jsx

1:46:51.360,1:46:56.960
again inside of there let's run rafce

1:46:54.960,1:46:59.040
and i'm simply going to put channel

1:46:56.960,1:47:01.280
inner inside of it

1:46:59.040,1:47:03.840
then moving on to the second thing which

1:47:01.280,1:47:07.440
is the create channel component that's

1:47:03.840,1:47:10.000
going to be create channel dot jsx

1:47:07.440,1:47:12.239
again i'm going to copy what we had in

1:47:10.000,1:47:16.480
the channel inner

1:47:12.239,1:47:17.760
and simply change the naming to create

1:47:16.480,1:47:19.679
channel

1:47:17.760,1:47:22.719
moving on to the third thing which is

1:47:19.679,1:47:26.639
the edit channel thing so right there

1:47:22.719,1:47:28.639
new file edit channel dot jsx

1:47:26.639,1:47:31.440
again i'm going to copy what we had in

1:47:28.639,1:47:33.840
the create and paste it here

1:47:31.440,1:47:35.199
rename this to edit

1:47:33.840,1:47:37.920
channel

1:47:35.199,1:47:40.080
and then going back one more time for

1:47:37.920,1:47:42.840
our team message i'm going to create a

1:47:40.080,1:47:44.480
new file called team

1:47:42.840,1:47:47.520
message.jsx

1:47:44.480,1:47:50.639
and final time i'm going to copy it

1:47:47.520,1:47:52.000
go to the message and rename everything

1:47:50.639,1:47:53.520
to team

1:47:52.000,1:47:55.679
message

1:47:53.520,1:47:56.880
and don't forget we have to go to the

1:47:55.679,1:48:00.480
index

1:47:56.880,1:48:02.960
duplicate this four times and finally we

1:48:00.480,1:48:05.920
have to add imports for all of these

1:48:02.960,1:48:07.040
components so these components are going

1:48:05.920,1:48:09.199
to be

1:48:07.040,1:48:10.239
the ones we just created so that's going

1:48:09.199,1:48:14.000
to be

1:48:10.239,1:48:16.480
channel inner right here

1:48:14.000,1:48:18.639
create channel as well

1:48:16.480,1:48:21.440
finally edit channel

1:48:18.639,1:48:23.600
and the theme message

1:48:21.440,1:48:25.520
with that we've created all of the

1:48:23.600,1:48:27.440
imports and i think that's going to be

1:48:25.520,1:48:29.440
it for the components we might have just

1:48:27.440,1:48:30.480
one or two more but we are basically

1:48:29.440,1:48:32.400
done

1:48:30.480,1:48:34.639
so let's see how we can use those

1:48:32.400,1:48:36.159
components to create a layout in our

1:48:34.639,1:48:37.760
channel container

1:48:36.159,1:48:40.320
first things first we need to get the

1:48:37.760,1:48:41.920
information about a specific channel we

1:48:40.320,1:48:44.719
can say const

1:48:41.920,1:48:47.600
that's going to be channel is equal to

1:48:44.719,1:48:49.119
use chat context that's going to give us

1:48:47.600,1:48:51.040
the information about the current

1:48:49.119,1:48:53.440
specific channel

1:48:51.040,1:48:55.600
then we need to know are we currently

1:48:53.440,1:48:58.400
creating that channel then we have to

1:48:55.600,1:49:00.960
show a specific message or a dashboard

1:48:58.400,1:49:04.800
for creating that channel so we have to

1:49:00.960,1:49:07.280
have a variable called is creating

1:49:04.800,1:49:10.400
and if we are creating we want to return

1:49:07.280,1:49:13.360
a specific jsx block then we're also

1:49:10.400,1:49:16.080
going to have one more state which is is

1:49:13.360,1:49:18.080
editing so i'm going to copy this paste

1:49:16.080,1:49:19.119
it here and say is

1:49:18.080,1:49:21.119
editing

1:49:19.119,1:49:23.360
these are some states that we always

1:49:21.119,1:49:25.040
need to be aware of we have to know this

1:49:23.360,1:49:27.599
information inside of the channel

1:49:25.040,1:49:30.080
container but we also have to know it

1:49:27.599,1:49:32.400
inside of the channel list container for

1:49:30.080,1:49:35.440
that reason we're going to declare these

1:49:32.400,1:49:38.239
state fields right inside of our app and

1:49:35.440,1:49:41.360
that will be the next step so right here

1:49:38.239,1:49:42.560
let's create a state field called const

1:49:41.360,1:49:44.000
create

1:49:42.560,1:49:46.239
type

1:49:44.000,1:49:47.440
set create

1:49:46.239,1:49:50.560
type

1:49:47.440,1:49:52.400
and that's going to be equal to

1:49:50.560,1:49:54.239
use state

1:49:52.400,1:49:55.199
and we're going to leave it as an empty

1:49:54.239,1:49:57.360
string

1:49:55.199,1:49:59.599
we also have to import use state at the

1:49:57.360,1:49:59.599
top

1:50:02.159,1:50:06.000
okay and i'm going to duplicate this two

1:50:04.639,1:50:09.040
more times

1:50:06.000,1:50:11.199
the second thing is is creating so is

1:50:09.040,1:50:15.360
the user currently creating a new chat

1:50:11.199,1:50:17.520
room and also set is creating

1:50:15.360,1:50:19.040
and at the start it's going to be set to

1:50:17.520,1:50:22.480
false

1:50:19.040,1:50:24.480
then finally we have is editing

1:50:22.480,1:50:25.520
and that's going to be set

1:50:24.480,1:50:28.960
is

1:50:25.520,1:50:30.880
editing also set to false

1:50:28.960,1:50:33.840
now that we have these variables we can

1:50:30.880,1:50:36.800
pass them as props to our components so

1:50:33.840,1:50:39.360
we can say is creating is equal to is

1:50:36.800,1:50:42.080
creating and then set is creating is

1:50:39.360,1:50:45.119
equal to set is creating we also want to

1:50:42.080,1:50:49.360
pass set is editing is equal to set is

1:50:45.119,1:50:51.520
editing and finally is editing itself is

1:50:49.360,1:50:53.360
equal to is editing

1:50:51.520,1:50:56.000
you might already notice that this is

1:50:53.360,1:50:58.400
not the best way to pass props a better

1:50:56.000,1:51:01.520
approach in this case would be to use

1:50:58.400,1:51:04.320
the context api but for now let's keep

1:51:01.520,1:51:06.719
it like this i'm going to copy this and

1:51:04.320,1:51:08.719
paste it right here so that we are also

1:51:06.719,1:51:10.000
passing the props to our channel

1:51:08.719,1:51:12.080
container

1:51:10.000,1:51:16.080
our channel container is also going to

1:51:12.080,1:51:18.320
need the create type is equal to create

1:51:16.080,1:51:18.320
type

1:51:18.560,1:51:24.880
and i've just noticed we won't need this

1:51:21.040,1:51:26.000
is editing rather we will need set

1:51:24.880,1:51:28.320
create

1:51:26.000,1:51:28.320
type

1:51:28.560,1:51:30.800
is equal to

1:51:29.920,1:51:32.080
set

1:51:30.800,1:51:34.800
create

1:51:32.080,1:51:36.800
type like this and i just noticed i have

1:51:34.800,1:51:39.360
a typo right here

1:51:36.800,1:51:42.080
okay now we're good now we're accepting

1:51:39.360,1:51:44.080
all of these props we can even copy them

1:51:42.080,1:51:47.199
and we're accepting them inside of the

1:51:44.080,1:51:48.960
channel container so we can go back and

1:51:47.199,1:51:51.840
now right here

1:51:48.960,1:51:53.760
in the props we can destructure them all

1:51:51.840,1:51:55.440
right here

1:51:53.760,1:51:58.239
of course we have to separate them by

1:51:55.440,1:52:00.320
commas so let me add some commas here

1:51:58.239,1:52:04.560
and again i'm going to use some keyboard

1:52:00.320,1:52:07.520
magic to simply put them all in one row

1:52:04.560,1:52:09.840
there we go so now we simply accepted

1:52:07.520,1:52:12.080
all of the props we're passing right

1:52:09.840,1:52:14.400
inside of the channel container and now

1:52:12.080,1:52:17.119
based on these variables we can show is

1:52:14.400,1:52:19.280
creating window is editing window or the

1:52:17.119,1:52:22.080
channel container itself

1:52:19.280,1:52:24.560
first let's start with is creating

1:52:22.080,1:52:26.320
if the user is creating a new channel we

1:52:24.560,1:52:29.440
can create a div

1:52:26.320,1:52:32.000
that div is going to have a class name

1:52:29.440,1:52:34.080
which is going to be equal to channel

1:52:32.000,1:52:37.199
underscore underscore container

1:52:34.080,1:52:39.599
and then inside of there we can simply

1:52:37.199,1:52:42.320
render the create

1:52:39.599,1:52:45.360
channel component it is going to be a

1:52:42.320,1:52:46.239
self-closing tag and we can pass two

1:52:45.360,1:52:50.320
things

1:52:46.239,1:52:53.440
the create type is equal to create type

1:52:50.320,1:52:56.080
and we can also pass set is creating

1:52:53.440,1:52:57.760
which is going to be equal to set is

1:52:56.080,1:52:59.920
creating

1:52:57.760,1:53:01.440
now for the editing i'm simply going to

1:52:59.920,1:53:03.760
copy this div

1:53:01.440,1:53:06.000
and it's going to remain the same this

1:53:03.760,1:53:08.000
is going to be channel container but

1:53:06.000,1:53:09.520
instead of create channel we're going to

1:53:08.000,1:53:12.159
have edit

1:53:09.520,1:53:14.080
channel and instead of the create type

1:53:12.159,1:53:16.080
which we don't need we're gonna be

1:53:14.080,1:53:16.960
passing set

1:53:16.080,1:53:18.480
is

1:53:16.960,1:53:21.679
editing

1:53:18.480,1:53:24.239
great so that's it right now we have no

1:53:21.679,1:53:26.639
way of seeing these components because

1:53:24.239,1:53:29.520
we don't have buttons to initiate the

1:53:26.639,1:53:31.360
creation process or the editing process

1:53:29.520,1:53:33.840
so let's keep it going with all the

1:53:31.360,1:53:36.880
possible states we have just one more

1:53:33.840,1:53:39.119
state and that is going to be const

1:53:36.880,1:53:41.679
empty state that happens when we just

1:53:39.119,1:53:44.880
create a chat and we have no messages

1:53:41.679,1:53:47.280
yet so we want to display something

1:53:44.880,1:53:49.679
it's going to be an instant return

1:53:47.280,1:53:52.960
we are going to return a div

1:53:49.679,1:53:54.560
with a class name equal to

1:53:52.960,1:53:56.880
channel

1:53:54.560,1:53:58.080
dash empty underscore underscore

1:53:56.880,1:54:00.000
container

1:53:58.080,1:54:02.719
now inside of that div we're going to

1:54:00.000,1:54:06.159
have two paragraphs first one is going

1:54:02.719,1:54:09.440
to have a class name equal to channel

1:54:06.159,1:54:11.760
dash empty underscore underscore first

1:54:09.440,1:54:14.080
and in there we can say

1:54:11.760,1:54:16.880
this is the beginning

1:54:14.080,1:54:19.440
of your chat history

1:54:16.880,1:54:22.320
and then i'm going to copy that the

1:54:19.440,1:54:23.360
second one is going to be channel empty

1:54:22.320,1:54:26.000
second

1:54:23.360,1:54:29.119
and there we can say something like

1:54:26.000,1:54:31.280
send messages

1:54:29.119,1:54:32.960
attachments

1:54:31.280,1:54:34.400
links

1:54:32.960,1:54:36.320
emojis

1:54:34.400,1:54:39.280
and more

1:54:36.320,1:54:41.040
so this is our empty state and finally

1:54:39.280,1:54:42.000
let's declare the channel container

1:54:41.040,1:54:44.639
itself

1:54:42.000,1:54:47.360
the div is going to have the class name

1:54:44.639,1:54:49.360
equal to channel container

1:54:47.360,1:54:51.599
and there we're going to render the

1:54:49.360,1:54:54.159
channel component

1:54:51.599,1:54:56.159
channel is not a self-closing tag we

1:54:54.159,1:54:58.560
have something inside of there and that

1:54:56.159,1:55:00.480
something is channel

1:54:58.560,1:55:02.320
inner so this is the inner part of the

1:55:00.480,1:55:04.480
chat application

1:55:02.320,1:55:06.560
we have to pass a few props to our

1:55:04.480,1:55:09.280
channel so let's expand it

1:55:06.560,1:55:10.320
the first prop is going to be empty

1:55:09.280,1:55:11.520
state

1:55:10.320,1:55:13.599
indicator

1:55:11.520,1:55:16.080
that empty state indicator is going to

1:55:13.599,1:55:18.239
be equal to empty state

1:55:16.080,1:55:19.920
and then we can define how our message

1:55:18.239,1:55:22.239
is going to look like so we can say

1:55:19.920,1:55:24.000
message is equal to

1:55:22.239,1:55:25.199
and that's going to be a callback

1:55:24.000,1:55:27.119
function

1:55:25.199,1:55:28.880
where we get message

1:55:27.119,1:55:31.280
props

1:55:28.880,1:55:33.119
and we also get the index make sure to

1:55:31.280,1:55:35.679
spell this correctly

1:55:33.119,1:55:37.520
and what do we return we return our

1:55:35.679,1:55:38.560
special team

1:55:37.520,1:55:41.679
message

1:55:38.560,1:55:44.000
that's going to have a key equal to i

1:55:41.679,1:55:46.719
and we're also going to spread the props

1:55:44.000,1:55:47.679
right inside of it so dot dot message

1:55:46.719,1:55:50.000
props

1:55:47.679,1:55:52.719
finally we just have to pass one last

1:55:50.000,1:55:54.400
prop to our channel inner which is set

1:55:52.719,1:55:57.920
is editing

1:55:54.400,1:56:00.400
is equal to set is editing

1:55:57.920,1:56:02.800
so just before we go to the browser to

1:56:00.400,1:56:06.800
check it out we are going to add one

1:56:02.800,1:56:09.440
more thing inside of our app.jsx

1:56:06.800,1:56:12.800
if you scroll to the top just next to

1:56:09.440,1:56:16.239
our app.css we are going to add one more

1:56:12.800,1:56:19.119
import line more specifically import

1:56:16.239,1:56:21.520
stream dash chat react and then we're

1:56:19.119,1:56:23.199
going to take their index css for

1:56:21.520,1:56:25.440
pre-built components

1:56:23.199,1:56:28.639
this is going to help us to more quickly

1:56:25.440,1:56:30.639
get a better looking chat application

1:56:28.639,1:56:32.719
now that we're done with that let's go

1:56:30.639,1:56:34.480
into our channel inner

1:56:32.719,1:56:36.560
the channel inner is just a bit

1:56:34.480,1:56:39.119
different from all the other components

1:56:36.560,1:56:41.119
it has a lot of business logic and a lot

1:56:39.119,1:56:43.199
of if statements just to check if

1:56:41.119,1:56:46.719
something that we pass to the input is

1:56:43.199,1:56:48.560
an attachment or a gif or a text

1:56:46.719,1:56:50.400
for that reason i don't want you to

1:56:48.560,1:56:52.880
spend a lot of time on doing something

1:56:50.400,1:56:55.199
that's not really educational and we're

1:56:52.880,1:56:57.679
simply going to copy and paste it so

1:56:55.199,1:56:59.599
attach below you'll find the entire code

1:56:57.679,1:57:02.000
for the channel inner

1:56:59.599,1:57:04.880
as you can see right there it mostly has

1:57:02.000,1:57:06.719
some overrides setting up the states

1:57:04.880,1:57:09.520
using things from the channel action

1:57:06.719,1:57:12.320
context and then mainly using a lot of

1:57:09.520,1:57:14.239
different stream chat components

1:57:12.320,1:57:16.159
let's see the jsx part

1:57:14.239,1:57:18.560
and this is about it

1:57:16.159,1:57:21.360
we are setting up the window the team

1:57:18.560,1:57:23.760
channel header message list message

1:57:21.360,1:57:25.679
input and the threads

1:57:23.760,1:57:27.040
these components are not the components

1:57:25.679,1:57:29.360
that we create

1:57:27.040,1:57:32.400
they are here for us right out of the

1:57:29.360,1:57:34.719
box when using stream chat

1:57:32.400,1:57:36.400
so let's save it and let's take a look

1:57:34.719,1:57:38.719
in the browser

1:57:36.400,1:57:40.960
there's currently nothing here but if we

1:57:38.719,1:57:42.000
go to stream chat explorer which is

1:57:40.960,1:57:43.840
right here

1:57:42.000,1:57:45.440
and then under users

1:57:43.840,1:57:47.119
find your new user

1:57:45.440,1:57:49.040
copy the id

1:57:47.119,1:57:51.679
let's go under channels

1:57:49.040,1:57:54.480
create a new channel and let's call it

1:57:51.679,1:57:57.760
something like cardiology to keep it

1:57:54.480,1:58:00.639
medical themed that's going to be a team

1:57:57.760,1:58:03.280
channel type and let's click create

1:58:00.639,1:58:06.159
once it's created let's go to members

1:58:03.280,1:58:07.520
add new channel member and paste that id

1:58:06.159,1:58:10.159
you copied

1:58:07.520,1:58:11.360
let's click add and go back to medical

1:58:10.159,1:58:13.599
pager

1:58:11.360,1:58:15.920
if you reload the page you should be

1:58:13.599,1:58:19.040
able to see that now we have the right

1:58:15.920,1:58:21.599
portion of our screen cardiology

1:58:19.040,1:58:23.840
three users online this is the beginning

1:58:21.599,1:58:26.560
of your chat history send messages

1:58:23.840,1:58:29.199
attachments links and more

1:58:26.560,1:58:33.360
great so let's try sending our first

1:58:29.199,1:58:36.400
message let's say hello world

1:58:33.360,1:58:39.199
and there we go we can only see team

1:58:36.400,1:58:41.119
message and for every message that's the

1:58:39.199,1:58:42.880
only thing we'll be able to see because

1:58:41.119,1:58:44.960
we haven't yet coded out the most

1:58:42.880,1:58:46.960
important part and that is the actual

1:58:44.960,1:58:49.280
message if you click right there and

1:58:46.960,1:58:51.440
more info you'll notice that we also

1:58:49.280,1:58:52.880
don't have the edit channel component so

1:58:51.440,1:58:54.480
that's something we'll have to code that

1:58:52.880,1:58:56.320
together as well

1:58:54.480,1:58:57.760
now let's start with coding out the

1:58:56.320,1:59:00.239
theme message

1:58:57.760,1:59:02.800
now let's remember where our theme

1:59:00.239,1:59:05.840
message is it's going to be in the

1:59:02.800,1:59:08.159
channel container if we scroll down

1:59:05.840,1:59:10.080
you'll notice that we have our custom

1:59:08.159,1:59:13.040
team message here

1:59:10.080,1:59:15.920
but i've just noticed that stream chat

1:59:13.040,1:59:18.239
react already has a good looking team

1:59:15.920,1:59:19.520
message and we can get to it by

1:59:18.239,1:59:22.239
specifying

1:59:19.520,1:59:24.880
message team that component is

1:59:22.239,1:59:27.679
deprecated feel free to find any other

1:59:24.880,1:59:30.000
newer or rename component i really like

1:59:27.679,1:59:32.960
the look of this one so we'll keep using

1:59:30.000,1:59:35.280
it for this video we no longer need this

1:59:32.960,1:59:37.840
theme message right here so feel free to

1:59:35.280,1:59:40.000
delete it from the components folder

1:59:37.840,1:59:43.040
now we can use this message theme if you

1:59:40.000,1:59:44.719
scroll down and simply paste it right

1:59:43.040,1:59:46.880
inside of here

1:59:44.719,1:59:49.199
that's going to display all the messages

1:59:46.880,1:59:52.320
that our users have sent

1:59:49.199,1:59:55.040
and there we go take a look at that dr

1:59:52.320,1:59:58.480
smith here is the image here is even the

1:59:55.040,2:00:01.119
timestamp and here's a hello and a hello

1:59:58.480,2:00:04.400
world we can try testing some new things

2:00:01.119,2:00:06.159
like tests and then an emoji and that is

2:00:04.400,2:00:09.040
sent as well

2:00:06.159,2:00:11.920
our messages are being sent we have the

2:00:09.040,2:00:14.960
entire chat room here dr smith

2:00:11.920,2:00:17.599
timestamps we can even add emotes to

2:00:14.960,2:00:20.320
those messages as you can see right now

2:00:17.599,2:00:22.480
we can even open the thread and start

2:00:20.320,2:00:23.840
typing something right there in the

2:00:22.480,2:00:26.480
thread as well

2:00:23.840,2:00:28.320
and finally you can also delete so i

2:00:26.480,2:00:31.679
deleted a test message

2:00:28.320,2:00:33.520
and let's also edit hello world let's

2:00:31.679,2:00:34.880
change that to hello

2:00:33.520,2:00:38.080
doctor

2:00:34.880,2:00:41.280
there we go so our chat just got so much

2:00:38.080,2:00:42.400
better by using built-in stream chat

2:00:41.280,2:00:44.560
components

2:00:42.400,2:00:46.320
of course i've shown you that you can do

2:00:44.560,2:00:49.440
everything yourself you can build the

2:00:46.320,2:00:51.520
css the jsx everything there is

2:00:49.440,2:00:54.320
but you can also pick and choose from

2:00:51.520,2:00:56.960
the wide variety of stream react

2:00:54.320,2:00:59.520
components let me show you what i mean

2:00:56.960,2:01:00.719
going to their website we can go to chat

2:00:59.520,2:01:02.239
messaging

2:01:00.719,2:01:04.480
open up the docs

2:01:02.239,2:01:05.679
and then under react you'll see ui

2:01:04.480,2:01:07.440
components

2:01:05.679,2:01:08.560
here are some of the components we've

2:01:07.440,2:01:11.360
just used

2:01:08.560,2:01:13.599
there's the chat channel list channel

2:01:11.360,2:01:15.840
message list and everything you need to

2:01:13.599,2:01:18.639
know to build your own fully custom

2:01:15.840,2:01:21.440
thing if we scroll down below you'll see

2:01:18.639,2:01:24.000
here the custom code examples emoji

2:01:21.440,2:01:25.840
picker channel a lot of different things

2:01:24.000,2:01:27.679
that you can pick and choose from so

2:01:25.840,2:01:30.880
what i really liked about stream is that

2:01:27.679,2:01:32.639
they offer you the api just raw data you

2:01:30.880,2:01:34.480
can build everything with it but they

2:01:32.639,2:01:36.639
also allow you to pick and choose from

2:01:34.480,2:01:38.800
pre-built good-looking components as

2:01:36.639,2:01:41.840
we've done it right now

2:01:38.800,2:01:43.920
great our chat just got so much better

2:01:41.840,2:01:45.920
now if we click right there

2:01:43.920,2:01:47.760
you can see that the edit channel and

2:01:45.920,2:01:51.280
the add channel buttons have not been

2:01:47.760,2:01:53.760
yet created so let's first add a button

2:01:51.280,2:01:56.719
to create a channel and then the entire

2:01:53.760,2:01:59.040
dashboard view to create name channels

2:01:56.719,2:02:00.960
invite different people into it and then

2:01:59.040,2:02:02.800
we'll be able to browse through a lot of

2:02:00.960,2:02:05.199
different channels that our users will

2:02:02.800,2:02:08.159
be able to create let's do that right

2:02:05.199,2:02:10.320
away we can add the button to add a new

2:02:08.159,2:02:11.280
channel by going to client

2:02:10.320,2:02:13.760
source

2:02:11.280,2:02:16.800
components and then that's going to be

2:02:13.760,2:02:19.440
channel list or team channel list

2:02:16.800,2:02:21.520
if we scroll down you'll see that we're

2:02:19.440,2:02:24.480
currently displaying the text of

2:02:21.520,2:02:27.199
channels if the type is steam or direct

2:02:24.480,2:02:29.199
messages if the type is not team we can

2:02:27.199,2:02:31.280
even see that in the code right now we

2:02:29.199,2:02:32.480
have a channels header and a direct

2:02:31.280,2:02:35.119
messages header

2:02:32.480,2:02:37.440
but now we have to add a plus icon right

2:02:35.119,2:02:40.159
here if we want to create a new channel

2:02:37.440,2:02:43.599
or a new direct message we even left it

2:02:40.159,2:02:46.000
to do right here button add channel

2:02:43.599,2:02:48.800
so as you can see at the top we are

2:02:46.000,2:02:52.000
already importing an icon from assets

2:02:48.800,2:02:55.599
called add channel and that is a simple

2:02:52.000,2:02:58.239
svg but on that svg i've already added

2:02:55.599,2:03:00.400
the onclick property and that's simply

2:02:58.239,2:03:02.960
going to set the state of create type to

2:03:00.400,2:03:05.440
type meaning either a direct message or

2:03:02.960,2:03:08.560
a team chat and it's going to trigger

2:03:05.440,2:03:11.280
the set is creating to be true that way

2:03:08.560,2:03:12.960
our new window for the channel creation

2:03:11.280,2:03:17.360
is going to open

2:03:12.960,2:03:19.280
so what we can do is simply call the add

2:03:17.360,2:03:21.599
channel component

2:03:19.280,2:03:23.520
currently we don't have access to the

2:03:21.599,2:03:24.480
props that we have to pass to the add

2:03:23.520,2:03:26.320
channel

2:03:24.480,2:03:29.119
even the team channel list doesn't have

2:03:26.320,2:03:30.880
them so let's see where the team channel

2:03:29.119,2:03:33.360
list is getting called

2:03:30.880,2:03:36.000
we can just search it like this team

2:03:33.360,2:03:37.599
channel list and we can see that it's

2:03:36.000,2:03:38.800
getting called into the channel list

2:03:37.599,2:03:41.119
container

2:03:38.800,2:03:42.400
if you remember correctly if we go back

2:03:41.119,2:03:44.560
to the app

2:03:42.400,2:03:47.040
we sent some props to the channel list

2:03:44.560,2:03:49.920
container but we haven't yet used them

2:03:47.040,2:03:53.119
so let's copy these variables

2:03:49.920,2:03:55.679
go into the channel list container

2:03:53.119,2:03:56.960
and now you can simply put curly braces

2:03:55.679,2:03:59.199
right there

2:03:56.960,2:04:01.119
to destructure the props and then paste

2:03:59.199,2:04:02.320
all of the variables we're passing from

2:04:01.119,2:04:04.800
app

2:04:02.320,2:04:06.960
so let's take all of these variables and

2:04:04.800,2:04:09.920
let's paste them right inside of our

2:04:06.960,2:04:12.719
team channel list right here and under

2:04:09.920,2:04:16.079
messaging as well so i'm going to paste

2:04:12.719,2:04:18.800
them and now we have to say is creating

2:04:16.079,2:04:22.400
if we copy it and is equal to is

2:04:18.800,2:04:24.719
creating then set is creating also is

2:04:22.400,2:04:28.079
equal to set is creating

2:04:24.719,2:04:31.199
one more set create type is equal to set

2:04:28.079,2:04:33.920
create type and finally set is editing

2:04:31.199,2:04:34.800
is equal to set is editing

2:04:33.920,2:04:36.719
great

2:04:34.800,2:04:39.440
now we're passing all of the necessary

2:04:36.719,2:04:42.000
props to our team channel list both for

2:04:39.440,2:04:44.159
messaging which is a chat for two people

2:04:42.000,2:04:46.480
and then also in the team chat which is

2:04:44.159,2:04:49.119
for chat of three or more people

2:04:46.480,2:04:51.599
great let's save it and now we can have

2:04:49.119,2:04:53.760
access to these same props right inside

2:04:51.599,2:04:56.079
of the team channel list so one more

2:04:53.760,2:04:58.560
time i'm going to copy these

2:04:56.079,2:05:01.760
go into the team channel list and now we

2:04:58.560,2:05:03.840
have access to them right inside of here

2:05:01.760,2:05:06.239
the way we're doing it right now is not

2:05:03.840,2:05:08.239
ideal we had to pass these props from

2:05:06.239,2:05:10.000
app to the channel list container and

2:05:08.239,2:05:12.880
then one more time to the team channel

2:05:10.000,2:05:14.800
list a preferred way would be to switch

2:05:12.880,2:05:16.880
it to a context api

2:05:14.800,2:05:18.719
and if this video doesn't end up lasting

2:05:16.880,2:05:21.440
too long we're going to make that switch

2:05:18.719,2:05:23.119
at the end if not please let me know in

2:05:21.440,2:05:26.159
the comments if you'd like a special

2:05:23.119,2:05:28.239
video or a project only focusing on the

2:05:26.159,2:05:30.800
context api

2:05:28.239,2:05:32.880
with that said let's go to our team

2:05:30.800,2:05:35.599
channel list and now we can make use of

2:05:32.880,2:05:38.800
these variables more specifically we can

2:05:35.599,2:05:40.560
simply pass them into the add channel

2:05:38.800,2:05:41.920
so i'm going to go back to the channel

2:05:40.560,2:05:43.679
list container

2:05:41.920,2:05:46.560
and right inside of here i'm going to

2:05:43.679,2:05:48.800
copy these four values

2:05:46.560,2:05:51.760
we can simply paste them right there

2:05:48.800,2:05:53.440
and indent this properly the last thing

2:05:51.760,2:05:55.679
that we have to pass is the type

2:05:53.440,2:05:58.719
variable we're going to make a check to

2:05:55.679,2:06:00.880
see if type is equal to team in that

2:05:58.719,2:06:03.520
case we're simply going to have a string

2:06:00.880,2:06:06.400
of team else we're going to have a

2:06:03.520,2:06:08.639
string of messaging

2:06:06.400,2:06:11.119
with this done our ad channel is

2:06:08.639,2:06:13.520
successfully going to trigger the set is

2:06:11.119,2:06:15.520
creating state now let's check it out

2:06:13.520,2:06:17.280
and see if we can actually see the add

2:06:15.520,2:06:19.280
channel button

2:06:17.280,2:06:22.159
back on the application you can see that

2:06:19.280,2:06:24.000
we have two clickable buttons let's try

2:06:22.159,2:06:26.079
to create a new channel

2:06:24.000,2:06:29.119
once i click here you can see that we

2:06:26.079,2:06:30.800
have a blank create channel component

2:06:29.119,2:06:32.800
this basically means that we've already

2:06:30.800,2:06:34.800
created the create channel component but

2:06:32.800,2:06:36.960
we haven't implemented the logic so

2:06:34.800,2:06:39.040
let's do that right now

2:06:36.960,2:06:41.920
let's move into the create channel

2:06:39.040,2:06:44.719
component right here and as you can see

2:06:41.920,2:06:47.679
right now we don't have anything so what

2:06:44.719,2:06:50.480
we can do is we can first import

2:06:47.679,2:06:51.760
use chat context which is going to be

2:06:50.480,2:06:52.880
coming from

2:06:51.760,2:06:55.119
stream

2:06:52.880,2:06:57.679
chat react

2:06:55.119,2:07:00.239
then we are also going to import a new

2:06:57.679,2:07:03.040
component called user

2:07:00.239,2:07:05.360
list that's going to be user list

2:07:03.040,2:07:08.320
and that will be coming from

2:07:05.360,2:07:10.719
that slash meaning that is a component

2:07:08.320,2:07:12.560
that we are yet to create

2:07:10.719,2:07:15.280
and we need one more thing from the

2:07:12.560,2:07:16.320
assets and that's going to be close

2:07:15.280,2:07:18.480
create

2:07:16.320,2:07:20.400
channel icon

2:07:18.480,2:07:22.800
and that's going to be coming from dot

2:07:20.400,2:07:25.760
dot slash assets

2:07:22.800,2:07:27.840
great now let's create the layout

2:07:25.760,2:07:30.239
first let's create the channel name

2:07:27.840,2:07:32.480
input that's going to be a component

2:07:30.239,2:07:33.599
above our current functional component

2:07:32.480,2:07:34.639
called

2:07:33.599,2:07:35.599
channel

2:07:34.639,2:07:37.280
name

2:07:35.599,2:07:39.280
input

2:07:37.280,2:07:43.119
and that component is going to accept a

2:07:39.280,2:07:44.400
few props it's going to accept a channel

2:07:43.119,2:07:45.840
name prop

2:07:44.400,2:07:48.480
which we're going to give the default

2:07:45.840,2:07:52.079
value to be equal to an empty string

2:07:48.480,2:07:53.840
and also set channel name

2:07:52.079,2:07:55.840
this is going to be a function so we can

2:07:53.840,2:07:58.079
have a return there

2:07:55.840,2:07:59.360
and inside of there we can return the

2:07:58.079,2:08:01.760
jsx

2:07:59.360,2:08:03.119
more specifically we are going to have

2:08:01.760,2:08:05.679
one div

2:08:03.119,2:08:10.480
that div is going to have a class name

2:08:05.679,2:08:12.800
equal to channel dash name dash input

2:08:10.480,2:08:14.960
underscore underscore wrapper

2:08:12.800,2:08:15.920
inside of there we're gonna have one b

2:08:14.960,2:08:18.960
tag

2:08:15.920,2:08:20.400
and that b tag is simply going to say

2:08:18.960,2:08:22.960
name

2:08:20.400,2:08:24.880
then we're going to have an input tag

2:08:22.960,2:08:26.560
and that input is of course going to

2:08:24.880,2:08:28.800
have a value

2:08:26.560,2:08:30.400
and it's also going to have the on

2:08:28.800,2:08:31.599
change property

2:08:30.400,2:08:34.000
right now we're going to leave them

2:08:31.599,2:08:36.000
blank and finally it's going to have a

2:08:34.000,2:08:37.679
placeholder which is going to be equal

2:08:36.000,2:08:40.719
to channel

2:08:37.679,2:08:42.560
name and i'm going to put no spaces here

2:08:40.719,2:08:45.280
because we have to create a channel name

2:08:42.560,2:08:47.199
with no spaces in between and we're also

2:08:45.280,2:08:50.639
going to have one more p tag which is

2:08:47.199,2:08:52.960
going to say add members let's quickly

2:08:50.639,2:08:56.719
create a value and an on change for this

2:08:52.960,2:09:00.400
and let's change the typo to on change

2:08:56.719,2:09:02.960
so what we can do is say const handle

2:09:00.400,2:09:05.679
change is going to be equal to

2:09:02.960,2:09:08.400
a function where we get the event

2:09:05.679,2:09:10.639
and then in there we can say event

2:09:08.400,2:09:12.719
dot prevent default

2:09:10.639,2:09:15.040
we discussed a few times what that does

2:09:12.719,2:09:17.119
that prevents the browser reload and

2:09:15.040,2:09:19.440
finally we're going to use the event

2:09:17.119,2:09:20.239
target value to populate the channel

2:09:19.440,2:09:22.719
name

2:09:20.239,2:09:25.920
so on change we can call the handle

2:09:22.719,2:09:27.599
change and the actual value is going to

2:09:25.920,2:09:29.679
be channel name

2:09:27.599,2:09:31.679
okay now let's use that inside of our

2:09:29.679,2:09:33.760
component just to see how it looks like

2:09:31.679,2:09:34.560
so it's going to be channel name like

2:09:33.760,2:09:36.639
this

2:09:34.560,2:09:39.199
i'm going to save it and if you click a

2:09:36.639,2:09:41.520
plus here you can see we have name and

2:09:39.199,2:09:43.840
then channel name looks like our no

2:09:41.520,2:09:46.159
spaces is not fitting here so i'm just

2:09:43.840,2:09:48.320
going to remove it from the placeholder

2:09:46.159,2:09:50.239
okay let's remove it from here

2:09:48.320,2:09:52.079
and for now we're going to comment out

2:09:50.239,2:09:53.920
this component or you know what let's

2:09:52.079,2:09:56.239
completely remove it because we have to

2:09:53.920,2:09:58.480
add some other layout details

2:09:56.239,2:10:00.639
first of all we're going to have a div

2:09:58.480,2:10:03.599
that's going to have a class name equal

2:10:00.639,2:10:05.440
to create dash channel underscore

2:10:03.599,2:10:07.280
underscore container

2:10:05.440,2:10:09.679
inside of that div we're going to have

2:10:07.280,2:10:11.760
one more div which is going to have a

2:10:09.679,2:10:14.560
class name

2:10:11.760,2:10:16.800
equal to create dash channel

2:10:14.560,2:10:18.880
underscore underscore header

2:10:16.800,2:10:21.040
and in there we can check if we're

2:10:18.880,2:10:23.840
currently on the team chat or messaging

2:10:21.040,2:10:26.000
chat so we can say if create type

2:10:23.840,2:10:28.079
is equal to team

2:10:26.000,2:10:30.079
in that case we can simply say something

2:10:28.079,2:10:31.199
like create a

2:10:30.079,2:10:32.400
new

2:10:31.199,2:10:35.280
channel

2:10:32.400,2:10:38.000
or otherwise we're going to simply say

2:10:35.280,2:10:39.119
send a direct

2:10:38.000,2:10:40.320
message

2:10:39.119,2:10:43.679
great

2:10:40.320,2:10:46.320
and this create type is coming as a prop

2:10:43.679,2:10:47.760
to our create channel component so let's

2:10:46.320,2:10:49.119
see if we're passing that value

2:10:47.760,2:10:50.880
correctly

2:10:49.119,2:10:53.040
one trick that you can do is go to

2:10:50.880,2:10:54.960
search and then open the opening

2:10:53.040,2:10:57.520
component bracket and then the name of

2:10:54.960,2:10:58.960
the component that way you'll be able to

2:10:57.520,2:11:01.199
see where you're calling the current

2:10:58.960,2:11:03.679
component you're working on if we go

2:11:01.199,2:11:05.440
there you can see that indeed we are

2:11:03.679,2:11:08.400
passing two different props that we can

2:11:05.440,2:11:11.840
use so we can go back and use these

2:11:08.400,2:11:14.560
props create type and set is creating

2:11:11.840,2:11:15.599
so right here destructure the props

2:11:14.560,2:11:16.480
create

2:11:15.599,2:11:19.920
type

2:11:16.480,2:11:21.199
and set is creating

2:11:19.920,2:11:23.840
great

2:11:21.199,2:11:27.679
now below that p tag we are also going

2:11:23.840,2:11:30.000
to have a close create channel icon and

2:11:27.679,2:11:32.480
we're simply going to pass set is

2:11:30.000,2:11:34.960
creating straight to it just so we can

2:11:32.480,2:11:37.679
reset it to not creating

2:11:34.960,2:11:40.239
below that div we're going to have one

2:11:37.679,2:11:41.840
more logical block and we can say if

2:11:40.239,2:11:43.920
create type

2:11:41.840,2:11:46.480
is equal to team

2:11:43.920,2:11:49.119
then and only then we can show the

2:11:46.480,2:11:51.520
channel name input

2:11:49.119,2:11:52.960
that is this component we just created

2:11:51.520,2:11:55.520
so we're going to call it as a

2:11:52.960,2:11:57.360
self-closing tag and remember we have to

2:11:55.520,2:12:00.320
pass two props to it which is the

2:11:57.360,2:12:02.239
channel name and set channel name

2:12:00.320,2:12:04.800
so right there i'm going to pass the

2:12:02.239,2:12:06.480
channel name and also the set channel

2:12:04.800,2:12:08.159
name to be equal to

2:12:06.480,2:12:10.320
set channel name

2:12:08.159,2:12:13.119
but as you can see right now we don't

2:12:10.320,2:12:15.119
have access to those values and usually

2:12:13.119,2:12:17.599
whenever you have a pair of something

2:12:15.119,2:12:20.560
and set something that's going to be a

2:12:17.599,2:12:23.679
state variable so just at the top of our

2:12:20.560,2:12:25.040
create channel we can create a new use

2:12:23.679,2:12:27.599
state

2:12:25.040,2:12:28.560
like this and it's going to be

2:12:27.599,2:12:29.520
channel

2:12:28.560,2:12:32.000
name

2:12:29.520,2:12:34.719
set channel name and at the start it's

2:12:32.000,2:12:37.840
going to be set to an empty string

2:12:34.719,2:12:40.560
we also need to import use state from

2:12:37.840,2:12:41.920
react at the top

2:12:40.560,2:12:42.880
just like this

2:12:41.920,2:12:44.880
great

2:12:42.880,2:12:45.920
now let's save it and see how it looks

2:12:44.880,2:12:48.400
like

2:12:45.920,2:12:50.719
now if we click channels add

2:12:48.400,2:12:53.280
we have create a new channel and then we

2:12:50.719,2:12:56.480
can enter the channel name and also add

2:12:53.280,2:12:58.880
members but if we go to direct messages

2:12:56.480,2:13:00.960
right here send a direct message we

2:12:58.880,2:13:02.719
don't have that naming of the channel

2:13:00.960,2:13:04.000
because it's just going to be a direct

2:13:02.719,2:13:06.320
message

2:13:04.000,2:13:08.800
as we discussed previously the user list

2:13:06.320,2:13:12.480
component doesn't exist yet if we go to

2:13:08.800,2:13:14.960
client source components there is not a

2:13:12.480,2:13:18.400
user list component so let's create it

2:13:14.960,2:13:22.239
right now components new file

2:13:18.400,2:13:24.400
user list dot jsx our user list is going

2:13:22.239,2:13:26.560
to be a longer component we're going to

2:13:24.400,2:13:28.960
have a few functional components inside

2:13:26.560,2:13:31.520
of here so let's start at the top

2:13:28.960,2:13:36.239
import react and we're also going to

2:13:31.520,2:13:39.360
need use effect and also use state hooks

2:13:36.239,2:13:41.199
and that is coming from react

2:13:39.360,2:13:42.880
then we're going to need the avatar

2:13:41.199,2:13:45.599
component

2:13:42.880,2:13:47.040
and also use chat

2:13:45.599,2:13:50.159
channel

2:13:47.040,2:13:51.440
and this is coming from stream chat

2:13:50.159,2:13:54.239
react

2:13:51.440,2:13:55.520
finally we're going to need import

2:13:54.239,2:13:59.360
invite

2:13:55.520,2:14:01.040
icon and that is coming from dot slash

2:13:59.360,2:14:02.960
assets

2:14:01.040,2:14:04.639
great so let's create our primary

2:14:02.960,2:14:06.800
functional component which is going to

2:14:04.639,2:14:08.000
be const user

2:14:06.800,2:14:10.880
list

2:14:08.000,2:14:13.199
and that's going to look like this we

2:14:10.880,2:14:15.440
are of course going to have a return

2:14:13.199,2:14:18.320
and there we can return a div that's

2:14:15.440,2:14:20.800
simply going to say user list

2:14:18.320,2:14:22.480
of course we have to switch this as well

2:14:20.800,2:14:24.560
and we're going to do

2:14:22.480,2:14:25.760
export default

2:14:24.560,2:14:26.880
user

2:14:25.760,2:14:29.199
list

2:14:26.880,2:14:32.320
great now we have everything ready we

2:14:29.199,2:14:34.400
have to go into our index.js and export

2:14:32.320,2:14:37.040
that component from there

2:14:34.400,2:14:40.079
and finally back in the create channel

2:14:37.040,2:14:42.320
we should be able to see our user list

2:14:40.079,2:14:45.679
there we go user list is showing up

2:14:42.320,2:14:48.079
right here both on channels and on the

2:14:45.679,2:14:49.760
direct messages as well

2:14:48.079,2:14:51.840
now considering that we'll be making a

2:14:49.760,2:14:53.760
lot of changes to our code for the user

2:14:51.840,2:14:55.920
list i'm going to pull my browser to the

2:14:53.760,2:14:58.320
right side and go to the left so you can

2:14:55.920,2:15:00.880
see in real time what's happening okay

2:14:58.320,2:15:02.159
let's go back to the user list and there

2:15:00.880,2:15:04.719
we are

2:15:02.159,2:15:06.880
so what we can first do is to create one

2:15:04.719,2:15:09.119
more helper functional component which

2:15:06.880,2:15:10.000
is going to be called const

2:15:09.119,2:15:11.520
list

2:15:10.000,2:15:13.599
container

2:15:11.520,2:15:15.760
and that's going to be a react

2:15:13.599,2:15:17.599
functional component

2:15:15.760,2:15:19.920
all react functional components have

2:15:17.599,2:15:20.880
access to a specific prop called

2:15:19.920,2:15:23.119
children

2:15:20.880,2:15:25.040
so whatever components you render inside

2:15:23.119,2:15:26.960
of this that's going to be populated

2:15:25.040,2:15:29.760
into the children prop

2:15:26.960,2:15:32.320
in this case we can say return

2:15:29.760,2:15:34.719
and we're going to have a div

2:15:32.320,2:15:37.840
that div is going to have a class name

2:15:34.719,2:15:40.320
equal to user dash list underscore

2:15:37.840,2:15:42.079
underscore container

2:15:40.320,2:15:43.440
and we're going to have one more div

2:15:42.079,2:15:46.079
inside of it

2:15:43.440,2:15:49.199
that div is going to have a class name

2:15:46.079,2:15:51.280
equal to user dash list

2:15:49.199,2:15:53.360
underscore underscore header

2:15:51.280,2:15:54.960
and inside of there we can simply have

2:15:53.360,2:15:57.599
two paragraphs

2:15:54.960,2:16:01.440
the first one is going to say user and

2:15:57.599,2:16:03.920
the second one is going to say invite

2:16:01.440,2:16:05.520
finally below that we want to render the

2:16:03.920,2:16:07.760
children

2:16:05.520,2:16:10.639
i'm going to save that and finally we

2:16:07.760,2:16:13.360
can now use that list container inside

2:16:10.639,2:16:15.599
of our user list so right here instead

2:16:13.360,2:16:17.280
of the div we're simply going to use the

2:16:15.599,2:16:19.440
list container

2:16:17.280,2:16:22.000
as you can see it added the headers for

2:16:19.440,2:16:24.079
the user and the invite but the user

2:16:22.000,2:16:26.800
list still remained there because we are

2:16:24.079,2:16:28.480
rendering it as children below the user

2:16:26.800,2:16:30.079
and the invite

2:16:28.480,2:16:31.920
now we can start creating the second

2:16:30.079,2:16:34.160
helper functional component which is

2:16:31.920,2:16:35.200
going to be called const

2:16:34.160,2:16:36.479
user

2:16:35.200,2:16:39.439
item

2:16:36.479,2:16:41.519
and that user item is again going to be

2:16:39.439,2:16:44.000
a functional component but it's going to

2:16:41.519,2:16:47.040
be a bit more complicated let's first

2:16:44.000,2:16:49.359
create the return jsx right here

2:16:47.040,2:16:52.080
so we want to have a div

2:16:49.359,2:16:55.840
and that div is going to have a class

2:16:52.080,2:16:57.920
name equal to user dash item underscore

2:16:55.840,2:17:00.000
underscore wrapper

2:16:57.920,2:17:02.559
inside of this div we want to create one

2:17:00.000,2:17:04.479
more div and this one is going to have a

2:17:02.559,2:17:07.359
class name equal to

2:17:04.479,2:17:09.679
user dash item underscore underscore

2:17:07.359,2:17:11.599
name dash wrapper

2:17:09.679,2:17:14.240
inside of there we can show the user's

2:17:11.599,2:17:16.800
avatar so we can say avatar that is

2:17:14.240,2:17:19.359
going to be a self-closing tag and we

2:17:16.800,2:17:21.120
want to get access to the current user

2:17:19.359,2:17:23.920
that we are mapping over

2:17:21.120,2:17:25.760
right now we don't have access to that

2:17:23.920,2:17:28.000
so let's see how we can get all of the

2:17:25.760,2:17:32.639
users into our list container and

2:17:28.000,2:17:34.800
therefore into the individual user items

2:17:32.639,2:17:36.639
to get the users we'll have to go inside

2:17:34.800,2:17:40.880
of the user list and we'll have to

2:17:36.639,2:17:43.679
create a new state const users and also

2:17:40.880,2:17:46.559
set users and the default value is going

2:17:43.679,2:17:50.080
to be equal to an empty array

2:17:46.559,2:17:51.679
then we have to create a use effect hook

2:17:50.080,2:17:52.880
which we're going to call when something

2:17:51.679,2:17:55.040
changes

2:17:52.880,2:17:56.960
more specifically we want to call it

2:17:55.040,2:17:59.040
once filters change

2:17:56.960,2:18:00.960
because sometimes we want the users for

2:17:59.040,2:18:04.559
direct messages and sometimes when

2:18:00.960,2:18:06.160
filters change we want users only for

2:18:04.559,2:18:08.240
channel messages

2:18:06.160,2:18:11.200
so instead of this use effect we can

2:18:08.240,2:18:12.800
create a new function const

2:18:11.200,2:18:14.559
get users

2:18:12.800,2:18:16.240
and that is going to be an async

2:18:14.559,2:18:18.319
function

2:18:16.240,2:18:20.479
and in there we're going to of course

2:18:18.319,2:18:22.240
get the users so first we're going to

2:18:20.479,2:18:24.319
check if we're currently loading

2:18:22.240,2:18:26.559
something and in that case we're going

2:18:24.319,2:18:28.319
to go outside of the function we don't

2:18:26.559,2:18:30.559
want to get users if we're loading

2:18:28.319,2:18:34.880
something and that loading is going to

2:18:30.559,2:18:37.519
be a state field so we can say use state

2:18:34.880,2:18:40.800
autofill it and then there we can say

2:18:37.519,2:18:43.040
loading and set loading at the start

2:18:40.800,2:18:45.439
that's going to be set to false

2:18:43.040,2:18:47.760
if we're not loading something we can

2:18:45.439,2:18:49.679
set that loading to be equal to true

2:18:47.760,2:18:52.479
because we're starting to get users we

2:18:49.679,2:18:55.040
want to enable our loading below that

2:18:52.479,2:18:56.000
i'm going to create a try and catch

2:18:55.040,2:18:58.880
block

2:18:56.000,2:19:01.439
in there we want to query the users

2:18:58.880,2:19:04.639
and we are going to query the users from

2:19:01.439,2:19:07.760
the use chat channel context

2:19:04.639,2:19:10.559
more specifically above our use states

2:19:07.760,2:19:12.639
we are going to get the client so const

2:19:10.559,2:19:15.200
in curly braces client

2:19:12.639,2:19:16.960
and that is going to be equal to use

2:19:15.200,2:19:18.639
chat channel

2:19:16.960,2:19:20.479
but i've just noticed that this is not

2:19:18.639,2:19:21.840
supposed to be channel it's supposed to

2:19:20.479,2:19:24.000
be context

2:19:21.840,2:19:26.639
whenever you have a form like this get

2:19:24.000,2:19:28.960
something from use something that means

2:19:26.639,2:19:31.599
that it's a context or a hook

2:19:28.960,2:19:34.240
so let's copy this and instead of use

2:19:31.599,2:19:35.679
chat channel let's import use chat

2:19:34.240,2:19:37.840
context

2:19:35.679,2:19:39.679
so from here we're getting a client but

2:19:37.840,2:19:42.399
what are we going to do with that

2:19:39.679,2:19:46.840
well down below we can say const

2:19:42.399,2:19:49.439
response is equal to await

2:19:46.840,2:19:50.399
client dot query

2:19:49.439,2:19:51.280
users

2:19:50.399,2:19:53.200
so

2:19:51.280,2:19:56.319
this is going to allow us to query all

2:19:53.200,2:19:59.280
the users based on specific parameters

2:19:56.319,2:20:01.040
and we can specify parameters like this

2:19:59.280,2:20:03.439
in the first object we're going to have

2:20:01.040,2:20:06.080
the id equal to

2:20:03.439,2:20:09.200
and then we want to have one more object

2:20:06.080,2:20:10.880
and then say dollar sign n e

2:20:09.200,2:20:13.920
not equal to

2:20:10.880,2:20:16.319
client dot user id

2:20:13.920,2:20:19.040
so basically we are excluding the

2:20:16.319,2:20:21.840
queering of users for the user with the

2:20:19.040,2:20:23.439
current id we don't want to find

2:20:21.840,2:20:25.040
ourselves there because we are the

2:20:23.439,2:20:26.560
people adding different users to the

2:20:25.040,2:20:28.800
channel

2:20:26.560,2:20:30.800
okay looks like that i saved my file for

2:20:28.800,2:20:32.479
the first time in quite a while and i've

2:20:30.800,2:20:33.760
noticed that we haven't declared our

2:20:32.479,2:20:35.520
filters yet

2:20:33.760,2:20:37.439
i've just noticed that we don't even

2:20:35.520,2:20:39.439
need these filters yet

2:20:37.439,2:20:41.840
because we will be filtering based on

2:20:39.439,2:20:44.160
the fact are we currently on the direct

2:20:41.840,2:20:46.720
messages or on the channels we don't

2:20:44.160,2:20:48.240
need any specific filters for that and

2:20:46.720,2:20:51.280
then we can pass some additional

2:20:48.240,2:20:53.120
information to our query users object if

2:20:51.280,2:20:55.600
you hover over it you'll be able to see

2:20:53.120,2:20:58.080
that we have the sort options to sort by

2:20:55.600,2:21:00.399
specific variable and also the options

2:20:58.080,2:21:04.640
object so the second object we'll pass

2:21:00.399,2:21:06.240
here is going to be id is equal to one

2:21:04.640,2:21:09.600
this is just the way we want to sort

2:21:06.240,2:21:11.439
specific things here is the explanation

2:21:09.600,2:21:13.760
then third thing are going to be the

2:21:11.439,2:21:16.319
options and in the options we're going

2:21:13.760,2:21:20.000
to provide our limit so let's say that

2:21:16.319,2:21:22.960
we want to limit only to the eight users

2:21:20.000,2:21:25.680
great that's about it for our response i

2:21:22.960,2:21:26.399
have to rename it because i had a typo

2:21:25.680,2:21:28.479
now

2:21:26.399,2:21:31.120
let's see if we actually have anything

2:21:28.479,2:21:34.120
in the response i'll say if

2:21:31.120,2:21:34.120
response.users.length

2:21:35.359,2:21:40.319
in that case we simply want to

2:21:37.920,2:21:42.560
set the users to be equal to

2:21:40.319,2:21:45.200
response.users

2:21:42.560,2:21:48.640
else we're going to have a special state

2:21:45.200,2:21:50.880
field called is list empty or just list

2:21:48.640,2:21:52.000
empty so let's create it

2:21:50.880,2:21:53.520
use

2:21:52.000,2:21:54.640
state

2:21:53.520,2:21:55.600
list

2:21:54.640,2:21:58.479
empty

2:21:55.600,2:22:00.560
and set list empty at the start that's

2:21:58.479,2:22:02.800
going to be set to false

2:22:00.560,2:22:06.479
so if we don't have users we can simply

2:22:02.800,2:22:08.319
call the set list empty and set it to

2:22:06.479,2:22:10.319
true

2:22:08.319,2:22:12.560
finally if there was a problem while

2:22:10.319,2:22:14.880
catching the users we can simply console

2:22:12.560,2:22:17.200
log the error

2:22:14.880,2:22:21.439
and after this whole part is done we can

2:22:17.200,2:22:23.600
finally set the loading back to false

2:22:21.439,2:22:26.960
great now we've created the function to

2:22:23.600,2:22:29.359
get the users now let's actually call it

2:22:26.960,2:22:32.319
if there is a client means if we are

2:22:29.359,2:22:34.479
connected only then do we want to call

2:22:32.319,2:22:35.760
getusers function

2:22:34.479,2:22:38.160
let's do it

2:22:35.760,2:22:39.439
save it and see if we're expecting

2:22:38.160,2:22:41.439
something

2:22:39.439,2:22:43.120
well with that we're simply populating

2:22:41.439,2:22:44.560
the users but we're not using the

2:22:43.120,2:22:47.439
variable yet

2:22:44.560,2:22:50.479
so we want to map over the users and for

2:22:47.439,2:22:53.040
each user we want to show a user item

2:22:50.479,2:22:55.040
let's do just that right inside of our

2:22:53.040,2:22:57.359
list container we're going to have a

2:22:55.040,2:22:59.600
loading property and if we're currently

2:22:57.359,2:23:03.280
loading in that case we want to show a

2:22:59.600,2:23:05.920
div which is going to have a class name

2:23:03.280,2:23:08.240
which is going to be equal to user dash

2:23:05.920,2:23:11.120
list underscore underscore message

2:23:08.240,2:23:14.960
and that div is simply going to say

2:23:11.120,2:23:18.000
loading users dot dot so we can put that

2:23:14.960,2:23:19.760
here in new pair of parentheses with a

2:23:18.000,2:23:22.240
column

2:23:19.760,2:23:24.880
if we're not loading we want to see if

2:23:22.240,2:23:27.600
we have the users so we can say if users

2:23:24.880,2:23:30.800
question mark dot length and finally we

2:23:27.600,2:23:32.960
want to say users question mark dot map

2:23:30.800,2:23:35.600
we're mapping over the users

2:23:32.960,2:23:38.880
in here we have a callback function and

2:23:35.600,2:23:41.280
for each user we want to render the user

2:23:38.880,2:23:44.160
item component that's the component we

2:23:41.280,2:23:45.920
created right here at the top

2:23:44.160,2:23:48.240
of course we want to pass some things to

2:23:45.920,2:23:49.840
it so we're first going to provide an

2:23:48.240,2:23:52.160
index

2:23:49.840,2:23:54.479
which is going to be equal to i

2:23:52.160,2:23:57.760
we also want to provide a key which is

2:23:54.479,2:23:59.920
going to be equal to user dot id

2:23:57.760,2:24:02.240
and finally we want to provide the user

2:23:59.920,2:24:05.200
property which is going to be equal to

2:24:02.240,2:24:07.359
the user we're mapping over

2:24:05.200,2:24:09.840
now back in the user item

2:24:07.359,2:24:12.240
through the props we can access the user

2:24:09.840,2:24:14.720
object and now we can get his name

2:24:12.240,2:24:17.359
avatar and everything else

2:24:14.720,2:24:19.520
so the avatar component has the image

2:24:17.359,2:24:22.880
property and that is going to be equal

2:24:19.520,2:24:25.120
to user dot image it also accepts a name

2:24:22.880,2:24:28.240
property which is going to be equal to

2:24:25.120,2:24:29.040
user dot full name

2:24:28.240,2:24:31.439
or

2:24:29.040,2:24:33.520
user dot id

2:24:31.439,2:24:36.560
and also you can set the size equal to

2:24:33.520,2:24:38.399
the number of 32. let's save it

2:24:36.560,2:24:40.960
if we hover over it you'll see that this

2:24:38.399,2:24:42.640
is the javascript mastery user so far we

2:24:40.960,2:24:44.720
don't have a lot of users

2:24:42.640,2:24:47.200
we are currently logged in as dr smith

2:24:44.720,2:24:49.520
so that's why we cannot see yourself

2:24:47.200,2:24:51.120
but if i remove this part here

2:24:49.520,2:24:54.080
you're gonna notice that we're gonna

2:24:51.120,2:24:55.200
have two users dr smith and javascript

2:24:54.080,2:24:57.920
mastery

2:24:55.200,2:24:59.520
but dr smith is ourselves and we cannot

2:24:57.920,2:25:01.840
invite ourselves to the chat we are

2:24:59.520,2:25:04.800
creating so that's why we're saying if

2:25:01.840,2:25:06.160
our id is not equal to the current id of

2:25:04.800,2:25:08.800
the user

2:25:06.160,2:25:11.359
there we go we disappear from the list

2:25:08.800,2:25:13.040
and now alongside avatar let's add a

2:25:11.359,2:25:15.760
name for that user

2:25:13.040,2:25:18.240
we can do that by adding a paragraph tag

2:25:15.760,2:25:19.520
and now let's add a name for the person

2:25:18.240,2:25:21.600
we're inviting

2:25:19.520,2:25:24.479
we can add a paragraph

2:25:21.600,2:25:27.520
set the class name to be equal to user

2:25:24.479,2:25:29.200
dash item underscore underscore name

2:25:27.520,2:25:30.560
and then inside of here we can simply

2:25:29.200,2:25:31.439
render user

2:25:30.560,2:25:33.120
dot

2:25:31.439,2:25:36.160
full name

2:25:33.120,2:25:38.160
or user dot id

2:25:36.160,2:25:39.920
that means if for whatever reason we

2:25:38.160,2:25:42.160
don't have access to the full name we

2:25:39.920,2:25:45.120
can simply show the user id

2:25:42.160,2:25:47.520
let's save it and as you can see this is

2:25:45.120,2:25:50.240
javascript mastery

2:25:47.520,2:25:53.280
now let's add icons to keep track of if

2:25:50.240,2:25:55.840
we're inviting the person or not

2:25:53.280,2:25:57.120
we can add an icon by simply putting

2:25:55.840,2:26:00.960
invite

2:25:57.120,2:26:04.560
icon svg right here and saving it as you

2:26:00.960,2:26:07.600
can see this is a filled check mark

2:26:04.560,2:26:09.600
but we can also have a self-closing div

2:26:07.600,2:26:12.240
and then inside of there we can add a

2:26:09.600,2:26:15.280
class name equal to

2:26:12.240,2:26:17.680
user dash item underscore underscore

2:26:15.280,2:26:19.439
invite dash empty

2:26:17.680,2:26:21.120
if we do that you'll notice that we have

2:26:19.439,2:26:23.520
an empty checkbox

2:26:21.120,2:26:24.720
so now we have to be able to toggle

2:26:23.520,2:26:27.680
between them

2:26:24.720,2:26:30.080
and we can do that by creating a new use

2:26:27.680,2:26:34.640
state field so we can say

2:26:30.080,2:26:37.520
use state and we can call it selected so

2:26:34.640,2:26:40.319
selected set selected and the initial

2:26:37.520,2:26:41.520
state is going to be false

2:26:40.319,2:26:43.680
based on that

2:26:41.520,2:26:47.760
we can make use of that like this

2:26:43.680,2:26:51.200
if selected then we show the invite icon

2:26:47.760,2:26:52.880
else we show the empty div

2:26:51.200,2:26:55.600
so let's save it

2:26:52.880,2:26:58.000
and as you can see right now we have

2:26:55.600,2:26:59.520
just the empty div which is like an

2:26:58.000,2:27:02.479
empty circle

2:26:59.520,2:27:04.800
so now how can we toggle between those

2:27:02.479,2:27:05.840
well we're going to add the on click

2:27:04.800,2:27:07.760
property

2:27:05.840,2:27:11.040
straight to this div

2:27:07.760,2:27:13.280
and what we can do on click is simply

2:27:11.040,2:27:15.280
handle select

2:27:13.280,2:27:16.800
we're going to create that handle select

2:27:15.280,2:27:19.760
function right here

2:27:16.800,2:27:22.240
const handle select

2:27:19.760,2:27:23.760
inside of there we can simply set

2:27:22.240,2:27:25.760
selected

2:27:23.760,2:27:28.479
inside of there we get a callback

2:27:25.760,2:27:30.880
function with the previous selected so

2:27:28.479,2:27:33.600
we can say pre-selected

2:27:30.880,2:27:35.680
and then we can simply return not

2:27:33.600,2:27:37.439
pre-selected

2:27:35.680,2:27:39.840
this is how you do it in react when you

2:27:37.439,2:27:42.399
want to modify something by the previous

2:27:39.840,2:27:45.920
value and now if you see that we can

2:27:42.399,2:27:47.840
click and toggle the users on and off

2:27:45.920,2:27:50.160
but the problem happens if you want to

2:27:47.840,2:27:52.319
invite more users if we had a second

2:27:50.160,2:27:54.800
user right there then you wouldn't be

2:27:52.319,2:27:56.800
able to toggle on and off both of them

2:27:54.800,2:27:59.760
we have to keep track of which ones are

2:27:56.800,2:28:02.720
toggled on and which ones are not

2:27:59.760,2:28:05.439
to do that we can go back to our create

2:28:02.720,2:28:07.920
channel and then right inside of here we

2:28:05.439,2:28:09.439
are going to create a new use state

2:28:07.920,2:28:11.439
field

2:28:09.439,2:28:13.359
use state

2:28:11.439,2:28:14.800
and in here we can call it something

2:28:13.359,2:28:15.840
like selected

2:28:14.800,2:28:17.280
users

2:28:15.840,2:28:18.240
then we're going to have set selected

2:28:17.280,2:28:21.439
users

2:28:18.240,2:28:23.920
and at the start we only want to input

2:28:21.439,2:28:26.479
our own id because we always want to be

2:28:23.920,2:28:28.160
in the chat that we are creating so how

2:28:26.479,2:28:30.319
can we get to our id

2:28:28.160,2:28:33.280
well we can do that by using the use

2:28:30.319,2:28:36.240
chat context so we can say const

2:28:33.280,2:28:37.520
client and also we're gonna need set

2:28:36.240,2:28:38.640
active

2:28:37.520,2:28:40.880
channel

2:28:38.640,2:28:42.399
that's coming from

2:28:40.880,2:28:46.080
use

2:28:42.399,2:28:47.600
chat context and we call it as a hook

2:28:46.080,2:28:49.200
of course there's the equal sign in

2:28:47.600,2:28:51.600
between

2:28:49.200,2:28:54.240
and now we have the client and we can

2:28:51.600,2:28:56.479
simply get the user id right here at the

2:28:54.240,2:28:58.160
first element in the array by saying

2:28:56.479,2:29:00.080
client dot

2:28:58.160,2:29:02.880
user

2:29:00.080,2:29:05.760
id id all uppercase

2:29:02.880,2:29:09.040
or if there isn't one we can simply

2:29:05.760,2:29:11.200
say or empty string so what we've done

2:29:09.040,2:29:14.080
is we've just created the selected users

2:29:11.200,2:29:15.359
field and immediately added ourselves to

2:29:14.080,2:29:18.000
that group

2:29:15.359,2:29:20.560
okay now that we have the selected and

2:29:18.000,2:29:22.960
the set selected users right here what

2:29:20.560,2:29:24.800
we need to pass into the user list is

2:29:22.960,2:29:26.080
going to be the set selected users

2:29:24.800,2:29:28.399
variable

2:29:26.080,2:29:31.120
set selected users is equal to set

2:29:28.399,2:29:31.920
selected users we can go to our user

2:29:31.120,2:29:34.240
list

2:29:31.920,2:29:36.640
and then right inside of here

2:29:34.240,2:29:39.120
inside of our user item we want to pass

2:29:36.640,2:29:40.160
that over one more time set selected

2:29:39.120,2:29:43.200
users

2:29:40.160,2:29:45.359
right now it's undefined so right here

2:29:43.200,2:29:47.760
inside of the user list we need to get

2:29:45.359,2:29:49.359
that set selected

2:29:47.760,2:29:51.680
users

2:29:49.359,2:29:54.880
great now we have access to the set

2:29:51.680,2:29:56.800
selected users right here inside of the

2:29:54.880,2:29:59.280
user item

2:29:56.800,2:30:01.920
so what we want to do is we first want

2:29:59.280,2:30:05.120
to check if the user has been selected

2:30:01.920,2:30:06.640
so we can say if selected in that case

2:30:05.120,2:30:07.840
we want to set

2:30:06.640,2:30:08.800
selected

2:30:07.840,2:30:10.399
users

2:30:08.800,2:30:11.600
to be equal to

2:30:10.399,2:30:12.560
then we're going to have a callback

2:30:11.600,2:30:14.880
function

2:30:12.560,2:30:19.680
and in here we get prev

2:30:14.880,2:30:21.600
users so what we can say is prev users

2:30:19.680,2:30:24.319
dot filter

2:30:21.600,2:30:28.399
we get that prev user

2:30:24.319,2:30:31.120
and then we want to filter the prev user

2:30:28.399,2:30:33.359
that doesn't have an id equal to to the

2:30:31.120,2:30:36.240
user dot id

2:30:33.359,2:30:38.800
so basically we are keeping all of the

2:30:36.240,2:30:41.359
selected users so far but removing the

2:30:38.800,2:30:43.120
one that we've clicked right now so if

2:30:41.359,2:30:44.800
we had two more of these and if we

2:30:43.120,2:30:47.200
clicked all of them and then click the

2:30:44.800,2:30:49.439
third one we would just remove the

2:30:47.200,2:30:51.760
selected user from the third one and

2:30:49.439,2:30:53.680
keep it on the first two ones

2:30:51.760,2:30:56.000
i know it's a bit confusing but i hope

2:30:53.680,2:30:58.240
it makes just a bit of sense

2:30:56.000,2:31:00.479
and then we're gonna have else

2:30:58.240,2:31:03.439
and then on else we want to do

2:31:00.479,2:31:05.760
set selected users we are again going to

2:31:03.439,2:31:07.840
get prev users

2:31:05.760,2:31:10.319
as a callback function

2:31:07.840,2:31:13.280
let's make sure to close it properly and

2:31:10.319,2:31:14.880
in this case we want to add a user so we

2:31:13.280,2:31:18.960
can create an array

2:31:14.880,2:31:21.760
where we spread all the previous users

2:31:18.960,2:31:22.880
and finally append our current user id

2:31:21.760,2:31:25.040
to it

2:31:22.880,2:31:27.040
right here it should have been prevusers

2:31:25.040,2:31:29.520
and not user

2:31:27.040,2:31:31.920
so the above part is just filtering out

2:31:29.520,2:31:32.960
the currently clicked item if it was

2:31:31.920,2:31:35.120
clicked

2:31:32.960,2:31:37.920
but this line is adding one more

2:31:35.120,2:31:40.319
selected user as you can see we are

2:31:37.920,2:31:43.520
spreading over all of the previous users

2:31:40.319,2:31:46.240
plus adding the one we just clicked

2:31:43.520,2:31:47.359
great so that part with the user item is

2:31:46.240,2:31:49.920
now done

2:31:47.359,2:31:51.520
the final thing we can do is some slight

2:31:49.920,2:31:54.000
error handling and handling the

2:31:51.520,2:31:57.359
situations where we have no users

2:31:54.000,2:31:58.880
so what we can do is add one more use

2:31:57.359,2:32:01.760
state field

2:31:58.880,2:32:04.240
there we're going to say error and set

2:32:01.760,2:32:06.800
error at the start that's going to be

2:32:04.240,2:32:08.000
set to false so let's set it to false

2:32:06.800,2:32:08.880
right there

2:32:08.000,2:32:10.880
and

2:32:08.880,2:32:13.280
right here instead of khan's log in the

2:32:10.880,2:32:16.560
error we're simply going to say set

2:32:13.280,2:32:18.640
error and we'll just say true

2:32:16.560,2:32:20.800
now based on these conditions instead of

2:32:18.640,2:32:23.920
rendering the list container if we have

2:32:20.800,2:32:26.399
an error we don't want to render that so

2:32:23.920,2:32:29.280
what are these conditions going to be

2:32:26.399,2:32:30.160
so we're going to write if there is an

2:32:29.280,2:32:33.280
error

2:32:30.160,2:32:35.840
in that case we want to return some jsx

2:32:33.280,2:32:36.960
more specifically a div really similar

2:32:35.840,2:32:38.640
to this one

2:32:36.960,2:32:41.280
it's going to be a div

2:32:38.640,2:32:45.359
a user message but instead of loading

2:32:41.280,2:32:47.120
users we're going to say error loading

2:32:45.359,2:32:49.439
please refresh

2:32:47.120,2:32:52.080
and try again

2:32:49.439,2:32:54.800
but make sure that that is inside of the

2:32:52.080,2:32:57.520
list container so i wrap that inside of

2:32:54.800,2:32:59.200
the list container and it's going to be

2:32:57.520,2:33:00.880
just like this

2:32:59.200,2:33:03.120
in this case we cannot see that arrow

2:33:00.880,2:33:04.560
because we have users but if we didn't

2:33:03.120,2:33:06.560
have any or if there were some

2:33:04.560,2:33:07.680
connection issues then we would see that

2:33:06.560,2:33:09.520
error

2:33:07.680,2:33:11.760
and one more thing is we're going to

2:33:09.520,2:33:14.080
copy this entire if statement

2:33:11.760,2:33:16.800
and just change the error part to be

2:33:14.080,2:33:19.439
equal to list empty

2:33:16.800,2:33:21.280
so if our list is empty in that case we

2:33:19.439,2:33:22.560
simply want to say

2:33:21.280,2:33:23.840
no

2:33:22.560,2:33:25.439
users

2:33:23.840,2:33:27.760
found

2:33:25.439,2:33:30.960
great we have the loading states we have

2:33:27.760,2:33:33.120
the no user state the error state and if

2:33:30.960,2:33:35.520
everything works out we are displaying

2:33:33.120,2:33:38.080
our users and we can toggle the user

2:33:35.520,2:33:41.439
invite on or off

2:33:38.080,2:33:43.680
that was it for our user list it was

2:33:41.439,2:33:45.840
such a long component but now we can go

2:33:43.680,2:33:48.240
back to our create channel we can

2:33:45.840,2:33:50.560
remember what we had the name add

2:33:48.240,2:33:52.080
members there is the name and there is

2:33:50.560,2:33:54.800
the add members

2:33:52.080,2:33:57.760
and finally we can add a button to make

2:33:54.800,2:34:00.160
an invite of the user to our channel

2:33:57.760,2:34:02.960
to create a channel we just need to add

2:34:00.160,2:34:05.200
one more div below the user list and

2:34:02.960,2:34:08.960
that's going to be a div with the class

2:34:05.200,2:34:11.040
name equal to create dash channel

2:34:08.960,2:34:12.800
underscore underscore button

2:34:11.040,2:34:14.880
dash wrapper

2:34:12.800,2:34:18.640
inside of that div we're going to have a

2:34:14.880,2:34:21.520
p tag and that p tag is going to check

2:34:18.640,2:34:23.920
on what is the create type

2:34:21.520,2:34:27.359
and if it's currently team

2:34:23.920,2:34:28.560
in that case we want to say create

2:34:27.359,2:34:31.520
channel

2:34:28.560,2:34:32.720
otherwise we want to say create

2:34:31.520,2:34:34.000
message

2:34:32.720,2:34:36.640
group

2:34:34.000,2:34:38.800
great let's save it and check it out as

2:34:36.640,2:34:41.280
you can see there is our button at the

2:34:38.800,2:34:44.640
bottom and now we just have to add the

2:34:41.280,2:34:47.600
on click property to this div

2:34:44.640,2:34:48.640
so on click let's do something like a

2:34:47.600,2:34:51.200
create

2:34:48.640,2:34:53.120
channel function

2:34:51.200,2:34:56.240
just below these use states we're going

2:34:53.120,2:34:58.640
to create a const create

2:34:56.240,2:35:00.560
channel function it's going to be an

2:34:58.640,2:35:03.359
async function

2:35:00.560,2:35:05.439
and we are going to get the event

2:35:03.359,2:35:08.080
as the first parameter

2:35:05.439,2:35:11.040
inside of there we can first say event

2:35:08.080,2:35:12.479
or e dot prevent default not to do a

2:35:11.040,2:35:14.640
browser reload

2:35:12.479,2:35:16.000
and then finally we'll have to create a

2:35:14.640,2:35:18.960
new channel

2:35:16.000,2:35:20.720
we can do that by first opening a try

2:35:18.960,2:35:22.000
and catch block to make sure nothing

2:35:20.720,2:35:25.840
goes wrong

2:35:22.000,2:35:27.439
and this is how we create a new channel

2:35:25.840,2:35:30.240
new channel

2:35:27.439,2:35:32.880
is going to be equal to await

2:35:30.240,2:35:34.479
client dot channel

2:35:32.880,2:35:36.560
and that's going to be the function

2:35:34.479,2:35:39.520
that's going to create a channel we have

2:35:36.560,2:35:42.160
to pass a few options into it

2:35:39.520,2:35:44.560
first of all we have to pass the create

2:35:42.160,2:35:45.920
type is it a messaging channel is it a

2:35:44.560,2:35:49.040
theme channel

2:35:45.920,2:35:51.840
then we have to pass a channel name

2:35:49.040,2:35:55.200
and finally we have to pass an object

2:35:51.840,2:35:56.160
that's going to contain the name as the

2:35:55.200,2:35:59.120
channel

2:35:56.160,2:36:01.359
name and also the members

2:35:59.120,2:36:03.600
and this is the most important part as

2:36:01.359,2:36:06.319
members we're going to add our own

2:36:03.600,2:36:08.399
selected users

2:36:06.319,2:36:11.280
great once we finally created the

2:36:08.399,2:36:12.720
channel we can just say await

2:36:11.280,2:36:15.280
new channel

2:36:12.720,2:36:16.319
dot watch we want to keep watching that

2:36:15.280,2:36:18.000
channel

2:36:16.319,2:36:19.920
we want to see whenever there's a new

2:36:18.000,2:36:22.080
message in that channel

2:36:19.920,2:36:23.680
and finally once the channel is created

2:36:22.080,2:36:25.920
let's do a clean up

2:36:23.680,2:36:27.439
first we're going to reset that field if

2:36:25.920,2:36:28.880
we go here

2:36:27.439,2:36:31.280
you can see there's a field with the

2:36:28.880,2:36:32.960
channel name so let's reset that that's

2:36:31.280,2:36:33.920
going to be set

2:36:32.960,2:36:37.040
channel

2:36:33.920,2:36:40.560
name equal to an empty string

2:36:37.040,2:36:42.479
then we're gonna set is creating to be

2:36:40.560,2:36:44.720
false because we're no longer creating a

2:36:42.479,2:36:46.720
channel we just created one

2:36:44.720,2:36:49.760
then we're going to reset the set

2:36:46.720,2:36:52.560
selected users so we can say set

2:36:49.760,2:36:55.040
selected users and we're going to reset

2:36:52.560,2:36:57.760
that back to an array

2:36:55.040,2:37:00.560
containing only us one more time so

2:36:57.760,2:37:02.880
client dot user id we always want to be

2:37:00.560,2:37:04.640
there in the channels we create

2:37:02.880,2:37:07.200
and then finally we're going to switch

2:37:04.640,2:37:08.960
that channel by saying set

2:37:07.200,2:37:11.280
active channel

2:37:08.960,2:37:12.399
is going to be equal to to the new

2:37:11.280,2:37:14.720
channel

2:37:12.399,2:37:17.439
and finally if we have an error we

2:37:14.720,2:37:20.399
simply want to do console.log

2:37:17.439,2:37:22.800
right there console.log error

2:37:20.399,2:37:25.760
great this is going to be it for the

2:37:22.800,2:37:28.560
entire channel creation process

2:37:25.760,2:37:31.280
now we should be able to finally see

2:37:28.560,2:37:33.840
what channels and direct messages we

2:37:31.280,2:37:36.800
have right here on our lists

2:37:33.840,2:37:39.760
so let's go under new channel so right

2:37:36.800,2:37:42.080
now i'm going to maximize this window we

2:37:39.760,2:37:44.800
are going to go under channels i'm going

2:37:42.080,2:37:46.560
to name the channel something like

2:37:44.800,2:37:47.520
doctors

2:37:46.560,2:37:50.720
meeting

2:37:47.520,2:37:52.640
and let's invite javascript mastery

2:37:50.720,2:37:55.760
let's create a new channel

2:37:52.640,2:37:57.840
and there we go we are in

2:37:55.760,2:38:01.040
let's send a first message something

2:37:57.840,2:38:03.680
like hello and as you can see dr smith

2:38:01.040,2:38:05.520
the message is there unfortunately the

2:38:03.680,2:38:08.319
channel didn't seem to appear on the

2:38:05.520,2:38:11.359
left side so we need to see what's up

2:38:08.319,2:38:12.720
with that also if we go here under edit

2:38:11.359,2:38:14.960
you can see that we still haven't

2:38:12.720,2:38:17.439
implemented the edit feature

2:38:14.960,2:38:20.399
now let's reload

2:38:17.439,2:38:22.479
and unfortunately yeah there still is

2:38:20.399,2:38:25.359
not a doctor's meeting channel on the

2:38:22.479,2:38:28.399
left side if we tried searching

2:38:25.359,2:38:30.399
still nothing happened so these are the

2:38:28.399,2:38:32.560
things that we have to fix to make this

2:38:30.399,2:38:34.399
work fully the channel was indeed

2:38:32.560,2:38:37.040
created and we can verify that in the

2:38:34.399,2:38:39.760
get stream dashboard but we still cannot

2:38:37.040,2:38:40.840
see it on the left side so let's fix

2:38:39.760,2:38:43.600
that right

2:38:40.840,2:38:46.319
away to make our channels and direct

2:38:43.600,2:38:48.720
messages appear we can go back to our

2:38:46.319,2:38:51.359
channel list container

2:38:48.720,2:38:54.319
inside of here if we scroll down

2:38:51.359,2:38:56.479
we left our filters to be empty so we

2:38:54.319,2:38:58.880
are not filtering any data we're not

2:38:56.479,2:39:01.120
trying to look for any channels so let's

2:38:58.880,2:39:04.160
fix that right away

2:39:01.120,2:39:06.399
so first in here we have the sidebar

2:39:04.160,2:39:09.439
then we have the company header

2:39:06.399,2:39:12.080
after that let's create some filters

2:39:09.439,2:39:13.359
so right here i'm going to say const

2:39:12.080,2:39:14.479
custom

2:39:13.359,2:39:15.520
channel

2:39:14.479,2:39:16.640
team

2:39:15.520,2:39:19.600
filter

2:39:16.640,2:39:21.760
and that's going to be a function

2:39:19.600,2:39:25.040
and as a parameter we're going to get a

2:39:21.760,2:39:28.399
list of all the channels there we can

2:39:25.040,2:39:30.160
return channels dot filter so we want to

2:39:28.399,2:39:32.640
filter out the channels

2:39:30.160,2:39:35.200
and we get each specific channel

2:39:32.640,2:39:37.760
and which ones do we want to leave out

2:39:35.200,2:39:41.840
well we want to keep only the ones where

2:39:37.760,2:39:46.160
the channel dot type is triple equal to

2:39:41.840,2:39:47.840
team because this is our team filter

2:39:46.160,2:39:48.960
now we're going to copy that same

2:39:47.840,2:39:51.439
function

2:39:48.960,2:39:55.359
and we're going to call this one custom

2:39:51.439,2:39:57.520
channel not theme but rather messaging

2:39:55.359,2:40:00.720
filter and we're going to set the

2:39:57.520,2:40:01.840
channel type to messaging

2:40:00.720,2:40:04.319
great

2:40:01.840,2:40:06.160
now where can we use those filters

2:40:04.319,2:40:08.160
that's going to be here in channel

2:40:06.160,2:40:10.399
render filter function

2:40:08.160,2:40:11.439
in here we can simply say

2:40:10.399,2:40:14.319
custom

2:40:11.439,2:40:16.720
channel theme filter and for the second

2:40:14.319,2:40:19.359
channel list right here we are simply

2:40:16.720,2:40:22.880
going to paste custom channel theme

2:40:19.359,2:40:25.600
filter but this time it's going to be

2:40:22.880,2:40:28.319
messaging okay now that we have the

2:40:25.600,2:40:30.319
channel render filters before we fill in

2:40:28.319,2:40:32.960
the other types of filters

2:40:30.319,2:40:34.560
we need to do some quick renaming i've

2:40:32.960,2:40:37.520
made a mistake when calling this

2:40:34.560,2:40:40.720
component the channel list container

2:40:37.520,2:40:41.920
this one should be called the channel

2:40:40.720,2:40:44.640
list

2:40:41.920,2:40:46.800
content so this is just the content for

2:40:44.640,2:40:49.439
our container and then the actual

2:40:46.800,2:40:51.520
component is going to be below and we

2:40:49.439,2:40:54.640
can create it right here

2:40:51.520,2:40:55.760
that is going to be const

2:40:54.640,2:40:58.720
channel

2:40:55.760,2:41:00.640
list container that's going to be a

2:40:58.720,2:41:02.880
functional component

2:41:00.640,2:41:04.319
and inside of there we can of course do

2:41:02.880,2:41:06.479
some logic

2:41:04.319,2:41:08.000
these props are going to be

2:41:06.479,2:41:11.040
in curly braces

2:41:08.000,2:41:14.319
set create type

2:41:11.040,2:41:17.040
also set is creating

2:41:14.319,2:41:18.240
and finally set is

2:41:17.040,2:41:20.319
editing

2:41:18.240,2:41:22.960
great now we're passing these three

2:41:20.319,2:41:25.200
props and we're going to have just one

2:41:22.960,2:41:27.279
more state value

2:41:25.200,2:41:29.279
this channel list container is going to

2:41:27.279,2:41:31.840
give us the logic for that sweet

2:41:29.279,2:41:33.200
animation you saw for mobile devices so

2:41:31.840,2:41:35.359
we need to be able to toggle the

2:41:33.200,2:41:40.160
container based on the width of the

2:41:35.359,2:41:43.840
screen so let's create a use state field

2:41:40.160,2:41:46.800
and let's call it toggle

2:41:43.840,2:41:49.279
great we have to import the use state at

2:41:46.800,2:41:50.319
the top so right here we're going to

2:41:49.279,2:41:52.240
import

2:41:50.319,2:41:55.520
use state

2:41:52.240,2:41:57.920
and let's scroll down

2:41:55.520,2:42:00.399
the initial state for the set toggle

2:41:57.920,2:42:02.880
container is going to be set to false

2:42:00.399,2:42:04.000
also make sure to put a capital t right

2:42:02.880,2:42:06.399
there

2:42:04.000,2:42:07.600
so what jsx are we going to return from

2:42:06.399,2:42:09.520
here

2:42:07.600,2:42:13.120
inside of the return we are going to

2:42:09.520,2:42:16.640
return a react fragment inside of that

2:42:13.120,2:42:20.000
fragment we can return a div

2:42:16.640,2:42:22.160
and this div is going to have a class

2:42:20.000,2:42:23.760
name equal to

2:42:22.160,2:42:25.439
channel

2:42:23.760,2:42:28.399
dash list

2:42:25.439,2:42:30.880
underscore underscore container

2:42:28.399,2:42:31.920
and inside of there we can render our

2:42:30.880,2:42:32.880
channel

2:42:31.920,2:42:34.640
list

2:42:32.880,2:42:37.120
content

2:42:34.640,2:42:39.200
of course we were using some props in

2:42:37.120,2:42:41.760
our channel list content as you can see

2:42:39.200,2:42:44.960
right there so we have to make sure to

2:42:41.760,2:42:46.960
pass all of the props from our channel

2:42:44.960,2:42:48.399
list container to the channel list

2:42:46.960,2:42:50.080
content

2:42:48.399,2:42:52.479
of course we have to space everything

2:42:50.080,2:42:54.399
out properly and then set the equal

2:42:52.479,2:42:57.120
values to be equal to the names

2:42:54.399,2:42:58.800
themselves we can do that by using some

2:42:57.120,2:43:01.520
shortcut magic

2:42:58.800,2:43:04.080
there we go and we can do the same thing

2:43:01.520,2:43:05.279
for set is editing

2:43:04.080,2:43:07.040
there we go

2:43:05.279,2:43:09.840
the only thing we don't have to pass

2:43:07.040,2:43:12.160
here is the is creating property we need

2:43:09.840,2:43:14.720
just these three

2:43:12.160,2:43:17.600
great now below this div we are going to

2:43:14.720,2:43:21.520
have one more div and this div is going

2:43:17.600,2:43:23.680
to have a class name equal to channel

2:43:21.520,2:43:27.439
dash list underscore underscore

2:43:23.680,2:43:29.920
container dash responsive

2:43:27.439,2:43:32.160
so this one is only going to be visible

2:43:29.920,2:43:34.080
when we are on mobile devices

2:43:32.160,2:43:35.120
so we are going to give it some inline

2:43:34.080,2:43:37.359
styles

2:43:35.120,2:43:38.960
more specifically style

2:43:37.359,2:43:40.240
is equal to

2:43:38.960,2:43:42.800
left

2:43:40.240,2:43:45.600
toggle container and that is going to be

2:43:42.800,2:43:47.359
either zero percent so let's put that

2:43:45.600,2:43:49.520
here zero percent

2:43:47.359,2:43:52.479
or that's going to be

2:43:49.520,2:43:53.680
something like let me put it like this

2:43:52.479,2:43:55.040
something like

2:43:53.680,2:43:56.800
minus

2:43:55.040,2:43:58.800
89

2:43:56.800,2:44:00.319
i found this value to work the best

2:43:58.800,2:44:02.319
basically it's going to pull from the

2:44:00.319,2:44:04.800
left side to the right and it's going to

2:44:02.319,2:44:06.560
have 11 of the width

2:44:04.800,2:44:08.880
finally we need to give it a background

2:44:06.560,2:44:11.439
color so you can say background

2:44:08.880,2:44:16.479
is equal to and that's going to be

2:44:11.439,2:44:18.880
hexadecimal string 005 ff great

2:44:16.479,2:44:20.800
now we have everything it is complaining

2:44:18.880,2:44:23.520
about the toggle container variable

2:44:20.800,2:44:24.720
because i have this column here we don't

2:44:23.520,2:44:27.200
need that

2:44:24.720,2:44:30.240
with that we created our div and we need

2:44:27.200,2:44:33.279
to have one more div inside of it so we

2:44:30.240,2:44:35.760
can create the final div here

2:44:33.279,2:44:36.880
this div is going to have a class name

2:44:35.760,2:44:38.560
equal to

2:44:36.880,2:44:40.319
channel

2:44:38.560,2:44:41.760
dash list underscore underscore

2:44:40.319,2:44:43.520
container

2:44:41.760,2:44:46.240
dash toggle

2:44:43.520,2:44:47.439
and it's also going to have the on click

2:44:46.240,2:44:50.080
property

2:44:47.439,2:44:51.359
on click we are going to simply call a

2:44:50.080,2:44:52.399
function

2:44:51.359,2:44:54.399
set

2:44:52.399,2:44:57.200
toggle container

2:44:54.399,2:44:58.880
and we want to toggle it off so as we

2:44:57.200,2:45:01.920
discussed we are going to get the

2:44:58.880,2:45:04.000
previous toggle container

2:45:01.920,2:45:07.279
and we're simply going to return

2:45:04.000,2:45:09.840
not pref toggle container that's how we

2:45:07.279,2:45:12.080
toggle values in react state

2:45:09.840,2:45:15.200
and finally below this div we just

2:45:12.080,2:45:16.160
created we're going to add our channel

2:45:15.200,2:45:18.880
list

2:45:16.160,2:45:21.600
content we can basically copy what we

2:45:18.880,2:45:23.439
had here so this same thing let's simply

2:45:21.600,2:45:25.279
copy and paste it here

2:45:23.439,2:45:27.279
and we're going to add one more prop to

2:45:25.279,2:45:30.399
it this time that's going to be the set

2:45:27.279,2:45:32.560
toggle container is equal to set toggle

2:45:30.399,2:45:34.080
container so why do we have two

2:45:32.560,2:45:35.200
different divs with two of the same

2:45:34.080,2:45:37.200
components

2:45:35.200,2:45:40.640
this one is for the desktop version and

2:45:37.200,2:45:42.560
this one is happening on mobile

2:45:40.640,2:45:44.800
great so now we have two different

2:45:42.560,2:45:46.800
versions the channel list content and

2:45:44.800,2:45:48.880
the same channel list content but the

2:45:46.800,2:45:51.760
one for the responsive version where

2:45:48.880,2:45:53.600
we're passing the set toggle container

2:45:51.760,2:45:55.920
we are going to use that in just a

2:45:53.600,2:45:58.560
moment but for now let's finish these

2:45:55.920,2:46:00.960
filters right here

2:45:58.560,2:46:02.800
and here so that we can actually see the

2:46:00.960,2:46:04.800
channels in action

2:46:02.800,2:46:08.479
so to get these channels we're going to

2:46:04.800,2:46:10.240
get something from the use context so

2:46:08.479,2:46:11.600
right here at the top of the channel

2:46:10.240,2:46:14.000
list content

2:46:11.600,2:46:15.200
i'm going to say

2:46:14.000,2:46:16.560
const

2:46:15.200,2:46:20.319
lowercase

2:46:16.560,2:46:23.600
and we want to get the client object

2:46:20.319,2:46:25.120
that's going to be equal to use chat

2:46:23.600,2:46:27.279
context

2:46:25.120,2:46:29.600
so once we get this client

2:46:27.279,2:46:32.399
then we can create the filters object

2:46:29.600,2:46:35.120
and we can say const filters is equal to

2:46:32.399,2:46:36.399
an object and then in there we can say

2:46:35.120,2:46:39.120
members

2:46:36.399,2:46:41.840
colon that's going to be an object and

2:46:39.120,2:46:45.520
we want to say dollar sign in that means

2:46:41.840,2:46:50.000
included and there we can simply say

2:46:45.520,2:46:52.000
client dot user id so that means that we

2:46:50.000,2:46:54.960
want to get all of the channels and

2:46:52.000,2:46:56.080
direct messages where our user is

2:46:54.960,2:46:57.040
included

2:46:56.080,2:46:59.600
great

2:46:57.040,2:47:01.680
now we can copy that variable and paste

2:46:59.600,2:47:03.760
it right here instead of this empty

2:47:01.680,2:47:05.120
object and right there in the channel

2:47:03.760,2:47:07.680
list as well

2:47:05.120,2:47:10.080
now let's save it and check it out

2:47:07.680,2:47:12.000
and as you can see the cardiology we

2:47:10.080,2:47:14.399
previously created that was the demo

2:47:12.000,2:47:15.920
chat and the doctors meeting channels

2:47:14.399,2:47:17.840
are now here

2:47:15.920,2:47:19.760
we cannot yet switch between those but

2:47:17.840,2:47:22.240
we're going to implement that soon but

2:47:19.760,2:47:24.080
for now we are at least seeing them on

2:47:22.240,2:47:26.240
the left side

2:47:24.080,2:47:28.399
we don't yet have any direct messages

2:47:26.240,2:47:30.880
but let's try to create some let's try

2:47:28.399,2:47:34.479
to invite javascript mastery create

2:47:30.880,2:47:37.279
message group and let's say hello

2:47:34.479,2:47:39.520
there we go something happened but it

2:47:37.279,2:47:41.040
doesn't look like a real direct message

2:47:39.520,2:47:43.040
yet we'll have to look into this

2:47:41.040,2:47:44.960
component and see if we've created

2:47:43.040,2:47:47.680
everything correctly for the direct

2:47:44.960,2:47:49.520
message output with that said let's

2:47:47.680,2:47:52.080
finish the left side with the mobile

2:47:49.520,2:47:53.920
toggle for the responsive view

2:47:52.080,2:47:55.760
so we can do that considering that we

2:47:53.920,2:47:58.479
are now passing this set toggle

2:47:55.760,2:48:00.880
container variable to the channel list

2:47:58.479,2:48:02.800
so if we scroll a bit up you'll see that

2:48:00.880,2:48:05.680
there is our channel list content and

2:48:02.800,2:48:07.680
then in there we can simply get the set

2:48:05.680,2:48:10.479
toggle container

2:48:07.680,2:48:13.279
now we can pass that variable deeper

2:48:10.479,2:48:15.040
into the theme channel list right here

2:48:13.279,2:48:17.520
and we need to pass it in a few more

2:48:15.040,2:48:20.000
places like into the theme channel

2:48:17.520,2:48:22.240
preview and we have to copy the same

2:48:20.000,2:48:24.720
procedure right here as well for the

2:48:22.240,2:48:26.800
team channel list and team channel

2:48:24.720,2:48:28.479
preview down below

2:48:26.800,2:48:30.240
now that we are passing those values to

2:48:28.479,2:48:32.080
the team channel list and the theme

2:48:30.240,2:48:34.479
channel preview let's see where we have

2:48:32.080,2:48:37.200
to pass them to make it work

2:48:34.479,2:48:39.680
so right here at the top we can get one

2:48:37.200,2:48:42.080
more prop which is going to be called

2:48:39.680,2:48:43.760
set toggle container

2:48:42.080,2:48:45.920
now that we're passing the set toggle

2:48:43.760,2:48:48.240
container we can go inside of the theme

2:48:45.920,2:48:50.160
channel list and team channel preview to

2:48:48.240,2:48:52.399
see where we need to use them

2:48:50.160,2:48:54.080
first of all we can accept them here as

2:48:52.399,2:48:56.800
a prop at the top

2:48:54.080,2:48:59.520
and then right here we can pass it over

2:48:56.800,2:49:02.160
to the add channel by simply doing set

2:48:59.520,2:49:03.600
toggle container is equal to set toggle

2:49:02.160,2:49:05.520
container

2:49:03.600,2:49:08.560
now if we go back to the channel list

2:49:05.520,2:49:11.840
container we can go to the preview

2:49:08.560,2:49:13.040
theme channel preview we are passing it

2:49:11.840,2:49:15.439
going there

2:49:13.040,2:49:18.319
we can also get it right here from the

2:49:15.439,2:49:20.160
props and in this case we'll have to do

2:49:18.319,2:49:22.319
something on click

2:49:20.160,2:49:25.040
and as you can see this is another

2:49:22.319,2:49:27.279
feature we are yet to implement

2:49:25.040,2:49:29.920
clicking on a specific channel to open

2:49:27.279,2:49:32.000
the messages for that channel so while

2:49:29.920,2:49:34.720
we're here let's make that work right

2:49:32.000,2:49:36.800
away to make that work we also have to

2:49:34.720,2:49:38.399
make use of all of the other props we

2:49:36.800,2:49:42.000
are passing into this

2:49:38.399,2:49:43.840
and right now we are not passing any so

2:49:42.000,2:49:45.680
what do we need to pass well that is

2:49:43.840,2:49:46.479
going to be the same once we're passing

2:49:45.680,2:49:50.319
here

2:49:46.479,2:49:52.160
set is creating set is editing and

2:49:50.319,2:49:55.840
that's going to be it so i'm going to

2:49:52.160,2:49:56.960
copy these two and simply paste them

2:49:55.840,2:50:00.479
here

2:49:56.960,2:50:02.240
set is creating and set is editing

2:50:00.479,2:50:03.359
now we can go back to the team channel

2:50:02.240,2:50:06.319
preview

2:50:03.359,2:50:10.080
get the set is creating

2:50:06.319,2:50:12.319
and also set is editing

2:50:10.080,2:50:15.840
and finally we can use those value to

2:50:12.319,2:50:18.960
preview a channel so we need to call set

2:50:15.840,2:50:20.560
is creating and set that to false

2:50:18.960,2:50:22.560
because we are no longer creating a

2:50:20.560,2:50:24.160
channel we want to see the messages for

2:50:22.560,2:50:26.399
a specific channel

2:50:24.160,2:50:28.240
then if we're currently editing we don't

2:50:26.399,2:50:30.640
want to do that anymore we want to see a

2:50:28.240,2:50:33.359
specific channel and then finally we

2:50:30.640,2:50:36.640
want to see if the set toggle container

2:50:33.359,2:50:39.520
exists so set toggle container and if it

2:50:36.640,2:50:42.000
does we want to call it as a function

2:50:39.520,2:50:45.200
set toggle container

2:50:42.000,2:50:46.560
remember we are going to get a previous

2:50:45.200,2:50:48.800
state

2:50:46.560,2:50:50.960
and we can simply do

2:50:48.800,2:50:53.200
not previous state

2:50:50.960,2:50:55.520
so we are doing this if because on our

2:50:53.200,2:50:58.240
desktop devices we won't have this set

2:50:55.520,2:51:00.640
toggle container but on mobile we will

2:50:58.240,2:51:03.359
so we want to toggle it on and off and

2:51:00.640,2:51:05.359
then finally we have to set the active

2:51:03.359,2:51:07.680
channel and we can get the value for

2:51:05.359,2:51:10.640
that right here from the props

2:51:07.680,2:51:12.560
set active channel

2:51:10.640,2:51:13.439
and we simply need to call it right

2:51:12.560,2:51:14.240
there

2:51:13.439,2:51:15.359
set

2:51:14.240,2:51:18.560
active

2:51:15.359,2:51:19.840
channel and we pass in the channel

2:51:18.560,2:51:21.680
variable

2:51:19.840,2:51:23.840
this should allow us to switch between

2:51:21.680,2:51:25.680
the channels before we go ahead and

2:51:23.840,2:51:27.840
check it out let's first go to the

2:51:25.680,2:51:30.000
channel list container and make sure

2:51:27.840,2:51:32.560
that we have these props right there

2:51:30.000,2:51:34.000
also in the upper preview because they

2:51:32.560,2:51:36.880
should be the same

2:51:34.000,2:51:38.880
so right here i'm going to copy these

2:51:36.880,2:51:41.520
that's going to be set is creating set

2:51:38.880,2:51:44.000
is editing and set toggle container and

2:51:41.520,2:51:45.040
paste them right here these have to be

2:51:44.000,2:51:46.800
the same

2:51:45.040,2:51:48.080
now let's save it and take a look in the

2:51:46.800,2:51:49.680
browser

2:51:48.080,2:51:51.920
now we're currently on the direct

2:51:49.680,2:51:54.479
message to javascript mastery but if i

2:51:51.920,2:51:57.840
switch to cardiology you can see we

2:51:54.479,2:52:00.080
successfully switched to another channel

2:51:57.840,2:52:02.000
we can also go to the doctor's meeting

2:52:00.080,2:52:03.760
and damn is it nice to see how

2:52:02.000,2:52:06.319
everything is working well we have

2:52:03.760,2:52:08.800
doctors meeting cardiology and then we

2:52:06.319,2:52:12.000
have direct messages

2:52:08.800,2:52:14.319
now that we can create new channels also

2:52:12.000,2:52:15.600
create new messages and switch between

2:52:14.319,2:52:16.880
the channels

2:52:15.600,2:52:19.439
let's see what's happening with the

2:52:16.880,2:52:21.520
styles of our direct messages and then

2:52:19.439,2:52:24.000
we're going to implement the edit

2:52:21.520,2:52:26.399
channel functionality it won't be that

2:52:24.000,2:52:29.439
hard as you can see most of the logic

2:52:26.399,2:52:31.359
for everything has already been done so

2:52:29.439,2:52:33.760
let's keep it going

2:52:31.359,2:52:36.560
to figure out what's happening with our

2:52:33.760,2:52:38.319
direct channel preview we can go into

2:52:36.560,2:52:40.399
team channel preview

2:52:38.319,2:52:42.640
and then right in here this is the

2:52:40.399,2:52:45.439
channel preview for the channels and

2:52:42.640,2:52:47.920
this is the preview for direct messages

2:52:45.439,2:52:50.080
so in here we're looping over the

2:52:47.920,2:52:52.640
members and then we're showing the image

2:52:50.080,2:52:54.240
and the full name for the member but for

2:52:52.640,2:52:55.439
some reason this is not getting

2:52:54.240,2:52:58.319
displayed

2:52:55.439,2:52:59.439
so let's simply console.log

2:52:58.319,2:53:02.080
members

2:52:59.439,2:53:03.120
0 right here so that's going to be

2:53:02.080,2:53:06.560
members

2:53:03.120,2:53:08.880
0. let's see how our user looks like

2:53:06.560,2:53:11.920
so if we open up the console we can

2:53:08.880,2:53:13.359
inspect and right here we can have two

2:53:11.920,2:53:15.439
different objects

2:53:13.359,2:53:17.520
and this is going to be the javascript

2:53:15.439,2:53:19.359
mastery user

2:53:17.520,2:53:21.920
javascript mastery is going to be the

2:53:19.359,2:53:24.240
only account ever on this platform that

2:53:21.920,2:53:26.080
we haven't created ourselves all the

2:53:24.240,2:53:28.880
other accounts are going to be created

2:53:26.080,2:53:31.840
using the sign up and the sign in form

2:53:28.880,2:53:35.040
but this is the default stream account

2:53:31.840,2:53:37.520
and unfortunately this one doesn't have

2:53:35.040,2:53:40.240
the full name property

2:53:37.520,2:53:42.240
so what we can do to fix this is we can

2:53:40.240,2:53:43.920
simply right here

2:53:42.240,2:53:45.120
say or

2:53:43.920,2:53:46.080
members

2:53:45.120,2:53:48.640
0

2:53:46.080,2:53:52.000
and then we can use the id so that's

2:53:48.640,2:53:54.160
going to be question mark dot user

2:53:52.000,2:53:57.279
question mark dot and that's going to be

2:53:54.160,2:53:58.560
id so we either show the full name or we

2:53:57.279,2:54:01.040
show the id

2:53:58.560,2:54:02.960
and if we go back take a look at that we

2:54:01.040,2:54:04.640
have a little j thing there and

2:54:02.960,2:54:06.880
javascript mastery

2:54:04.640,2:54:08.560
but now let's actually test this out

2:54:06.880,2:54:10.479
with a real user

2:54:08.560,2:54:13.439
of course right now we're logged in as

2:54:10.479,2:54:16.160
dr smith but we need another user to be

2:54:13.439,2:54:18.560
able to chat with him so let's log out

2:54:16.160,2:54:20.479
and create one more account

2:54:18.560,2:54:21.920
i'm going to close this

2:54:20.479,2:54:23.840
click log out

2:54:21.920,2:54:24.880
and right now let's create another

2:54:23.840,2:54:26.960
doctor

2:54:24.880,2:54:28.640
let's do something like dr

2:54:26.960,2:54:30.479
miller

2:54:28.640,2:54:33.200
dr miller as well

2:54:30.479,2:54:36.000
phone number is not important for now

2:54:33.200,2:54:38.160
we can enter the same avatar url and the

2:54:36.000,2:54:39.600
password can be something simple let's

2:54:38.160,2:54:42.720
click sign up

2:54:39.600,2:54:45.120
as you can see there are no channels yet

2:54:42.720,2:54:47.439
but let's create a direct message with

2:54:45.120,2:54:48.720
dr smith i'm going to click create

2:54:47.439,2:54:52.399
message group

2:54:48.720,2:54:54.800
and there we go we only have an id

2:54:52.399,2:54:55.920
unfortunately there doesn't seem to be a

2:54:54.800,2:54:58.160
full name

2:54:55.920,2:54:59.920
so let's open up the stream dashboard

2:54:58.160,2:55:03.359
and see what's happening

2:54:59.920,2:55:06.240
if you go to the dashboard.get

2:55:03.359,2:55:09.279
you are going to be on your app overview

2:55:06.240,2:55:11.680
but we can go to the app explorer

2:55:09.279,2:55:12.880
right here you should be able to see all

2:55:11.680,2:55:14.720
the users

2:55:12.880,2:55:17.200
and let's check it out

2:55:14.720,2:55:20.319
there is our dr miller

2:55:17.200,2:55:23.439
looks like that he has his username here

2:55:20.319,2:55:24.960
and here's our dr smith the full name is

2:55:23.439,2:55:27.120
there as well

2:55:24.960,2:55:29.279
but let me show you something

2:55:27.120,2:55:33.439
once we actually log out

2:55:29.279,2:55:34.640
and try to log in one more time as dr

2:55:33.439,2:55:37.600
miller

2:55:34.640,2:55:38.640
and then i'm going to enter the password

2:55:37.600,2:55:40.960
log in

2:55:38.640,2:55:44.399
as you can see nothing is there same

2:55:40.960,2:55:47.680
thing as before but now if i go here

2:55:44.399,2:55:49.920
and i visit dr miller the full name is

2:55:47.680,2:55:52.080
actually going to be empty

2:55:49.920,2:55:54.240
why was this string cleared

2:55:52.080,2:55:56.000
well let's check it out so what's

2:55:54.240,2:55:58.399
happening is that we have a small

2:55:56.000,2:56:00.960
mistake in the auth component when we

2:55:58.399,2:56:04.880
log in we're filling in these values the

2:56:00.960,2:56:06.720
username full name user id and token

2:56:04.880,2:56:09.279
but think about it if the user is

2:56:06.720,2:56:11.840
logging in he won't have to type in his

2:56:09.279,2:56:13.439
full name therefore it's going to remain

2:56:11.840,2:56:16.319
as an empty string

2:56:13.439,2:56:18.880
so instead of getting the full name here

2:56:16.319,2:56:20.399
what we can do is just get it from the

2:56:18.880,2:56:21.520
data that's returned back from the

2:56:20.399,2:56:24.240
database

2:56:21.520,2:56:26.319
so here we can get the full name but

2:56:24.240,2:56:28.880
then on the sign up when we're sending

2:56:26.319,2:56:31.439
the data to the database here it has to

2:56:28.880,2:56:34.160
be form dot full

2:56:31.439,2:56:37.359
name so this is the data from our input

2:56:34.160,2:56:39.359
only on the sign up great that part is

2:56:37.359,2:56:42.080
now fixed so let's try to create a new

2:56:39.359,2:56:45.279
user and test it out i'm going to log

2:56:42.080,2:56:46.479
out let's try to sign up as dr

2:56:45.279,2:56:49.200
james

2:56:46.479,2:56:52.319
that's going to be dr james

2:56:49.200,2:56:54.399
we can use the same avatar and password

2:56:52.319,2:56:56.880
and i'm just going gonna click sign up

2:56:54.399,2:56:59.439
now that the dr james was created and we

2:56:56.880,2:57:01.920
sent a message to dr smith let's try to

2:56:59.439,2:57:03.359
log in as dr smith and see if the issue

2:57:01.920,2:57:06.560
has been resolved

2:57:03.359,2:57:10.080
so i'm going to log out and sign in as

2:57:06.560,2:57:12.640
dr smith there we go our issue was fixed

2:57:10.080,2:57:14.880
because we can now see dr james right

2:57:12.640,2:57:18.640
there to test it out properly let's log

2:57:14.880,2:57:21.279
out one more time and log in as dr james

2:57:18.640,2:57:24.479
so that's going to be dr james

2:57:21.279,2:57:27.200
and there we go now we can see dr smith

2:57:24.479,2:57:28.319
once again that's great i'm going to log

2:57:27.200,2:57:30.479
out

2:57:28.319,2:57:32.399
and finally one more time bear with me

2:57:30.479,2:57:34.479
to test this out properly we're going to

2:57:32.399,2:57:36.960
log in as dr

2:57:34.479,2:57:38.560
smith and then i'll see how it looks

2:57:36.960,2:57:41.359
like

2:57:38.560,2:57:43.520
there we go dr james is still there we

2:57:41.359,2:57:45.200
can ignore this person right there or as

2:57:43.520,2:57:47.600
a matter of fact i'm going to delete

2:57:45.200,2:57:50.240
everybody who's not dr smith and dr

2:57:47.600,2:57:53.200
james because we had an issue that

2:57:50.240,2:57:55.439
caused their data to be corrupted so i'm

2:57:53.200,2:57:58.000
going to hard delete this user right

2:57:55.439,2:58:00.319
there and from now on we shouldn't have

2:57:58.000,2:58:02.319
absolutely any problems

2:58:00.319,2:58:04.880
while we're there let's also delete all

2:58:02.319,2:58:07.279
of the channels that we have

2:58:04.880,2:58:09.600
i've deleted all of the channels besides

2:58:07.279,2:58:11.439
the ones that have proper names so now

2:58:09.600,2:58:13.600
if we go here you can see that we can

2:58:11.439,2:58:15.760
switch between the channels and let's

2:58:13.600,2:58:19.040
try out the direct messages

2:58:15.760,2:58:20.640
i can try to message dr james and say

2:58:19.040,2:58:24.000
something like hello

2:58:20.640,2:58:26.560
and there we go dr smith said hello to

2:58:24.000,2:58:29.120
dr james that's great

2:58:26.560,2:58:31.840
that means that our direct messages our

2:58:29.120,2:58:34.479
channels switching between the channels

2:58:31.840,2:58:36.720
everything seems to be working great

2:58:34.479,2:58:39.439
one thing that we still have to do is

2:58:36.720,2:58:41.840
fix the edit channel functionality so if

2:58:39.439,2:58:44.560
we want to go to cardiology and add a

2:58:41.840,2:58:47.200
new user we need to be able to do that

2:58:44.560,2:58:49.120
right now our edit channel is empty

2:58:47.200,2:58:51.120
so let's do that and then we're getting

2:58:49.120,2:58:54.800
close to the end where we're going to

2:58:51.120,2:58:56.720
implement sms notifications using twilio

2:58:54.800,2:58:58.960
so let's keep it going

2:58:56.720,2:59:01.279
let's close all of our files and folders

2:58:58.960,2:59:04.720
to have a clean working environment and

2:59:01.279,2:59:07.200
let's go to client source components and

2:59:04.720,2:59:09.040
then finally edit channel

2:59:07.200,2:59:10.800
this is the component we need to focus

2:59:09.040,2:59:12.479
on right now

2:59:10.800,2:59:16.479
inside of the edit channel we're going

2:59:12.479,2:59:20.080
to import react as well as the use state

2:59:16.479,2:59:23.520
then we're also going to import the use

2:59:20.080,2:59:25.520
chat context that is coming from stream

2:59:23.520,2:59:27.279
chat react

2:59:25.520,2:59:29.200
we are also going to need one more

2:59:27.279,2:59:31.760
component and it's the one we already

2:59:29.200,2:59:32.640
coded out it is going to be the user

2:59:31.760,2:59:35.680
list

2:59:32.640,2:59:37.359
remember we use the user list to create

2:59:35.680,2:59:39.840
a new channel

2:59:37.359,2:59:41.279
and we'll say from that's going to be

2:59:39.840,2:59:43.439
dot slash

2:59:41.279,2:59:45.200
and finally we're going to need one more

2:59:43.439,2:59:46.080
thing from the assets and that's going

2:59:45.200,2:59:49.200
to be

2:59:46.080,2:59:50.399
close create channel that's going to be

2:59:49.200,2:59:53.120
coming from

2:59:50.399,2:59:54.560
dot slash assets

2:59:53.120,2:59:57.200
the first thing we're going to add in

2:59:54.560,2:59:59.840
here is going to be a channel name input

2:59:57.200,3:00:02.399
component and if you remember correctly

2:59:59.840,3:00:04.800
we already created something like that

3:00:02.399,3:00:07.920
so we can go to create channel component

3:00:04.800,3:00:10.960
and simply copy the channel name input

3:00:07.920,3:00:14.080
go back to edit and paste it at the top

3:00:10.960,3:00:16.479
we are going to reuse this component

3:00:14.080,3:00:17.359
now let's start with working on the edit

3:00:16.479,3:00:20.000
channel

3:00:17.359,3:00:22.479
our edit channel is going to have a div

3:00:20.000,3:00:26.160
that's going to have the class name

3:00:22.479,3:00:28.080
equal to edit dash channel underscore

3:00:26.160,3:00:30.399
underscore container

3:00:28.080,3:00:31.760
and inside of there we are going to have

3:00:30.399,3:00:34.319
one more div

3:00:31.760,3:00:35.680
and this div is going to have a

3:00:34.319,3:00:39.359
class name

3:00:35.680,3:00:41.200
equal to edit dash channel underscore

3:00:39.359,3:00:43.120
underscore header

3:00:41.200,3:00:45.680
inside of that div we can put a

3:00:43.120,3:00:48.479
paragraph so let's put a p tag

3:00:45.680,3:00:49.680
and we can simply say edit

3:00:48.479,3:00:52.160
channel

3:00:49.680,3:00:55.520
now let's also put a close icon so we

3:00:52.160,3:00:58.399
can say close create channel icon

3:00:55.520,3:01:01.680
and in there we have to pass the set is

3:00:58.399,3:01:04.319
editing prop as set is editing

3:01:01.680,3:01:06.399
this prop we are receiving from the

3:01:04.319,3:01:09.680
props at the top so we can simply

3:01:06.399,3:01:12.399
destructure it from the props right here

3:01:09.680,3:01:14.479
now below this div we are going to call

3:01:12.399,3:01:16.800
the component we created above which is

3:01:14.479,3:01:19.359
the channel name input

3:01:16.800,3:01:21.359
so that's going to be channel name input

3:01:19.359,3:01:24.560
a self-closing component

3:01:21.359,3:01:26.960
and we have to pass in the channel name

3:01:24.560,3:01:29.439
as channel name

3:01:26.960,3:01:30.880
and we also have to pass the set channel

3:01:29.439,3:01:33.040
name

3:01:30.880,3:01:35.200
as set channel name

3:01:33.040,3:01:37.359
so you might be wondering where are we

3:01:35.200,3:01:39.279
getting these values from

3:01:37.359,3:01:42.479
well we can get the channel name from

3:01:39.279,3:01:43.840
the chat context so we can say cons in

3:01:42.479,3:01:44.880
curly braces

3:01:43.840,3:01:47.920
channel

3:01:44.880,3:01:49.439
and that's going to be equal to use chat

3:01:47.920,3:01:51.760
context

3:01:49.439,3:01:54.880
then for the channel name or set channel

3:01:51.760,3:01:57.920
name we can create a use state field

3:01:54.880,3:01:58.880
so right here we can say use state

3:01:57.920,3:02:02.160
channel

3:01:58.880,3:02:05.760
name also set channel name and the

3:02:02.160,3:02:06.800
default value is going to be equal to

3:02:05.760,3:02:09.040
channel

3:02:06.800,3:02:10.560
question mark dot data

3:02:09.040,3:02:12.880
question mark dot

3:02:10.560,3:02:14.640
name so if there is already a channel

3:02:12.880,3:02:16.399
name we'll try to get it from the

3:02:14.640,3:02:18.160
channel i've noticed that i've

3:02:16.399,3:02:20.560
misspelled the name here that's going to

3:02:18.160,3:02:23.359
be channel name and now we have both the

3:02:20.560,3:02:25.359
channel name and the set channel name

3:02:23.359,3:02:28.160
the last thing we have to do is render

3:02:25.359,3:02:29.600
out the user list so right here we can

3:02:28.160,3:02:30.800
say user

3:02:29.600,3:02:33.040
list

3:02:30.800,3:02:35.520
it is a self-closing component and in

3:02:33.040,3:02:39.600
there we can simply pass set selected

3:02:35.520,3:02:41.680
users is equal to set selected users

3:02:39.600,3:02:44.000
and again selected users and the set

3:02:41.680,3:02:46.560
selected users are state fields which we

3:02:44.000,3:02:48.880
don't have already so let's create a new

3:02:46.560,3:02:51.040
use state field and we're going to

3:02:48.880,3:02:54.240
create our selected

3:02:51.040,3:02:56.840
users and also set selected users with

3:02:54.240,3:02:59.680
the default value equal to an empty

3:02:56.840,3:03:02.560
array great now we have the header

3:02:59.680,3:03:04.399
channel name input and the user list

3:03:02.560,3:03:07.040
let's just add a button to save the

3:03:04.399,3:03:09.840
changes and we are almost done

3:03:07.040,3:03:11.200
so it's going to be a div with a class

3:03:09.840,3:03:14.800
name

3:03:11.200,3:03:16.240
equal to edit dash channel underscore

3:03:14.800,3:03:18.240
underscore button

3:03:16.240,3:03:20.880
dash wrapper

3:03:18.240,3:03:23.200
and inside of there we can simply say

3:03:20.880,3:03:24.000
something like ap tag that's going to

3:03:23.200,3:03:24.960
say

3:03:24.000,3:03:27.600
save

3:03:24.960,3:03:28.800
changes let's save it and see how does

3:03:27.600,3:03:31.120
it look like

3:03:28.800,3:03:33.200
if we go back you can see this looks

3:03:31.120,3:03:34.960
similar to what we had with the creation

3:03:33.200,3:03:37.520
of the channels because we are using

3:03:34.960,3:03:39.680
most of the same components so now if we

3:03:37.520,3:03:42.399
switched to the doctor's meeting you can

3:03:39.680,3:03:44.160
see we can invite new users

3:03:42.399,3:03:45.920
direct messages don't have the added

3:03:44.160,3:03:48.160
channel because they are not channels

3:03:45.920,3:03:50.319
but cardiology and doctors meeting have

3:03:48.160,3:03:51.920
them and we can invite new users or

3:03:50.319,3:03:54.080
simply change the name

3:03:51.920,3:03:56.080
great finally the button doesn't do

3:03:54.080,3:03:57.760
anything yet so let's go ahead and

3:03:56.080,3:04:00.240
create a function that's going to save

3:03:57.760,3:04:03.040
the changes we are going to add the on

3:04:00.240,3:04:06.080
click on this button or a div and on

3:04:03.040,3:04:09.359
click we simply want to call the update

3:04:06.080,3:04:10.479
channel function we can declare it right

3:04:09.359,3:04:11.520
here

3:04:10.479,3:04:12.720
const

3:04:11.520,3:04:14.080
update

3:04:12.720,3:04:16.240
channel

3:04:14.080,3:04:17.120
and that is going to be an async

3:04:16.240,3:04:18.960
function

3:04:17.120,3:04:19.840
inside of there we are going to get the

3:04:18.960,3:04:23.040
event

3:04:19.840,3:04:25.600
and as always let's call the event dot

3:04:23.040,3:04:27.920
prevent default

3:04:25.600,3:04:32.080
now let's see if the user has changed

3:04:27.920,3:04:34.560
the name we can say const name changed

3:04:32.080,3:04:35.359
and that's going to be equal to

3:04:34.560,3:04:36.560
if

3:04:35.359,3:04:39.600
channel

3:04:36.560,3:04:41.120
name is not equal to

3:04:39.600,3:04:44.240
in parentheses

3:04:41.120,3:04:48.399
channel dot data dot name

3:04:44.240,3:04:50.399
or channel dot data dot id

3:04:48.399,3:04:51.439
that means that the name has been

3:04:50.399,3:04:52.960
changed

3:04:51.439,3:04:56.000
so if

3:04:52.960,3:04:58.640
name has been changed inside of the if

3:04:56.000,3:05:00.880
we can simply say await

3:04:58.640,3:05:02.800
channel dot update

3:05:00.880,3:05:05.120
and then inside of there we can pass an

3:05:02.800,3:05:07.040
object with what we want to update

3:05:05.120,3:05:08.479
and the thing we want to update is going

3:05:07.040,3:05:09.359
to be the name

3:05:08.479,3:05:11.279
to

3:05:09.359,3:05:13.680
channel name

3:05:11.279,3:05:16.399
we can also set the text for the update

3:05:13.680,3:05:19.439
so in a new object as a second parameter

3:05:16.399,3:05:21.279
we're going to say text is equal to a

3:05:19.439,3:05:22.640
template string

3:05:21.279,3:05:23.520
channel

3:05:22.640,3:05:25.359
name

3:05:23.520,3:05:29.439
changed to

3:05:25.359,3:05:30.560
and then in here we can say simply

3:05:29.439,3:05:31.600
channel

3:05:30.560,3:05:32.720
name

3:05:31.600,3:05:35.760
great

3:05:32.720,3:05:38.640
finally if the name hasn't changed but

3:05:35.760,3:05:40.960
if the number of users has changed so if

3:05:38.640,3:05:43.120
selected user is that length meaning if

3:05:40.960,3:05:46.800
we added some new users

3:05:43.120,3:05:48.399
in that case we want to await channel

3:05:46.800,3:05:49.439
dot add

3:05:48.399,3:05:53.200
members

3:05:49.439,3:05:54.800
and simply pass in the selected

3:05:53.200,3:05:57.040
users

3:05:54.800,3:06:00.080
that is going to be it

3:05:57.040,3:06:01.200
and once we're done we have to set

3:06:00.080,3:06:02.160
channel

3:06:01.200,3:06:05.840
name

3:06:02.160,3:06:06.880
back to now we also have to set is

3:06:05.840,3:06:08.560
editing

3:06:06.880,3:06:11.600
back to false because we're done with

3:06:08.560,3:06:15.520
the editing and finally we have to set

3:06:11.600,3:06:16.560
selected users to be equal to an empty

3:06:15.520,3:06:18.640
array

3:06:16.560,3:06:21.200
and with that we are done with the edit

3:06:18.640,3:06:23.120
functionality let's go ahead and try it

3:06:21.200,3:06:25.600
out let's try to go to the doctor's

3:06:23.120,3:06:28.240
meeting and let's try to change it to

3:06:25.600,3:06:31.279
something like emergency

3:06:28.240,3:06:33.760
and i'll also try to add dr james i'm

3:06:31.279,3:06:36.800
gonna click save changes

3:06:33.760,3:06:40.319
and there we go channel name change to

3:06:36.800,3:06:41.200
emergency at friday at 6 pm

3:06:40.319,3:06:43.279
great

3:06:41.200,3:06:44.399
that means that this part works

3:06:43.279,3:06:46.800
perfectly

3:06:44.399,3:06:49.279
as you can see our application is

3:06:46.800,3:06:52.800
getting better and better and it seems

3:06:49.279,3:06:54.720
like we have a fully working chat by now

3:06:52.800,3:06:56.080
i know this was a long video so if

3:06:54.720,3:06:58.000
you're still here and watching

3:06:56.080,3:06:59.920
definitely make sure to leave a like and

3:06:58.000,3:07:01.920
comment down below

3:06:59.920,3:07:04.720
with that said let's check if our search

3:07:01.920,3:07:05.760
is working so i'll try to search for dr

3:07:04.720,3:07:08.080
james

3:07:05.760,3:07:10.319
but unfortunately nothing seems to be

3:07:08.080,3:07:11.920
coming up let's see what's happening

3:07:10.319,3:07:14.080
with our search

3:07:11.920,3:07:16.240
we can look into our search by going to

3:07:14.080,3:07:18.800
the channel search component

3:07:16.240,3:07:22.319
and would you look at that we even left

3:07:18.800,3:07:24.720
ourselves a to do right inside of here

3:07:22.319,3:07:25.600
so in the channel search let's make it

3:07:24.720,3:07:27.680
work

3:07:25.600,3:07:30.000
what we have to do is we have to use

3:07:27.680,3:07:32.640
this chat context to get the information

3:07:30.000,3:07:34.479
about the active channel so right there

3:07:32.640,3:07:36.800
we can say const

3:07:34.479,3:07:39.200
and then the structure the values client

3:07:36.800,3:07:40.160
and also set

3:07:39.200,3:07:41.200
active

3:07:40.160,3:07:44.399
channel

3:07:41.200,3:07:46.240
and this is coming from equal to use

3:07:44.399,3:07:47.200
chat context

3:07:46.240,3:07:49.680
great

3:07:47.200,3:07:51.680
we also have the query and the loading

3:07:49.680,3:07:53.680
but we're going to add a few more use

3:07:51.680,3:07:57.439
states that we're going to need

3:07:53.680,3:08:00.399
for example i'm going to write use state

3:07:57.439,3:08:02.240
and we are going to need team channels

3:08:00.399,3:08:04.720
we need to know which are the currently

3:08:02.240,3:08:07.120
active team channels and at the start

3:08:04.720,3:08:09.200
that's going to be set to an empty array

3:08:07.120,3:08:12.160
then i'm going to duplicate that and

3:08:09.200,3:08:14.240
then we're also going to add direct

3:08:12.160,3:08:16.960
channels and set

3:08:14.240,3:08:19.359
direct channels we need to know which

3:08:16.960,3:08:21.520
are the currently active direct channels

3:08:19.359,3:08:22.880
also at the start equal to an empty

3:08:21.520,3:08:24.720
array

3:08:22.880,3:08:26.640
now that we have all of these used state

3:08:24.720,3:08:29.760
fields let's make our get channels

3:08:26.640,3:08:32.479
function work so inside of the try block

3:08:29.760,3:08:36.240
let's query our channels we can do that

3:08:32.479,3:08:38.560
by saying const channel response

3:08:36.240,3:08:41.359
is going to be equal to

3:08:38.560,3:08:42.399
client dot query

3:08:41.359,3:08:44.399
channels

3:08:42.399,3:08:46.080
and then inside of there we need to pass

3:08:44.399,3:08:48.240
some options

3:08:46.080,3:08:50.640
the first thing we have to specify is

3:08:48.240,3:08:52.000
the type which is going to be equal to

3:08:50.640,3:08:54.560
team

3:08:52.000,3:08:57.439
then just next to that we can specify a

3:08:54.560,3:08:58.800
name which has to be equal to

3:08:57.439,3:09:02.479
dollar sign

3:08:58.800,3:09:05.520
auto complete is equal to text so we

3:09:02.479,3:09:07.920
want to autocomplete all the usernames

3:09:05.520,3:09:10.479
and then finally the third thing next to

3:09:07.920,3:09:13.279
the name is going to be members

3:09:10.479,3:09:14.880
and for members we can say dollar sign

3:09:13.279,3:09:17.920
dollar in

3:09:14.880,3:09:20.000
is equal to an array where we have the

3:09:17.920,3:09:20.960
client dot

3:09:20.000,3:09:22.080
user

3:09:20.960,3:09:24.000
id

3:09:22.080,3:09:26.720
make sure that the user is lowercased

3:09:24.000,3:09:29.359
and the id all uppercased

3:09:26.720,3:09:32.239
let's space this in a few rows and this

3:09:29.359,3:09:33.279
is how it looks like query channels type

3:09:32.239,3:09:36.080
is theme

3:09:33.279,3:09:39.760
name is autocompletetext and members

3:09:36.080,3:09:42.560
includes our own user id

3:09:39.760,3:09:46.319
now let's also query the users we can do

3:09:42.560,3:09:48.239
that by saying const user response is

3:09:46.319,3:09:50.960
equal to client

3:09:48.239,3:09:53.840
dot query users

3:09:50.960,3:09:57.040
and it's the same situation we have an

3:09:53.840,3:10:01.040
object where we pass some information

3:09:57.040,3:10:02.800
so first we can say id is equal to

3:10:01.040,3:10:05.600
and then an object

3:10:02.800,3:10:07.200
and then dollar sign and e

3:10:05.600,3:10:10.319
this is going to make sure that we

3:10:07.200,3:10:12.880
exclude our current user id we don't

3:10:10.319,3:10:15.840
want to find ourselves on the search

3:10:12.880,3:10:18.080
but rather next to it we can say name is

3:10:15.840,3:10:20.319
equal to and we can copy this

3:10:18.080,3:10:22.239
autocomplete text so we want to get all

3:10:20.319,3:10:24.640
the other names

3:10:22.239,3:10:26.720
there we go now we have the user

3:10:24.640,3:10:28.640
response and we also have channel

3:10:26.720,3:10:30.880
response and let's see what we can do

3:10:28.640,3:10:32.960
with that we want to put that into a

3:10:30.880,3:10:35.040
promised at all because we want to start

3:10:32.960,3:10:37.840
fetching them at the same time

3:10:35.040,3:10:40.479
so what we can do is say const

3:10:37.840,3:10:41.920
and then square brackets inside of here

3:10:40.479,3:10:46.000
we are going to have

3:10:41.920,3:10:47.840
channels and also in curly braces users

3:10:46.000,3:10:50.239
so we want to get the channels and the

3:10:47.840,3:10:52.000
users at the same time and we can do

3:10:50.239,3:10:53.200
that by saying equal

3:10:52.000,3:10:54.560
await

3:10:53.200,3:10:56.160
promise

3:10:54.560,3:10:57.680
dot all

3:10:56.160,3:11:00.000
and then inside of there

3:10:57.680,3:11:02.239
inside of an array we want to get the

3:11:00.000,3:11:05.760
channel response

3:11:02.239,3:11:07.439
and also the user response

3:11:05.760,3:11:09.600
so this is an interesting way we did

3:11:07.439,3:11:11.200
this we could have just put the await in

3:11:09.600,3:11:13.200
front of this one

3:11:11.200,3:11:15.439
and in front of this one

3:11:13.200,3:11:17.439
but that way if we make a request we'll

3:11:15.439,3:11:19.680
have to wait for this one to be done and

3:11:17.439,3:11:20.720
then only start this one once this is

3:11:19.680,3:11:23.279
done

3:11:20.720,3:11:25.439
but this way we'll be starting both of

3:11:23.279,3:11:27.920
these requests at the same time they

3:11:25.439,3:11:30.000
will be happening simultaneously so

3:11:27.920,3:11:32.960
that's going to make it quicker

3:11:30.000,3:11:34.640
so finally let's see if we have any

3:11:32.960,3:11:36.399
channels that length

3:11:34.640,3:11:38.640
meaning if the channels exist

3:11:36.399,3:11:42.000
in that case we want to set team

3:11:38.640,3:11:44.239
channels to be equal to channels

3:11:42.000,3:11:47.040
we'll do a similar thing for the users

3:11:44.239,3:11:49.520
and say if user is that length then we

3:11:47.040,3:11:50.479
want to set direct channels equal to

3:11:49.520,3:11:52.560
users

3:11:50.479,3:11:55.520
if you think about it a direct channel

3:11:52.560,3:11:58.399
is nothing more than a user

3:11:55.520,3:12:00.479
great this is our get channels function

3:11:58.399,3:12:03.279
completely done

3:12:00.479,3:12:05.520
finally we have to make use of it so

3:12:03.279,3:12:08.000
just below this input we are going to

3:12:05.520,3:12:10.319
create last component of our entire

3:12:08.000,3:12:13.760
project at least i think so

3:12:10.319,3:12:15.120
so right here we want to open a dynamic

3:12:13.760,3:12:18.000
code block

3:12:15.120,3:12:19.120
and we want to specify if the query

3:12:18.000,3:12:21.439
exists

3:12:19.120,3:12:22.720
so if the query exists meaning our

3:12:21.439,3:12:25.279
search term

3:12:22.720,3:12:27.840
in that case we want to do

3:12:25.279,3:12:31.680
something like this we want to render a

3:12:27.840,3:12:33.279
component called results drop down a

3:12:31.680,3:12:35.600
drop down that's going to contain the

3:12:33.279,3:12:38.239
information about all the channels and

3:12:35.600,3:12:40.319
users of course we'll have to pass a lot

3:12:38.239,3:12:43.439
of information into this component we

3:12:40.319,3:12:46.479
have to pass things like team channels

3:12:43.439,3:12:48.960
is equal to of course steam channels

3:12:46.479,3:12:50.399
then we have to do the same thing for

3:12:48.960,3:12:51.760
direct

3:12:50.399,3:12:54.319
channels

3:12:51.760,3:12:55.520
also we have to pass the loading

3:12:54.319,3:12:57.680
property

3:12:55.520,3:12:59.760
so that we know if we're loading

3:12:57.680,3:13:02.399
also the set

3:12:59.760,3:13:03.520
channel property equal to

3:13:02.399,3:13:04.560
set

3:13:03.520,3:13:07.840
channel

3:13:04.560,3:13:09.040
and also set query which is going to be

3:13:07.840,3:13:11.279
equal to

3:13:09.040,3:13:14.880
set query of course

3:13:11.279,3:13:18.319
and finally we'll also have to pass set

3:13:14.880,3:13:19.600
toggle container is equal to set toggle

3:13:18.319,3:13:21.760
container

3:13:19.600,3:13:24.000
now let's see which one of these we

3:13:21.760,3:13:27.439
don't have currently access to

3:13:24.000,3:13:29.520
and these are going to be set channel

3:13:27.439,3:13:31.600
set channel is going to be a function

3:13:29.520,3:13:34.000
that we can create right here

3:13:31.600,3:13:36.319
const set channel

3:13:34.000,3:13:37.359
is equal to a function that accepts a

3:13:36.319,3:13:40.160
channel

3:13:37.359,3:13:42.560
and in there we simply want to reset the

3:13:40.160,3:13:46.080
query so once we set the channel we want

3:13:42.560,3:13:47.279
to set the query to be equal to an empty

3:13:46.080,3:13:49.600
string

3:13:47.279,3:13:52.239
and then finally we also want to set the

3:13:49.600,3:13:53.520
active channel to be that specific

3:13:52.239,3:13:56.080
channel

3:13:53.520,3:13:57.760
now let's see where is the set toggle

3:13:56.080,3:13:59.840
container coming from

3:13:57.760,3:14:02.319
that should be coming from props so

3:13:59.840,3:14:04.479
let's see if we're passing that into our

3:14:02.319,3:14:06.319
channel search

3:14:04.479,3:14:08.560
let's check if we're passing that value

3:14:06.319,3:14:09.600
through props so i'm going to go to the

3:14:08.560,3:14:12.319
search

3:14:09.600,3:14:14.239
open the opening component bracket and

3:14:12.319,3:14:16.720
look for channel search

3:14:14.239,3:14:17.600
and it looks like we're not passing any

3:14:16.720,3:14:19.520
data

3:14:17.600,3:14:21.920
so let's scroll up

3:14:19.520,3:14:23.680
we have the set toggle container here

3:14:21.920,3:14:26.960
and we're simply going to pass it

3:14:23.680,3:14:29.359
through props right inside of there

3:14:26.960,3:14:31.920
now if we go back to the channel search

3:14:29.359,3:14:34.239
we can get that variable right inside of

3:14:31.920,3:14:36.000
here but make sure to put it in curly

3:14:34.239,3:14:38.800
braces so that it means that it's

3:14:36.000,3:14:39.680
destructured from props

3:14:38.800,3:14:42.080
great

3:14:39.680,3:14:44.399
that means that now we have almost

3:14:42.080,3:14:46.800
everything if not everything for our new

3:14:44.399,3:14:48.720
results drop down component

3:14:46.800,3:14:50.479
before we go ahead and code it out

3:14:48.720,3:14:52.720
there's one more thing we have to add

3:14:50.479,3:14:53.920
this file and that is going to be the

3:14:52.720,3:14:56.160
use effect

3:14:53.920,3:14:57.359
we can create that use effect right here

3:14:56.160,3:14:58.880
at the top

3:14:57.359,3:15:01.600
use effect

3:14:58.880,3:15:04.399
make sure to add a dependency array in

3:15:01.600,3:15:07.279
there so just at the end we need a

3:15:04.399,3:15:09.040
dependency array and we want to call the

3:15:07.279,3:15:10.239
function every time that the query

3:15:09.040,3:15:13.920
changes

3:15:10.239,3:15:17.040
so if the query changes and if there is

3:15:13.920,3:15:19.600
no query in that case we need to clear

3:15:17.040,3:15:22.479
the theme channels and direct channels

3:15:19.600,3:15:25.120
so what we can say is set theme channels

3:15:22.479,3:15:27.840
to be equal to an empty array and also

3:15:25.120,3:15:29.359
set direct channels to be an empty array

3:15:27.840,3:15:32.560
as well

3:15:29.359,3:15:34.880
great now we are ready to code out the

3:15:32.560,3:15:37.439
results drop down component

3:15:34.880,3:15:41.120
let's go ahead in the components folder

3:15:37.439,3:15:42.160
create a new file called results

3:15:41.120,3:15:43.920
drop down

3:15:42.160,3:15:46.800
dot jsx

3:15:43.920,3:15:48.880
and then in the index we can simply

3:15:46.800,3:15:50.560
use it right here

3:15:48.880,3:15:52.560
results

3:15:50.560,3:15:55.840
drop down

3:15:52.560,3:15:57.840
now let's go to our results drop down

3:15:55.840,3:16:00.000
the situation with our results drop down

3:15:57.840,3:16:02.000
is going to be incredibly similar to our

3:16:00.000,3:16:04.319
channel inner it's going to be a

3:16:02.000,3:16:05.920
component with a lot of code but not a

3:16:04.319,3:16:08.399
lot of useful stuff that we can learn

3:16:05.920,3:16:10.560
from so in this case it's going to be

3:16:08.399,3:16:12.319
linked down in the description alongside

3:16:10.560,3:16:14.880
all of the other files

3:16:12.319,3:16:16.960
find the results drop down and simply

3:16:14.880,3:16:18.800
copy and paste it here

3:16:16.960,3:16:21.279
as you can see the result drop-down

3:16:18.800,3:16:24.000
component accepts a lot of props

3:16:21.279,3:16:26.399
simply does the loading or no channels

3:16:24.000,3:16:28.080
and then finally it shows all of the

3:16:26.399,3:16:29.840
search results

3:16:28.080,3:16:33.120
it has to show them both for the theme

3:16:29.840,3:16:35.359
channels and also for direct channels

3:16:33.120,3:16:38.000
if we save the file go back to our

3:16:35.359,3:16:40.080
channel search we need to scroll up and

3:16:38.000,3:16:41.359
simply import results dropdown from the

3:16:40.080,3:16:43.520
components

3:16:41.359,3:16:44.640
so right above our assets we can say

3:16:43.520,3:16:47.600
import

3:16:44.640,3:16:49.279
that's going to be results

3:16:47.600,3:16:51.439
drop down

3:16:49.279,3:16:54.800
and that's going to be coming from

3:16:51.439,3:16:55.760
components so just dot slash

3:16:54.800,3:16:58.080
great

3:16:55.760,3:17:00.880
and finally let's check it out in the

3:16:58.080,3:17:03.680
browser there we are we have our

3:17:00.880,3:17:06.319
conversation with dr james emergency and

3:17:03.680,3:17:09.120
cardiology so if i go ahead and search

3:17:06.319,3:17:11.600
for doctor you can see that the dr james

3:17:09.120,3:17:13.760
appears immediately and if you search

3:17:11.600,3:17:16.479
for something like cardiology you can

3:17:13.760,3:17:19.120
see that appears as well and also

3:17:16.479,3:17:22.239
emergency so everything that you search

3:17:19.120,3:17:23.760
for is going to appear here immediately

3:17:22.239,3:17:26.239
right now we don't have a lot of

3:17:23.760,3:17:28.560
channels but if we had more all of them

3:17:26.239,3:17:31.279
would be listed right here inside of the

3:17:28.560,3:17:34.960
search great we are done with the entire

3:17:31.279,3:17:36.800
authentication search channels messages

3:17:34.960,3:17:38.880
editing the channels and creating

3:17:36.800,3:17:40.800
channels adding users

3:17:38.880,3:17:43.279
reacting to messages

3:17:40.800,3:17:46.160
adding threats to messages sending

3:17:43.279,3:17:48.880
images gifs and anything you can think

3:17:46.160,3:17:51.600
of you can make this chat completely

3:17:48.880,3:17:54.479
your own but as you know on javascript

3:17:51.600,3:17:57.359
mastery we always like to take it even

3:17:54.479,3:18:00.319
one step further we are going to connect

3:17:57.359,3:18:01.840
twilio notifications so that if a user

3:18:00.319,3:18:03.680
is not online

3:18:01.840,3:18:05.680
and he receives a message the

3:18:03.680,3:18:09.200
notification about a new message is

3:18:05.680,3:18:12.000
going to be sent straight to his phone

3:18:09.200,3:18:14.640
so let's do that right away

3:18:12.000,3:18:16.479
to send the sms notifications to the

3:18:14.640,3:18:18.640
people using our chat we'll have to

3:18:16.479,3:18:21.600
create an account with william

3:18:18.640,3:18:23.600
so to do that head to twilio.com link is

3:18:21.600,3:18:25.760
going to be down in the description and

3:18:23.600,3:18:27.600
make sure to click sign up

3:18:25.760,3:18:29.840
once you do that you can enter all of

3:18:27.600,3:18:31.120
your information and i'll see you in the

3:18:29.840,3:18:33.279
dashboard

3:18:31.120,3:18:35.760
once you sign up you'll have to verify

3:18:33.279,3:18:37.840
your email so let's go to our email and

3:18:35.760,3:18:39.840
quickly verify it

3:18:37.840,3:18:41.600
once you've verified your email in this

3:18:39.840,3:18:42.399
case we'll also have to verify your

3:18:41.600,3:18:44.560
phone

3:18:42.399,3:18:47.359
they accept all of the countries in the

3:18:44.560,3:18:48.880
world so yeah let's go ahead and type in

3:18:47.359,3:18:50.560
your phone number

3:18:48.880,3:18:52.080
once you've verified your phone number

3:18:50.560,3:18:54.640
as well you can fill in this little

3:18:52.080,3:18:58.319
questionnaire so in here we're going to

3:18:54.640,3:18:59.760
use sms and we plan to build alerts and

3:18:58.319,3:19:01.279
notifications

3:18:59.760,3:19:02.960
how do you want to build it well of

3:19:01.279,3:19:04.399
course with code

3:19:02.960,3:19:06.720
so what is your preferred coding

3:19:04.399,3:19:08.239
language that's going to be javascript

3:19:06.720,3:19:10.640
and would you like to be able to host

3:19:08.239,3:19:13.120
your code no in this case we are going

3:19:10.640,3:19:14.800
to host it ourselves so let's get

3:19:13.120,3:19:17.200
started with vilio

3:19:14.800,3:19:19.600
and there we go at the start you're

3:19:17.200,3:19:22.399
given 15 bucks for free so that you can

3:19:19.600,3:19:24.160
use for your email notifications

3:19:22.399,3:19:26.800
that means that you won't have to pay

3:19:24.160,3:19:29.520
absolutely anything to test this out

3:19:26.800,3:19:31.359
in here you have your account sid and

3:19:29.520,3:19:33.680
the odd token

3:19:31.359,3:19:35.840
so let's complete the steps below

3:19:33.680,3:19:38.319
first you'll have to get a twilio trial

3:19:35.840,3:19:40.720
phone number so let's click here

3:19:38.319,3:19:42.880
they gave us a random us number so let's

3:19:40.720,3:19:45.439
just click choose this number

3:19:42.880,3:19:47.600
there we go we can click done and now

3:19:45.439,3:19:51.120
that that is done we have our account

3:19:47.600,3:19:53.439
sid and also the auth token

3:19:51.120,3:19:57.279
so let's go to messaging and then

3:19:53.439,3:19:59.600
finally try it out and get set up

3:19:57.279,3:20:02.399
in here you can see get set up in five

3:19:59.600,3:20:04.239
minutes so let's click start setup

3:20:02.399,3:20:06.960
you have to enter your messaging service

3:20:04.239,3:20:08.800
name i'm gonna say just medical

3:20:06.960,3:20:11.040
pager

3:20:08.800,3:20:12.399
and finally in here you can enter your

3:20:11.040,3:20:15.439
phone number

3:20:12.399,3:20:18.160
choose your sid enter the text message

3:20:15.439,3:20:20.720
and in here you can see the code example

3:20:18.160,3:20:22.160
of how that message will be sent we

3:20:20.720,3:20:24.080
don't need to do that from their

3:20:22.160,3:20:26.319
interface because we are going to take

3:20:24.080,3:20:29.279
this code and do it straight from our

3:20:26.319,3:20:32.080
express application so let's go back to

3:20:29.279,3:20:34.880
our app and let's code it right away

3:20:32.080,3:20:36.640
to implement our sms messages we'll have

3:20:34.880,3:20:37.560
to go to server

3:20:36.640,3:20:39.359
and then

3:20:37.560,3:20:41.359
index.js

3:20:39.359,3:20:42.399
inside of here we'll have to import a

3:20:41.359,3:20:45.600
few things

3:20:42.399,3:20:47.279
so just below this require.env

3:20:45.600,3:20:49.600
we can say const

3:20:47.279,3:20:52.160
account sid

3:20:49.600,3:20:53.520
and we're going to get that from process

3:20:52.160,3:20:56.399
dot env

3:20:53.520,3:20:58.319
dot twilio underscore account

3:20:56.399,3:21:00.640
underscore sid

3:20:58.319,3:21:03.760
we don't want to simply paste it here

3:21:00.640,3:21:06.000
because we need this data to be secure

3:21:03.760,3:21:10.239
then we're also going to need the odd

3:21:06.000,3:21:13.600
token so we can say const odd token

3:21:10.239,3:21:15.840
is equal to process dot env

3:21:13.600,3:21:19.600
dot twilio

3:21:15.840,3:21:22.239
underscore auth underscore token

3:21:19.600,3:21:25.520
and finally we can set up our twilio

3:21:22.239,3:21:29.279
client by saying const twilio

3:21:25.520,3:21:30.560
client is equal to require

3:21:29.279,3:21:33.120
twilio

3:21:30.560,3:21:35.359
and then we call it one more time

3:21:33.120,3:21:39.120
pass in the account sid

3:21:35.359,3:21:41.040
and the aud token great this is our

3:21:39.120,3:21:43.200
twilio account which is going to allow

3:21:41.040,3:21:46.239
us to make twilio requests

3:21:43.200,3:21:48.640
so let's set up our process.env we have

3:21:46.239,3:21:51.680
to add the twilio account sid and the

3:21:48.640,3:21:53.760
twilio token so back in here

3:21:51.680,3:21:56.160
just a bit below we can add these two

3:21:53.760,3:21:57.439
variables and now we can copy the values

3:21:56.160,3:21:59.600
from the web

3:21:57.439,3:22:01.920
to do that we can go back and you can

3:21:59.600,3:22:03.439
copy the account sid number straight

3:22:01.920,3:22:05.439
from here

3:22:03.439,3:22:07.760
let's paste it right there

3:22:05.439,3:22:09.600
and then you can click show auth token

3:22:07.760,3:22:12.160
right here and then you can copy and

3:22:09.600,3:22:14.560
paste the auth token as well

3:22:12.160,3:22:16.880
so let's paste it here

3:22:14.560,3:22:19.359
great with that we are done with the

3:22:16.880,3:22:20.800
initial setup now we can use this twilio

3:22:19.359,3:22:22.720
client

3:22:20.800,3:22:25.600
the way we're going to do this is we're

3:22:22.720,3:22:28.239
going to set up one more route

3:22:25.600,3:22:30.560
we are going to do this using webhooks

3:22:28.239,3:22:32.880
stream is going to trigger a specific

3:22:30.560,3:22:35.120
endpoint on our server and then we're

3:22:32.880,3:22:38.160
going to send a message

3:22:35.120,3:22:40.000
that endpoint is going to be app.post

3:22:38.160,3:22:42.399
and then inside of here we can set up

3:22:40.000,3:22:43.600
our route which is going to be simply

3:22:42.399,3:22:46.720
slash

3:22:43.600,3:22:50.160
we also get the request and the response

3:22:46.720,3:22:51.840
of course inside of a callback function

3:22:50.160,3:22:55.040
rec and res

3:22:51.840,3:22:56.960
and we have a function right here

3:22:55.040,3:22:59.200
inside of that function we are going to

3:22:56.960,3:23:01.920
receive some data from stream more

3:22:59.200,3:23:03.120
specifically we can say const in curly

3:23:01.920,3:23:05.840
braces

3:23:03.120,3:23:09.359
we are going to type in message

3:23:05.840,3:23:10.800
also user colon is equal to sender we're

3:23:09.359,3:23:13.920
going to get the user who's sending the

3:23:10.800,3:23:15.760
message and then also the type and

3:23:13.920,3:23:18.319
finally members

3:23:15.760,3:23:19.680
we are getting all of this data from rec

3:23:18.319,3:23:21.600
dot body

3:23:19.680,3:23:24.000
that's the data that stream going to put

3:23:21.600,3:23:25.600
into our endpoint

3:23:24.000,3:23:28.160
this part cannot be tested in the

3:23:25.600,3:23:30.080
development mode we have to code it out

3:23:28.160,3:23:33.200
deploy the project and then we'll be

3:23:30.080,3:23:35.520
able to test it out once it's deployed

3:23:33.200,3:23:37.760
so let's code it right now it's not that

3:23:35.520,3:23:40.160
complicated i promise

3:23:37.760,3:23:41.279
we are going to add an if statement and

3:23:40.160,3:23:46.479
say if

3:23:41.279,3:23:48.960
type is equal to a string of message.new

3:23:46.479,3:23:51.040
that means if the event is the creation

3:23:48.960,3:23:53.439
of a new message

3:23:51.040,3:23:55.120
if that is the case we want to loop over

3:23:53.439,3:23:57.760
all of the members that belong to the

3:23:55.120,3:23:59.439
chat the message was sent to so we can

3:23:57.760,3:24:02.000
say members

3:23:59.439,3:24:04.960
dot for each

3:24:02.000,3:24:07.040
in there we have a callback function

3:24:04.960,3:24:08.880
and for each member

3:24:07.040,3:24:10.560
we want to run the following block of

3:24:08.880,3:24:12.640
code

3:24:10.560,3:24:14.560
we want to first extract the data from

3:24:12.640,3:24:16.800
this member and we can do that by

3:24:14.560,3:24:19.760
destructuring and then simply calling

3:24:16.800,3:24:22.720
the user variable from that member

3:24:19.760,3:24:25.040
then we can check if the user is online

3:24:22.720,3:24:26.200
so we can say if

3:24:25.040,3:24:27.760
not

3:24:26.200,3:24:29.760
user.online

3:24:27.760,3:24:31.840
we only want to send messages to the

3:24:29.760,3:24:33.359
people who are not online it wouldn't

3:24:31.840,3:24:35.439
make sense that people are using our

3:24:33.359,3:24:36.560
chat and we also send them messages to

3:24:35.439,3:24:38.880
their phone

3:24:36.560,3:24:40.880
and only if they're offline only then

3:24:38.880,3:24:45.600
are they going to get the message

3:24:40.880,3:24:47.120
so we can run twilio client dot messages

3:24:45.600,3:24:48.800
dot create

3:24:47.120,3:24:50.640
that's a function that takes in an

3:24:48.800,3:24:52.800
object as options

3:24:50.640,3:24:55.439
inside of there we can specify the body

3:24:52.800,3:24:57.600
of the message so let's do a template

3:24:55.439,3:25:00.399
string that's going to say

3:24:57.600,3:25:01.600
you have a new message

3:25:00.399,3:25:04.640
from

3:25:01.600,3:25:07.680
dollar sign curly braces message dot

3:25:04.640,3:25:10.239
user dot full name

3:25:07.680,3:25:11.120
and then we can put a dash and simply

3:25:10.239,3:25:13.279
say

3:25:11.120,3:25:15.120
again dynamicblock

3:25:13.279,3:25:16.319
message.txt

3:25:15.120,3:25:18.800
so this is going to give them the

3:25:16.319,3:25:21.040
message to their sms

3:25:18.800,3:25:22.399
then we have to add a comma and specify

3:25:21.040,3:25:25.279
the messaging

3:25:22.399,3:25:27.120
service sid

3:25:25.279,3:25:28.560
we can find this by going to twilio's

3:25:27.120,3:25:30.560
dashboard

3:25:28.560,3:25:33.359
right here you can see that we have a

3:25:30.560,3:25:35.520
special medical pager service id so we

3:25:33.359,3:25:37.120
can simply copy and paste it

3:25:35.520,3:25:39.200
let's copy it

3:25:37.120,3:25:40.800
and instead of simply pasting it here

3:25:39.200,3:25:41.840
we're going to do the same thing we did

3:25:40.800,3:25:43.760
before

3:25:41.840,3:25:45.279
that's going to be const

3:25:43.760,3:25:46.720
messaging

3:25:45.279,3:25:49.200
service

3:25:46.720,3:25:53.040
sid is equal to

3:25:49.200,3:25:57.439
dot env dot twilio underscore

3:25:53.040,3:26:00.160
messaging underscore service sid

3:25:57.439,3:26:03.760
so let's go to our env and then inside

3:26:00.160,3:26:05.920
of here we want to paste that variable

3:26:03.760,3:26:09.359
and set that equal to

3:26:05.920,3:26:10.319
twilio messaging service sid

3:26:09.359,3:26:12.560
great

3:26:10.319,3:26:14.319
now we can use that variable right

3:26:12.560,3:26:17.120
inside of here

3:26:14.319,3:26:19.279
and the last thing is the to property

3:26:17.120,3:26:22.239
who do we want to send our message to

3:26:19.279,3:26:24.319
and that is going to be user dot phone

3:26:22.239,3:26:26.080
number that's the reason why we're

3:26:24.319,3:26:27.680
requesting the users to enter their

3:26:26.080,3:26:29.439
phone numbers at the registration

3:26:27.680,3:26:32.000
process

3:26:29.439,3:26:34.160
so once the message is sent we have the

3:26:32.000,3:26:35.760
dot then which is going to have a

3:26:34.160,3:26:37.279
callback function

3:26:35.760,3:26:39.680
if the message has been sent

3:26:37.279,3:26:41.279
successfully we can simply console log

3:26:39.680,3:26:44.080
message sent

3:26:41.279,3:26:46.720
and we have a dot catch if we have an

3:26:44.080,3:26:48.560
error we can simply console.log the

3:26:46.720,3:26:51.359
error

3:26:48.560,3:26:55.120
this is going to be almost it but think

3:26:51.359,3:26:56.960
about it we are also a member or a user

3:26:55.120,3:26:59.120
and we don't want to send the message to

3:26:56.960,3:27:02.319
ourselves when we send the message via

3:26:59.120,3:27:04.880
stream so just before the for each i'm

3:27:02.319,3:27:07.520
going to run the dot filter method

3:27:04.880,3:27:10.319
that filter accepts a callback function

3:27:07.520,3:27:12.720
where we get a member

3:27:10.319,3:27:14.880
and then we want to filter out ourselves

3:27:12.720,3:27:18.399
so we can say if member

3:27:14.880,3:27:20.880
dot user underscore id is not equal to

3:27:18.399,3:27:22.720
sender dot id

3:27:20.880,3:27:24.399
this is simply going to filter ourselves

3:27:22.720,3:27:26.239
out and then we can send the message to

3:27:24.399,3:27:28.560
everybody else

3:27:26.239,3:27:30.399
finally if everything goes right we can

3:27:28.560,3:27:31.680
do res dot status

3:27:30.399,3:27:34.319
200

3:27:31.680,3:27:37.359
and then dot send we can simply say

3:27:34.319,3:27:40.319
something like message sent

3:27:37.359,3:27:43.200
and we can also return that and down

3:27:40.319,3:27:45.279
below if it's not a new message if it's

3:27:43.200,3:27:46.800
another kind of event in that case we

3:27:45.279,3:27:51.760
can say return

3:27:46.800,3:27:54.640
rest that status 200 and we can say

3:27:51.760,3:27:56.880
not a new message

3:27:54.640,3:27:58.880
request it was just something different

3:27:56.880,3:28:01.520
somebody else has read a message or gone

3:27:58.880,3:28:03.600
online stream has events for all of

3:28:01.520,3:28:05.840
these different types but we are only

3:28:03.600,3:28:08.560
tracking the new message request

3:28:05.840,3:28:10.319
and this is it this is the entire twilio

3:28:08.560,3:28:12.800
code that you need to put there to

3:28:10.319,3:28:15.760
successfully send real messages from a

3:28:12.800,3:28:18.560
real phone number to real people

3:28:15.760,3:28:20.800
they just make it so easy with that said

3:28:18.560,3:28:23.040
let's take one last look into what we've

3:28:20.800,3:28:25.439
built see if there are any other issues

3:28:23.040,3:28:27.600
and if there are none we are ready to

3:28:25.439,3:28:30.479
deploy this project

3:28:27.600,3:28:32.960
i went ahead and did some more testing

3:28:30.479,3:28:33.920
messages emojis checked

3:28:32.960,3:28:36.880
threads

3:28:33.920,3:28:39.200
let's check them out hello threads work

3:28:36.880,3:28:40.640
as well you can reply to messages

3:28:39.200,3:28:41.439
sending images

3:28:40.640,3:28:44.319
check

3:28:41.439,3:28:45.359
we can also send gifs and embed youtube

3:28:44.319,3:28:48.239
videos

3:28:45.359,3:28:50.560
everything is working perfectly

3:28:48.239,3:28:52.479
with that said we are finally ready to

3:28:50.560,3:28:54.560
deploy this project

3:28:52.479,3:28:57.239
let's first deploy the back end of her

3:28:54.560,3:29:00.239
project to heroku you can head to

3:28:57.239,3:29:02.800
heroku.com and then log in or sign up if

3:29:00.239,3:29:04.399
you don't have an account already

3:29:02.800,3:29:07.120
when you sign up you'll be greeted with

3:29:04.399,3:29:08.960
a page that looks like this in here on

3:29:07.120,3:29:11.680
the top right you'll be able to click

3:29:08.960,3:29:14.960
new to create a new app

3:29:11.680,3:29:16.960
i'm going to type medical dash pager

3:29:14.960,3:29:18.160
and i'm going to choose my region as

3:29:16.960,3:29:20.960
europe

3:29:18.160,3:29:23.040
finally you can click create app

3:29:20.960,3:29:25.600
once that part is done you simply need

3:29:23.040,3:29:27.600
to follow the instructions right here

3:29:25.600,3:29:31.120
first you need to download and install

3:29:27.600,3:29:33.120
the heroku cli if you haven't already

3:29:31.120,3:29:35.840
you just need to click that link

3:29:33.120,3:29:38.479
scroll down and download and install it

3:29:35.840,3:29:40.160
for your own operating system

3:29:38.479,3:29:42.399
now that you have downloaded and

3:29:40.160,3:29:45.040
installed the heroku cli we can run the

3:29:42.399,3:29:47.040
command heroku login

3:29:45.040,3:29:49.840
back in our code we can open up our

3:29:47.040,3:29:52.960
terminal and then i'm going to stop both

3:29:49.840,3:29:54.800
servers from running by pressing ctrl c

3:29:52.960,3:29:57.359
and then y

3:29:54.800,3:29:58.720
now i'm going to delete one and clear

3:29:57.359,3:30:01.760
the server

3:29:58.720,3:30:03.840
okay now we are on the medical pager

3:30:01.760,3:30:06.319
forward slash server so make sure that

3:30:03.840,3:30:09.439
you're on the server directory we can cd

3:30:06.319,3:30:11.520
one time and now if we do ls you'll see

3:30:09.439,3:30:14.160
that we have client and server

3:30:11.520,3:30:16.000
make sure that you cd into server

3:30:14.160,3:30:17.040
because right now we are deploying the

3:30:16.000,3:30:21.840
back end

3:30:17.040,3:30:24.239
so now let's run heroku login

3:30:21.840,3:30:26.319
and then press enter

3:30:24.239,3:30:28.479
you will be prompted to log into heroku

3:30:26.319,3:30:30.479
cli so click login

3:30:28.479,3:30:32.720
and then you can close that page and go

3:30:30.479,3:30:33.840
back to the code there we go we are

3:30:32.720,3:30:35.359
logged in

3:30:33.840,3:30:37.680
it might be a good idea to put the

3:30:35.359,3:30:39.520
editor on the side so that we can view

3:30:37.680,3:30:41.120
both the instructions and the terminal

3:30:39.520,3:30:44.000
at the same time

3:30:41.120,3:30:46.880
there we go we've just run heroku login

3:30:44.000,3:30:49.760
and then we have to simply run git init

3:30:46.880,3:30:51.040
so right here i'm going to run git init

3:30:49.760,3:30:54.239
again make sure that you're in the

3:30:51.040,3:30:55.439
server directory and then run heroku get

3:30:54.239,3:30:57.760
remote

3:30:55.439,3:31:00.479
and then a medical pager

3:30:57.760,3:31:03.760
before you run git add make sure to go

3:31:00.479,3:31:07.040
to your server and then right there add

3:31:03.760,3:31:09.120
git ignore so right here let's add a dot

3:31:07.040,3:31:11.600
git ignore file

3:31:09.120,3:31:14.080
inside of here you can simply type node

3:31:11.600,3:31:16.399
underscore modules this is going to make

3:31:14.080,3:31:19.200
sure to ignore the node modules and they

3:31:16.399,3:31:21.600
are not going to be pushed to heroku

3:31:19.200,3:31:23.600
now that we've done that we can run git

3:31:21.600,3:31:26.880
add

3:31:23.600,3:31:29.600
and finally git commit and they say make

3:31:26.880,3:31:31.840
it better we definitely will

3:31:29.600,3:31:34.239
now that that is done we can simply run

3:31:31.840,3:31:36.319
git push heroku master

3:31:34.239,3:31:38.160
it's going to take about half a minute

3:31:36.319,3:31:40.880
and your project should be up and

3:31:38.160,3:31:43.040
running on the web there we go the

3:31:40.880,3:31:45.680
application is live we can go back to

3:31:43.040,3:31:47.600
our medical pager and simply click open

3:31:45.680,3:31:50.560
app

3:31:47.600,3:31:52.880
and if you see the hello world in little

3:31:50.560,3:31:55.200
letters at the top left that means that

3:31:52.880,3:31:57.600
we reached our endpoint on our server

3:31:55.200,3:31:59.760
and if this route works all of the other

3:31:57.600,3:32:01.040
ones are working as well

3:31:59.760,3:32:04.239
great

3:32:01.040,3:32:06.239
now we have this backend url that's your

3:32:04.239,3:32:08.960
entire backend url and we need to

3:32:06.239,3:32:11.120
connect that to stream and also to our

3:32:08.960,3:32:12.800
front end so let's first go to our

3:32:11.120,3:32:14.800
stream

3:32:12.800,3:32:16.800
in here we'll have to go to chat and

3:32:14.800,3:32:18.720
then overview

3:32:16.800,3:32:21.920
we'll have to scroll down

3:32:18.720,3:32:24.319
and we'll have to enter the url under

3:32:21.920,3:32:26.720
the webhook url this is going to allow

3:32:24.319,3:32:29.359
us to send sms messages

3:32:26.720,3:32:32.319
great simply do it like this without the

3:32:29.359,3:32:35.840
forward slash at the end and paste it

3:32:32.319,3:32:38.160
finally you have to click save

3:32:35.840,3:32:39.920
let's open up our frontend code we can

3:32:38.160,3:32:42.640
go to the client

3:32:39.920,3:32:45.279
source and that's going to be inside of

3:32:42.640,3:32:47.120
the components and then auth inside of

3:32:45.279,3:32:51.200
here you can see that we have our own

3:32:47.120,3:32:53.680
localhost 5000 so paste your new url

3:32:51.200,3:32:54.800
right here and make sure to have the odd

3:32:53.680,3:32:57.359
at the end

3:32:54.800,3:33:00.720
for me that's going to be medical pager

3:32:57.359,3:33:02.560
heroku app.com forward slash auth

3:33:00.720,3:33:04.640
that's the new server url we want to

3:33:02.560,3:33:05.840
make the requests to

3:33:04.640,3:33:07.840
great

3:33:05.840,3:33:09.680
we are going to deploy the frontend part

3:33:07.840,3:33:13.439
using netlify

3:33:09.680,3:33:15.439
we can go to login or sign up

3:33:13.439,3:33:16.840
and once you're in your account you'll

3:33:15.439,3:33:19.439
be able to click

3:33:16.840,3:33:22.160
sites and then here you'll be able to

3:33:19.439,3:33:24.479
drag and drop your build folder

3:33:22.160,3:33:25.279
so how can we create a build

3:33:24.479,3:33:27.920
well

3:33:25.279,3:33:29.680
let's open up our terminal

3:33:27.920,3:33:32.880
and this time we'll have to be in the

3:33:29.680,3:33:35.439
client side so click cd dot dot to get

3:33:32.880,3:33:38.319
back to the root folder and then cd

3:33:35.439,3:33:41.920
client to get to our client side

3:33:38.319,3:33:43.439
now that you're here simply run npm run

3:33:41.920,3:33:45.600
build

3:33:43.439,3:33:48.720
this is going to take about a minute and

3:33:45.600,3:33:51.200
you should see a new build folder appear

3:33:48.720,3:33:53.040
there we go if you can see this message

3:33:51.200,3:33:54.720
that means that the project has been

3:33:53.040,3:33:56.640
built successfully

3:33:54.720,3:34:00.319
now we can right click the build folder

3:33:56.640,3:34:02.479
and click reveal in file explorer

3:34:00.319,3:34:05.680
once you do that you can simply drag and

3:34:02.479,3:34:08.239
drop your build folder right here

3:34:05.680,3:34:10.319
and it's going to be built right away as

3:34:08.239,3:34:13.120
you can see it took seconds

3:34:10.319,3:34:16.160
we can go under domain settings and then

3:34:13.120,3:34:18.319
options and edit the site name in here

3:34:16.160,3:34:19.840
you can do something like medical pager

3:34:18.319,3:34:21.040
but of course you can do anything that

3:34:19.840,3:34:23.760
you prefer

3:34:21.040,3:34:26.080
in this case medical pager is taken so

3:34:23.760,3:34:29.920
i'm just going to type jsm

3:34:26.080,3:34:32.479
and there we go our website is now live

3:34:29.920,3:34:35.120
there is our great form let's try to log

3:34:32.479,3:34:37.600
in as one of the users for example dr

3:34:35.120,3:34:40.560
smith i'm going to enter his username

3:34:37.600,3:34:43.520
and password and click sign in

3:34:40.560,3:34:45.439
and there we go we are live

3:34:43.520,3:34:47.279
but this is so exciting because this is

3:34:45.439,3:34:48.880
now live on the web

3:34:47.279,3:34:51.120
that means that you can use this for

3:34:48.880,3:34:54.160
your own purposes to create a group chat

3:34:51.120,3:34:56.000
with friends colleagues or anybody else

3:34:54.160,3:34:58.640
you can create entire communities of

3:34:56.000,3:35:01.359
people that can chat inside of this chat

3:34:58.640,3:35:04.560
create channels direct messages send

3:35:01.359,3:35:06.239
gifs and do all that other good stuff of

3:35:04.560,3:35:08.640
course all of this has been made

3:35:06.239,3:35:11.120
possible by stream

3:35:08.640,3:35:13.279
so huge thanks to stream not only for

3:35:11.120,3:35:14.960
sponsoring this video but also for

3:35:13.279,3:35:16.960
creating such a phenomenal piece of

3:35:14.960,3:35:19.840
software that allows you to create chat

3:35:16.960,3:35:21.600
applications and feeds professionally

3:35:19.840,3:35:23.600
and scalably

3:35:21.600,3:35:26.239
with that said that's going to be the

3:35:23.600,3:35:28.479
end of this video this was quite a long

3:35:26.239,3:35:30.319
one so congratulations to you for coming

3:35:28.479,3:35:32.560
to the end of this video and building

3:35:30.319,3:35:34.160
this project out i'm sure you've learned

3:35:32.560,3:35:36.080
a lot

3:35:34.160,3:35:38.960
there are many more interesting projects

3:35:36.080,3:35:40.720
coming up on the js mastery pro platform

3:35:38.960,3:35:42.399
so if you're looking forward to that

3:35:40.720,3:35:44.399
definitely make sure to put your link

3:35:42.399,3:35:45.760
into the mailing list to be sure to be

3:35:44.399,3:35:47.359
notified

3:35:45.760,3:35:50.000
once again thank you so much for

3:35:47.359,3:35:53.239
watching stay healthy and see you in the

3:35:50.000,3:35:53.239
next one

3:35:53.390,3:36:03.630
[Music]

